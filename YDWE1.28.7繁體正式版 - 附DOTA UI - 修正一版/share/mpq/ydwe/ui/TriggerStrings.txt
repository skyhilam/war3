











[TriggerEventStrings]

// 觸發器事件字符串
// Special events not defined in common.j,
// handled internally by the editor

MapInitializationEvent="地圖初始化"
MapInitializationEvent="地圖初始化"
MapInitializationEventHint="該事件發生在讀取地圖時."







// Game events

TriggerRegisterVariableEvent="實數變量事件"
TriggerRegisterVariableEvent=~變量" 的值 ",~Operation," ",~值
TriggerRegisterVariableEventHint="這個事件只適用於實數類型的變量."

TriggerRegisterGameLoadedEventBJ="遊戲讀檔"
TriggerRegisterGameLoadedEventBJ="讀取遊戲存檔"
TriggerRegisterGameLoadedEventBJHint="當遊戲讀取完畢時,該事件生效."

TriggerRegisterGameSavedEventBJ="遊戲存檔"
TriggerRegisterGameSavedEventBJ="保存遊戲存檔"
TriggerRegisterGameSavedEventBJHint="在切入保存遊戲界面前,該事件生效."

TriggerRegisterShowSkillEventBJ="英雄技能按鈕被點擊"
TriggerRegisterShowSkillEventBJ="英雄技能按鈕被點擊"
TriggerRegisterShowSkillEventBJHint=

TriggerRegisterBuildSubmenuEventBJ="建造建築按鈕被點擊"
TriggerRegisterBuildSubmenuEventBJ="建造建築按鈕被點擊"
TriggerRegisterBuildSubmenuEventBJHint=

TriggerRegisterGameEvent="比賽遊戲事件"
TriggerRegisterGameEvent="該遊戲將在 ",~Event Type," 後結束"
TriggerRegisterGameEventHint="該事件只出現在Battle.net的自動匹配遊戲."


// Timer events
TriggerRegisterGameStateEventTimeOfDay="遊戲時間事件"
TriggerRegisterGameStateEventTimeOfDay="當遊戲時間 ",~Operation," ",~時間
TriggerRegisterGameStateEventTimeOfDayHint="遊戲時間採用24小時制.早上從6:00開始,下午從18:00開始."

TriggerRegisterTimerEventSingle="遊戲計時(單次)"
TriggerRegisterTimerEventSingle="當遊戲逝去 ",~Time," 秒"
TriggerRegisterTimerEventSingleHint="從事件開始的那一刻開始計時."

TriggerRegisterTimerEventPeriodic="遊戲計時(循環)"
TriggerRegisterTimerEventPeriodic="每當遊戲逝去 ",~Time," 秒"
TriggerRegisterTimerEventPeriodicHint="從事件開始的那一刻開始計時,直到計時完畢後雙重新開始計時."

TriggerRegisterTimerExpireEventBJ="計時器到期"
TriggerRegisterTimerExpireEventBJ=~計時器," 到期"
TriggerRegisterTimerExpireEventBJHint="當計時器到0時觸發該事件. 循環計時器可以多次觸發該事件. 使用'事件響應 - 到期的計時器'來獲取該計時器."


// Dialog events
TriggerRegisterDialogEventBJ="對話框被點擊"
TriggerRegisterDialogEventBJ=~對話框," 被點擊"
TriggerRegisterDialogEventBJHint="通過 '事件響應 - 被點擊的對話框' 操作事件中的對話框."

TriggerRegisterDialogButtonEvent="對話框按鈕被點擊 [R]"
TriggerRegisterDialogButtonEvent=~對話框按鈕," 被點擊"
TriggerRegisterDialogButtonEventHint="指定對話框按鈕被點擊,該事件一般需要在其他觸發為其添加."


// Trackable events
TriggerRegisterTrackableHitEvent="鼠標點擊可追蹤物 [R]"
TriggerRegisterTrackableHitEvent="鼠標點擊 ",~可追蹤物
TriggerRegisterTrackableHitEventHint=

TriggerRegisterTrackableTrackEvent="鼠標移動到追蹤對象 [R]"
TriggerRegisterTrackableTrackEvent="鼠標移動到 ",~可追蹤物
TriggerRegisterTrackableTrackEventHint=

// Player events
TriggerRegisterPlayerChatEvent="輸入聊天信息"
TriggerRegisterPlayerChatEvent=~玩家," 輸入 ",~Text," ,信息過濾方式 ",~Match Type
TriggerRegisterPlayerChatEventHint="事件ID是(096)"

TriggerRegisterPlayerEventEndCinematic="按下Esc鍵"
TriggerRegisterPlayerEventEndCinematic=~玩家," 按下Esc鍵(跳過電影)"
TriggerRegisterPlayerEventEndCinematicHint="該事件在玩家按下'Escape'鍵時觸發(可能是玩家要跳過當前所播放的電影)."

TriggerRegisterPlayerSelectionEventBJ="選擇單位事件"
TriggerRegisterPlayerSelectionEventBJ=~玩家," ",~Selects/Deselects," 一個單位"
TriggerRegisterPlayerSelectionEventBJHint="通過'事件回應 - 觸發單位' 操作被玩家選擇的單位."

TriggerRegisterPlayerKeyEventBJ="鍵盤事件"
TriggerRegisterPlayerKeyEventBJ=~玩家," ",~Presses/Releases," ",~Key," "
TriggerRegisterPlayerKeyEventBJHint="目前遊戲只支持'Up/Down/Left/Right'四個方向鍵."

TriggerRegisterPlayerStateEvent="屬性事件"
TriggerRegisterPlayerStateEvent=~玩家," 的 ",~Property," 屬性 ",~Operation," ",~值
TriggerRegisterPlayerStateEventHint=""

TriggerRegisterPlayerEventAllianceChanged="聯盟狀態事件(任意狀態)"
TriggerRegisterPlayerEventAllianceChanged=~玩家," 改變聯盟狀態設定"
TriggerRegisterPlayerEventAllianceChangedHint=

TriggerRegisterPlayerAllianceChange="聯盟狀態更改(指定項目)"
TriggerRegisterPlayerAllianceChange=~Player," 更改 ",~Alliance Type," 設置"



TriggerRegisterPlayerAllianceChangeHint=


TriggerRegisterPlayerEventVictory="遊戲勝利"
TriggerRegisterPlayerEventVictory=~玩家," 勝利後離開遊戲"
TriggerRegisterPlayerEventVictoryHint=

TriggerRegisterPlayerEventDefeat="遊戲失敗"
TriggerRegisterPlayerEventDefeat=~玩家," 失敗後離開遊戲"
TriggerRegisterPlayerEventDefeatHint=

TriggerRegisterPlayerEventLeave="離開遊戲"
TriggerRegisterPlayerEventLeave=~玩家," 離開遊戲"
TriggerRegisterPlayerEventLeaveHint="這個事件通過玩家離開遊戲來開啟."


// Destructible events
TriggerRegisterDeathEvent="可破壞物死亡"
TriggerRegisterDeathEvent=~可破壞物," 死亡"
TriggerRegisterDeathEventHint="使用'事件響應 - 死亡的可破壞物'來獲取死亡物體."

TriggerRegisterDestDeathInRegionEvent="可破壞物在區域內死亡(矩形區域)"
TriggerRegisterDestDeathInRegionEvent="可破壞物在 ",~矩形區域," 內死亡"
TriggerRegisterDestDeathInRegionEventHint="默認該事件只能監視最多64個可破壞物. 可以使用'設置 bj_destInRegionDiesCount'來設置該值. 不建議新手使用該觸發."


// Item events
TriggerRegisterItemDeathEvent="物品被破壞 [R]"
TriggerRegisterItemDeathEvent=~物品," 被破壞"
TriggerRegisterItemDeathEventHint=

//YD Event Trigger
YDWESyStemAnyUnitDamagedRegistTrigger="任意單位傷害事件"
YDWESyStemAnyUnitDamagedRegistTrigger="任意單位 接受傷害"
YDWESyStemAnyUnitDamagedRegistTriggerHint="若觸發器動作裡有對單位造成傷害動作，會引起死循環，最好加入條件判斷或在傷害前關閉當前觸發器。不推薦新手使用。"

YDWESyStemItemUnmovableRegistTrigger="任意單位移動物品事件"
YDWESyStemItemUnmovableRegistTrigger="任意單位 移動物品欄裡的物品"
YDWESyStemItemUnmovableRegistTriggerHint="若觸發器動作裡有移動物品的動作，會引起死循環，最好將移動物品的動作放到別的觸發器內或移動物品前關閉當前觸發器。"

YDWESyStemItemCombineRegistTrigger="任意單位合成物品事件"
YDWESyStemItemCombineRegistTrigger="任意單位 合成一件物品"
YDWESyStemItemCombineRegistTriggerHint="用來響應物品合成系統，當有物品被合成時，可以用‘最後合成的物品’捕捉到；合成該物品的單位則可用‘觸發單位’捕捉到"

YDWESyStemAbilityCastingOverRegistTrigger="任意單位施放特殊技能結束"
YDWESyStemAbilityCastingOverRegistTrigger="任意單位施放特殊技能 ",~特殊技能," 結束"
YDWESyStemAbilityCastingOverRegistTriggerHint="用來響應跳躍、環繞、鉤子等YDWE提供的特殊技能，可用‘最後結束施放特殊技能的單位’來捕捉施放技能單位"

// Unit events
TriggerRegisterUnitEvent="指定單位事件""
TriggerRegisterUnitEvent=~指定單位," ",~事件
TriggerRegisterUnitEventHint=

TriggerRegisterPlayerUnitEventSimple="玩家單位事件"
TriggerRegisterPlayerUnitEventSimple=~Player," 的單位 ",~Event
TriggerRegisterPlayerUnitEventSimpleHint=
//TriggerRegisterPlayerUnitEventSimpleHint="若使用接受傷害事件，而觸發器動作裡有對單位造成傷害動作時，容易引起死循環，最好加入條件判斷或在傷害前關閉當前觸發器。"

TriggerRegisterAnyUnitEventBJ="任意單位事件"
TriggerRegisterAnyUnitEventBJ="任意單位 ",~Event
TriggerRegisterAnyUnitEventBJHint=
//TriggerRegisterAnyUnitEventBJHint="若使用接受傷害事件，而觸發器動作裡有對單位造成傷害動作時，容易引起死循環，最好加入條件判斷或在傷害前關閉當前觸發器。"

TriggerRegisterEnterRectSimple="單位進入矩形區域"
TriggerRegisterEnterRectSimple="任意單位進入 ",~矩形區域
TriggerRegisterEnterRectSimpleHint="使用'事件響應 - 進入的單位'來響應進入該區域的單位. 事實上是創建不規則區域，並註冊單位進入不規則區域事件,所以之後改動該矩形區域對事件不會產生任何影響."

TriggerRegisterLeaveRectSimple="單位離開矩形區域"
TriggerRegisterLeaveRectSimple="任意單位離開 ",~矩形區域
TriggerRegisterLeaveRectSimpleHint="使用'事件響應 - 離開的單位'來響應離開該區域的單位. 事實上是創建不規則區域，並註冊單位離開不規則區域事件,所以之後改動該矩形區域對事件不會產生任何影響."

TriggerRegisterEnterRegionSimple="單位進入不規則區域 [R]"
TriggerRegisterEnterRegionSimple="任意單位進入 ",~區域
TriggerRegisterEnterRegionSimpleHint="使用'事件響應 - 進入的單位'來響應進入該區域的單位. 該事件需要在其他觸發為其添加."

TriggerRegisterLeaveRegionSimple="單位離開不規則區域 [R]"
TriggerRegisterLeaveRegionSimple="任意單位離開 ",~區域
TriggerRegisterLeaveRegionSimpleHint="使用'事件響應 - 離開的單位'來響應離開該區域的單位. 該事件需要在其他觸發為其添加."

TriggerRegisterEnterRegion="單位進入不規則區域(指定條件) [R]"
TriggerRegisterEnterRegion="單位進入 ",~區域," 並滿足 ",~條件
TriggerRegisterEnterRegionHint="使用'事件響應 - 進入的單位'來響應進入該區域的單位. 該事件需要在其他觸發為其添加."

TriggerRegisterLeaveRegion="單位離開不規則區域(指定條件) [R]"
TriggerRegisterLeaveRegion="單位離開 ",~區域," 並滿足 ",~條件
TriggerRegisterLeaveRegionHint="使用'事件響應 - 離開的單位'來響應離開該區域的單位. 該事件需要在其他觸發為其添加."

TriggerRegisterUnitInRangeSimple="進入指定單位的範圍"
TriggerRegisterUnitInRangeSimple="任意單位進入 ",~範圍," 以 ",~Unit," 為中心的範圍內"
TriggerRegisterUnitInRangeSimpleHint="通過 '事件響應 - 觸發單位' 來獲取進入範圍的單位."

TriggerRegisterUnitLifeEvent="生命值變化"
TriggerRegisterUnitLifeEvent=~指定單位," 的生命值變為 ",~Operation," ",~Value
TriggerRegisterUnitLifeEventHint="從不成立變為成立時觸發該事件. 注意:該參照值在註冊事件時即被確定為常量,是不會變動的."

TriggerRegisterUnitManaEvent="魔法值變化"
TriggerRegisterUnitManaEvent=~指定單位," 的魔法值變為",~Operation," ",~Value
TriggerRegisterUnitManaEventHint="從不成立變為成立時觸發該事件. 注意:該參照值在註冊事件時即被確定為常量,是不會變動的."



//***************************************************************************
[TriggerConditionStrings]

             ="自定義代碼 [C]"
             ="代碼: ",~Jass代碼
             Hint="條件內不可輸入局部變量,如有必要,可用全局變量或GetTriggerUnit()之類的代替"

OperatorCompareBoolean="布爾表達式"
OperatorCompareBoolean=~表達式A," ",~Operator," ",~表達式B
OperatorCompareBooleanHint=

OperatorCompareAbilityId="技能"
OperatorCompareAbilityId=~Value," ",~Operator," ",~Value
OperatorCompareAbilityIdHint=

OperatorCompareBuffId="魔法傚果"
OperatorCompareBuffId=~魔法傚果," ",~Operator," ",~魔法傚果
OperatorCompareBuffIdHint=

OperatorCompareDestructible="可破壞物"
OperatorCompareDestructible=~可破壞物," ",~Operator," ",~可破壞物
OperatorCompareDestructibleHint=

OperatorCompareDestructableCode="可破壞物類型"
OperatorCompareDestructableCode=~Value," ",~Operator," ",~Value
OperatorCompareDestructableCodeHint=

OperatorCompareDialog="對話框 [R]"
OperatorCompareDialog=~對話框," ",~Operator," ",~對話框
OperatorCompareDialogHint=

OperatorCompareButton="對話框按鈕"
OperatorCompareButton=~對話框按鈕," ",~Operator," ",~對話框按鈕
OperatorCompareButtonHint=

OperatorCompareGameDifficulty="遊戲難度"
OperatorCompareGameDifficulty=~Value," ",~Operator," ",~Value
OperatorCompareGameDifficultyHint=

OperatorCompareGameSpeed="遊戲速度"
OperatorCompareGameSpeed=~Value," ",~Operator," ",~Value
OperatorCompareGameSpeedHint=

OperatorCompareHeroSkill="學習技能"
OperatorCompareHeroSkill=~Value," ",~Operator," ",~Value
OperatorCompareHeroSkillHint=

OperatorCompareInteger="整數"
OperatorCompareInteger=~Value," ",~Operator," ",~Value
OperatorCompareIntegerHint=

OperatorCompareItem="物品"
OperatorCompareItem=~物品," ",~Operator," ",~物品
OperatorCompareItemHint=

OperatorCompareItemType="物品分類"
OperatorCompareItemType=~Value," ",~Operator," ",~Value
OperatorCompareItemTypeHint=

OperatorCompareItemCode="物品類型"
OperatorCompareItemCode=~Value," ",~Operator," ",~Value
OperatorCompareItemCodeHint=

OperatorCompareMeleeDifficulty="對戰AI難度"
OperatorCompareMeleeDifficulty=~Value," ",~Operator," ",~Value
OperatorCompareMeleeDifficultyHint=

OperatorCompareOrderCode="命令ID"
OperatorCompareOrderCode=~Value," ",~Operator," ",~Value
OperatorCompareOrderCodeHint=

OperatorComparePlayer="玩家"
OperatorComparePlayer=~Value," ",~Operator," ",~Value
OperatorComparePlayerHint=

OperatorComparePlayerColor="玩家顏色"
OperatorComparePlayerColor=~Value," ",~Operator," ",~Value
OperatorComparePlayerColorHint=

OperatorComparePlayerControl="玩家控制者"
OperatorComparePlayerControl=~Value," ",~Operator," ",~Value
OperatorComparePlayerControlHint=

OperatorComparePlayerSlotStatus="玩家遊戲狀態"
OperatorComparePlayerSlotStatus=~Value," ",~Operator," ",~Value
OperatorComparePlayerSlotStatusHint=

OperatorComparePoint="點 [R]"
OperatorComparePoint=~Value," ",~Operator," ",~Value
OperatorComparePointHint=

OperatorCompareRace="種族"
OperatorCompareRace=~Value," ",~Operator," ",~Value
OperatorCompareRaceHint=

OperatorCompareReal="實數"
OperatorCompareReal=~Value," ",~Operator," ",~Value
OperatorCompareRealHint=

OperatorCompareDegree="角度"
OperatorCompareDegree=~Value," ",~Operator," ",~Value
OperatorCompareDegreeHint=

OperatorCompareRadian="弧度"
OperatorCompareRadian=~Value," ",~Operator," ",~Value
OperatorCompareRadianHint=

OperatorCompareRegion="區域(矩形) [R]"
OperatorCompareRegion=~Value," ",~Operator," ",~Value
OperatorCompareRegionHint=

OperatorCompareRegionR="區域(不規則) [R]"
OperatorCompareRegionR=~Value," ",~Operator," ",~Value
OperatorCompareRegionRHint=

OperatorCompareString="字符串"
OperatorCompareString=~Value," ",~Operator," ",~字符串
OperatorCompareStringHint=

OperatorCompareTechCode="科技研究"
OperatorCompareTechCode=~Value," ",~Operator," ",~科技
OperatorCompareTechCodeHint=

OperatorCompareTrigger="觸發"
OperatorCompareTrigger=~觸發," ",~Operator," ",~觸發
OperatorCompareTriggerHint=

OperatorCompareUnit="單位"
OperatorCompareUnit=~Value," ",~Operator," ",~單位
OperatorCompareUnitHint=

OperatorCompareUnitCode="單位類型"
OperatorCompareUnitCode=~Value," ",~Operator," ",~Value
OperatorCompareUnitCodeHint=

OperatorCompareTerrainType="地形"
OperatorCompareTerrainType=~Value," ",~Operator," ",~Value
OperatorCompareTerrainTypeHint=

OperatorCompareTrackable="可追蹤物 [R]"
OperatorCompareTrackable=~值," ",~Operator," ",~值
OperatorCompareTrackableHint=

OperatorCompareTimer="計時器 [R]"
OperatorCompareTimer=~計時器," ",~Operator," ",~計時器
OperatorCompareTimerHint=

GetBooleanAnd="And"
GetBooleanAnd=~條件 1," 且 ",~條件 2
GetBooleanAndHint="條件1 和條件2 均成立."

GetBooleanOr="Or"
GetBooleanOr=~條件 1," or ",~條件 2
GetBooleanOrHint="條件1 和條件2 任意成立."

AndMultiple="And, 多項條件"
AndMultiple="And - 所有條件成立"
AndMultipleHint="用該功能添加的條件必須為主體之下."

OrMultiple="Or, 多項條件"
OrMultiple="Or - 任意條件成立"
OrMultipleHint="用該功能添加的條件必須為主體之下."



//***************************************************************************
[TriggerActionStrings]

DoNothing="不做任何動作"
DoNothing="不做任何動作"
DoNothingHint=

CommentString="文本注釋"
CommentString="-------- ",~注釋文本," --------"
CommentStringHint=

CustomScriptCode="自定義代碼"
CustomScriptCode="自定義代碼:   ",~Jass 代碼
CustomScriptCodeHint="輸入一行代碼. 比如: call my_func(udg_my_var)"

ExecuteFunc="運行函數 [R]"
ExecuteFunc="運行: ",~函數名
ExecuteFuncHint="使用該功能運行的函數與觸發獨立, 只能運行自定義無參數函數."

TriggerSleepAction="等待(玩家時間)"
TriggerSleepAction="等待 ",~Time," 秒"
TriggerSleepActionHint="該延遲功能受真實時間的影響(也就是玩家機器上的時間). 因此每個玩家所延遲的時間可能不一致."

PolledWait="等待(遊戲時間)"
PolledWait="等待 ",~Time," 秒(遊戲時間)"
PolledWaitHint="該延遲功能受遊戲時間的影響.通過調整遊戲速度來調節該功能的具體延遲時間的長短."


YDWEWaitForLocalVariable="等待(局部變量專用)[YDWE]"
YDWEWaitForLocalVariable="等待 ",~Time," 秒(局部變量專用)"
YDWEWaitForLocalVariableHint="當觸發器內有局部變量，需要用到等待動作時，必須採用這個局部變量專用等待動作，不然觸發器無法用於多人。"


WaitForCondition="等待(條件成立)"
WaitForCondition="檢查 ",~條件," 每隔 ",~Interval," 秒(直到條件成立)"
WaitForConditionHint="採用的是'while-do'類型的方式等待,比較耗CPU資源.注意不要造成過多的不成立的條件."

WaitForSoundBJ="等待(聲音結束)"
WaitForSoundBJ="等待直到 ",~Sound," 在 ",~Time," 秒後結束播放."
WaitForSoundBJHint="該功能只對於當前播放的3D-音效有效. 如果該音效未播放或已經結束, 則該功能無效."

// Specially handled by the editor
SetVariable="設置變量"
SetVariable="設置 ",~變量," = ",~Value
SetVariableHint="給變量賦值."


// Specially handled by the editor
ReturnAction="跳過剩餘動作"
ReturnAction="跳過剩餘動作"
ReturnActionHint="跳過剩餘動作,直接中止觸發運行. 但是在組動作中無效."

YDWEExitLoop="退出循環"
YDWEExitLoop="退出循環"
YDWEExitLoopHint="退出循環,也能退出逆天選取單位動作."

// Specially handled by the editor
IfThenElseMultiple="If / Then / Else (多項功能)"
IfThenElseMultiple="如果(所有的條件成立) 則運行 (Then - 動作) 否則運行 (Else - 動作)"
IfThenElseMultipleHint=""

// Specially handled by the editor
IfThenElse="If / Then / Else (單項功能)"
IfThenElse="如果 ",~條件," 成立,則運行 ",~Action," 否則運行 ",~Action
IfThenElseHint=

// Specially handled by the editor
ForLoopAMultiple="使用循環整數A (做多項動作)"
ForLoopAMultiple="循環動作[循環整數A]從 ",~開始," 到 ",~結束,", 運行 (Loop - 動作)"
ForLoopAMultipleHint="後一個整數一定要比前一個整數要大."

// Specially handled by the editor
ForLoopBMultiple="使用循環整數B (做多項動作)"
ForLoopBMultiple="循環動作[循環整數B]從 ",~開始," 到 ",~結束,", 運行 (Loop - 動作)"
ForLoopBMultipleHint="後一個整數一定要比前一個整數要大."

// Specially handled by the editor
ForLoopVarMultiple="使用整數變量 (做多項動作)"
ForLoopVarMultiple="循環動作[",~整數變量,"]從 ",~開始," 到 ",~結束,", 運行 (Loop - 動作)"
ForLoopVarMultipleHint="後一個整數一定要比前一個整數要大."

// Specially handled by the editor
ForLoopA="使用循環整數A (做動作)"
ForLoopA="循環動作[循環整數A]從 ",~開始," 到 ",~結束,", 運行 ",~運作
ForLoopAHint="後一個整數一定要比前一個整數要大."

// Specially handled by the editor
ForLoopB="使用循環整數B (做動作)"
ForLoopB="循環動作[循環整數B]從 ",~開始," 到 ",~結束,", 運行 ",~運作
ForLoopBHint="後一個整數一定要比前一個整數要大."

// Specially handled by the editor
ForLoopVar="使用整數變量 (做動作)"
ForLoopVar="循環動作[",~整數變量,"]從 ",~開始," 到 ",~結束,", do ",~Action
ForLoopVarHint="後一個整數一定要比前一個整數要大."

SetForLoopIndexA="設置循環整數A [R]"
SetForLoopIndexA="設置循環整數A的值為 ",~數值
SetForLoopIndexAHint=

SetForLoopIndexB="設置循環整數B [R]"
SetForLoopIndexB="設置循環整數B的值為 ",~數值
SetForLoopIndexBHint=

// AI actions
StartMeleeAI="啟用對戰AI"
StartMeleeAI="為 ",~Player," 啟用對戰AI: ",~Script
StartMeleeAIHint="AI只能對電腦玩家使用,當運行該動作後,與之配匹的電腦玩家會強制執行該AI腳本."

StartCampaignAI="啟用戰役AI"
StartCampaignAI="為 ",~Player," 啟用戰役AI: ",~Script
StartCampaignAIHint="AI只能對電腦玩家使用,當運行該動作後,與之配匹的電腦玩家會強制執行該AI腳本."

CommandAI="發送AI命令"
CommandAI="對 ",~Player," 發送AI命令:(",~命令,", ",~數據,")"
CommandAIHint="發送的AI命令將被AI腳本所使用."

PauseCompAI="暫停/恢復 AI腳本運行 [R]"
PauseCompAI="設定 ",~Player," ",~暫停/恢復," 當前AI腳本的運行"
PauseCompAIHint="事實上該函數是有問題的,可以這麼理解:設玩家當前AI腳本的運行狀態R為0,暫停1次則R+1,恢復1次則R-1,僅當R=0時該玩家才會運行AI. 在使用前請先理解這段話的意思."

RemoveGuardPosition="忽視指定單位的警戒點"
RemoveGuardPosition="忽視 ",~單位," 的警戒點"
RemoveGuardPositionHint="單位將不會自動返回原警戒點. 一個很有用的功能就是刷怪進攻時忽視單位警戒範圍的話,怪就不會想家了."

RemoveAllGuardPositions="忽視所有單位的警戒點"
RemoveAllGuardPositions="忽視 ",~Player," 的所有單位的警戒點"
RemoveAllGuardPositionsHint="單位將不會自動返回原警戒點. 一個很有用的功能就是刷怪進攻時忽視單位警戒範圍的話,怪就不會想家了."

RecycleGuardPosition="恢復指定單位的警戒點"
RecycleGuardPosition="恢復 ",~單位," 的警戒點"
RecycleGuardPositionHint=這個動作通過 AI 來恢復特定單位的警戒點."

SetUnitCreepGuard="鎖定指定單位的警戒點 [R]"
SetUnitCreepGuard="設置 ",~單位," 的警戒點: ",~option
SetUnitCreepGuardHint="鎖定並防止 AI 腳本改動單位警戒點."

LockGuardPosition="鎖定指定單位的警戒點"
LockGuardPosition="鎖定 ",~單位," 的警戒點"
LockGuardPositionHint="鎖定並防止 AI 腳本改動單位警戒點."

// Trigger actions
DisableTrigger="關閉觸發"
DisableTrigger="關閉 ",~Trigger
DisableTriggerHint=

EnableTrigger="開啟觸發"
EnableTrigger="開啟 ",~Trigger
EnableTriggerHint=

ConditionalTriggerExecute="運行觸發(檢查條件)"
ConditionalTriggerExecute="運行 ",~觸發," (檢查條件)"
ConditionalTriggerExecuteHint="如果其觸發條件成立則運行觸發動作."







YDWETimerRunTrigger="計時器系統-運行觸發器"
YDWETimerRunTrigger="在 ",~時間," 秒後運行 ",~觸發器
YDWETimerRunTriggerHint="啟動中心計時器，在指定時間之後運行觸發器。"

YDWETimerRunPeriodicTrigger="計時器系統-循環運行觸發器"
YDWETimerRunPeriodicTrigger="每隔 ",~時間," 秒運行 ",~觸發器,"，永久運行 ",~真值,"，運行 ",~整數," 次，運行標識 ",~整數,"。"
YDWETimerRunPeriodicTriggerHint="啟動中心計時器，按指定間隔時間運行觸發器；當永久運行為真，運行次數會被忽略；運行標識是自定義一個值，用來區別其它運行。"

YDWETimerRunPeriodicTriggerFunction="計時器系統-循環運行觸發器函數"
YDWETimerRunPeriodicTriggerFunction="每隔 ",~時間," 秒直接運行 ",~觸發器," 動作函數，永久運行 ",~真值,"，運行 ",~整數," 次，運行標識 ",~整數,"。"
YDWETimerRunPeriodicTriggerFunctionHint="使用方法同上；直接運行觸發器動作函數效率比運行觸發器高，但觸發器動作中不能有等待。"

YDWETimerRunPeriodicTriggerOver="計時器系統-終止運行觸發器"
YDWETimerRunPeriodicTriggerOver="停止運行 ",~觸發器,"，運行標識 ",~整數,"。"
YDWETimerRunPeriodicTriggerOverHint="使中心計時器不再運行該觸發器；若觸發器同一時間被多次運行且運行標識相同，中心計時器會停止對該觸發器所有運行。"

TriggerExecute="運行觸發(無視條件)"
TriggerExecute="運行 ",~觸發," (無視條件)"
TriggerExecuteHint="無視事件和條件,運行觸發動作."

QueuedTriggerAddBJ="添加到觸發隊列"
QueuedTriggerAddBJ="添加 ",~觸發," 到觸發隊列(",~Checking/Ignoring," 條件)"
QueuedTriggerAddBJHint="個人認為觸發隊列屬於沒用的功能."

QueuedTriggerRemoveBJ="移出觸發隊列"
QueuedTriggerRemoveBJ="將 ",~觸發," 移出觸發隊列"
QueuedTriggerRemoveBJHint="如果觸發正在運行,從隊列移出該單位將允許後面的觸發運行,但不影響本身的動作."

QueuedTriggerClearBJ="清空觸發隊列"
QueuedTriggerClearBJ="清空觸發隊列中所有觸發"
QueuedTriggerClearBJHint=

QueuedTriggerClearInactiveBJ="清空未運行觸發"
QueuedTriggerClearInactiveBJ="清空觸發隊列中所有未運行觸發"
QueuedTriggerClearInactiveBJHint="只有正在運行的觸發不會被移出隊列."

AddTriggerEvent="觸發添加事件"
AddTriggerEvent="為 ",~觸發," 添加事件: ",~事件
AddTriggerEventHint="使用該功能可以在遊戲中為其他觸發添加事件."

DestroyTrigger="刪除觸發器 [R]"
DestroyTrigger="刪除 ",~觸發器
DestroyTriggerHint="對不再使用的觸發器可以使用該動作來刪除."



// Unit actions

 CreateUnit="創建單位(指定坐標) [C]"
 CreateUnit="為玩家 ",~玩家," 創建一個 ",~單位," 在(X坐標: ",~輸入坐標," Y坐標: ",~輸入坐標," ), 面向角度: ",~facing
 CreateUnitHint="不能被'最後創建的單位'捕獲之"

 CreateUnitAtLoc="創建單位(指定點) [C]"
 CreateUnitAtLoc="為玩家 ",~玩家," 創建一個 ",~單位," 在 ",~指定點," 面向角度:",~Face," 度"
 CreateUnitAtLocHint="不能被'最後創建的單位'捕獲之"

CreateNUnitsAtLoc="創建單位(面向角度)"
CreateNUnitsAtLoc="創建 ",~Number," 個 ",~單位," 給 ",~Player," 在 ",~指定點," ,面向角度為 ",~Direction," 度"
CreateNUnitsAtLocHint="面向角度採用角度制,0度為正東方向,90度為正北方向. 使用'最後創建的單位組'來獲取創建的所有單位. 使用'最後創建的單位'來獲取創建的單個單位."


CreateNUnitsAtLocFacingLocBJ="創建單位(面向點)"
CreateNUnitsAtLocFacingLocBJ="創建 ",~Number," ",~單位," 給 ",~Player," 在 ",~指定點," ,面向 ",~指定點
CreateNUnitsAtLocFacingLocBJHint="使用'最後創建的單位組'來獲取創建的所有單位. 使用'最後創建的單位'來獲取創建的單個單位."

CreateCorpseLocBJ="創建屍體"
CreateCorpseLocBJ="創建一個 ",~單位," 的屍體給 ",~Player," 在 ",~指定點
CreateCorpseLocBJHint="不是所有單位都有屍體形態. 使用'最後創建的單位'來獲取該屍體."

CreatePermanentCorpseLocBJ="創建永久性屍體"
CreatePermanentCorpseLocBJ="創建一個 ",~Style," ",~單位," 屍體給 ",~Player," 在 ",~指定點," 面向角度為 ",~Direction," 度"
CreatePermanentCorpseLocBJHint="肉態屍體經常會自動變為骨態屍體."

KillUnit="殺死"
KillUnit="殺死 ",~單位
KillUnitHint=

RemoveUnit="刪除"
RemoveUnit="刪除 ",~單位
RemoveUnitHint="被刪除的單位不會留下屍體. 如果是英雄則不能再被復活."

YDWETimerRemoveUnit="計時器系統-刪除單位[YDWE]""
YDWETimerRemoveUnit="在 ",~時間," 秒後刪除 ",~單位
YDWETimerRemoveUnitHint="啟動中心計時器，在指定時間之後刪除單位。"

ExplodeUnitBJ="爆炸"
ExplodeUnitBJ="使 ",~單位," 爆炸而死"
ExplodeUnitBJHint="爆炸死亡不會留下屍體."

ReplaceUnitBJ="替換"
ReplaceUnitBJ="將 ",~單位," 替換為 ",~單位類型," 使用 ",~Property Usage," 生命和魔法"
ReplaceUnitBJHint="使用'最後替換的單位'來獲取該單位. 如果是不死族金礦被替換,經常還會留下一個普通的金礦. 實際上就是創建加刪除單位"

ShowUnit="顯示/隱藏 [R]"
ShowUnit="設置 ",~單位," 的狀態為 ",~顯示/隱藏
ShowUnitHint="隱藏單位不會被'區域內單位'所選取."

ShowUnitHide="隱藏"
ShowUnitHide="隱藏 ",~單位
ShowUnitHideHint="使用'單位 - 顯示'來顯示該單位. 隱藏單位不會被'區域內單位'所選取."

ShowUnitShow="顯示"
ShowUnitShow="顯示 ",~單位
ShowUnitShowHint="使用'單位 - 隱藏'來顯示該單位. 隱藏單位不會被'區域內單位'所選取."

SetUnitColor="改變隊伍顏色"
SetUnitColor="改變 ",~單位," 的隊伍顏色為 ",~Color
SetUnitColorHint="改變隊伍顏色並不會改變單位所屬."

SetUnitOwner="改變所屬"
SetUnitOwner="改變 ",~單位," 所屬為 ",~Player," 並 ",~Change/Retain Color
SetUnitOwnerHint=

UnitShareVision="共享視野 [R]"
UnitShareVision="設置 ",~單位," 的視野對 ",~Player," ",~on/off
UnitShareVisionHint=

UnitShareVisionBJ="共享視野"
UnitShareVisionBJ=~Grant/Deny," 共享 ",~單位," 的視野對 ",~Player
UnitShareVisionBJHint=

SetUnitPosition="移動單位(立即)(指定坐標) [R]"
SetUnitPosition="立即移動 ",~單位," 到(",~X,",",~Y,")"
SetUnitPositionHint=

SetUnitPositionLoc="移動單位(立即)(指定點)"
SetUnitPositionLoc="立即移動 ",~單位," 到 ",~指定點
SetUnitPositionLocHint=

SetUnitPositionLocFacingBJ="移動單位面向角度(立即)"
SetUnitPositionLocFacingBJ="立即移動 ",~單位," 到 ",~指定點," ,面向角度 ",~Direction," 度"
SetUnitPositionLocFacingBJHint="建議使用'移動單位'+'設置面向角度'動作. 面向角度採用角度制,0度為正東方向,90度為正北方向."

SetUnitPositionLocFacingLocBJ="移動單位面向點(立即)"
SetUnitPositionLocFacingLocBJ="立即移動 ",~單位," 到 ",~指定點," ,並面向 ",~指定點
SetUnitPositionLocFacingLocBJHint="建議使用'移動單位'+'設置面向角度'動作."

SetUnitX="設置X坐標 [R]"
SetUnitX="設置 ",~單位," 的X坐標為 ",~X
SetUnitXHint="注意如果坐標超出地圖邊界是會出錯的."

SetUnitY="設置Y坐標 [R]"
SetUnitY="設置 ",~單位," 的Y坐標為 ",~Y
SetUnitYHint="注意如果坐標超出地圖邊界是會出錯的."

SetUnitRallyPoint="設置集結點(指定點)"
SetUnitRallyPoint="設置 ",~單位," 的集結點到 ",~指定點
SetUnitRallyPointHint="建議用發布'setrally'命令來實現該功能."

SetUnitRallyUnit="設置集結點(指定單位)"
SetUnitRallyUnit="設置 ",~單位," 的集結點到 ",~單位
SetUnitRallyUnitHint="建議用發布'setrally'命令來實現該功能."

SetUnitRallyDestructable="設置集結點(指定物件)"
SetUnitRallyDestructable="設置 ",~單位," 的集結點到 ",~物件
SetUnitRallyDestructableHint="建議用發布'setrally'命令來實現該功能."

SetUnitState="設置單位屬性 [R]"
SetUnitState="設置 ",~單位," 的 ",~屬性," 為 ",~Value
SetUnitStateHint=

SetUnitLifePercentBJ="設置生命值(百分比)"
SetUnitLifePercentBJ="設置 ",~單位," 的生命值為 ",~Percent,"%"
SetUnitLifePercentBJHint=

SetUnitManaPercentBJ="設置魔法值(百分比)"
SetUnitManaPercentBJ="設置 ",~單位," 的魔法值為 ",~Percent,"%"
SetUnitManaPercentBJHint=

SetUnitLifeBJ="設置生命值(指定值)"
SetUnitLifeBJ="設置 ",~單位," 的生命值為 ",~Value
SetUnitLifeBJHint=

SetUnitManaBJ="設置魔法值(指定值)"
SetUnitManaBJ="設置 ",~單位," 的魔法值為 ",~Value
SetUnitManaBJHint=

SetUnitInvulnerable="設置無敵/可攻擊"
SetUnitInvulnerable="設置 ",~單位," ",~Invulnerable/Vulnerable
SetUnitInvulnerableHint=

PauseUnit="暫停/恢復 [R]"
PauseUnit="設置 ",~單位," ",~Pause/Unpause
PauseUnitHint=

PauseUnitBJ="暫停/恢復"
PauseUnitBJ=~Pause/Unpause," ",~單位
PauseUnitBJHint=

PauseAllUnitsBJ="暫停/恢復 所有單位"
PauseAllUnitsBJ=~Pause/Unpause," 所有單位"
PauseAllUnitsBJHint="該動作只作用於當前存在於地圖的單位. 對於之後創建或復活的單位並不會受到影響."

UnitPauseTimedLife="暫停/恢復生命週期 [R]"
UnitPauseTimedLife="使 ",~單位," ",~Pause/Unpause," 生命週期"
UnitPauseTimedLifeHint="只有召喚單位有生命週期."

UnitPauseTimedLifeBJ="暫停/恢復生命週期"
UnitPauseTimedLifeBJ=~Pause/Unpause," ",~單位," 的生命週期"
UnitPauseTimedLifeBJHint="只有召喚單位有生命週期."

UnitApplyTimedLife="設置生命週期 [R]"
UnitApplyTimedLife="為 ",~單位," 設置 ",~Buff Type," 類型的生命週期,持續時間為 ",~Duration," 秒"
UnitApplyTimedLifeHint=

UnitApplyTimedLifeBJ="設置生命週期"
UnitApplyTimedLifeBJ="設置 ",~Duration," 秒 ",~Buff Type," 類型的生命週期對 ",~單位
UnitApplyTimedLifeBJHint=

SetUnitExplodedBJ="設置死亡方式"
SetUnitExplodedBJ="設置 ",~單位," ",~Explode/Die Normally," 在死亡時"
SetUnitExplodedBJHint=

UnitSuspendDecay="暫停屍體腐爛 [R]"
UnitSuspendDecay=" 設置 ",~單位," 的屍體腐爛狀態: ",~Suspend/Resume
UnitSuspendDecayHint="只對已完成死亡動作的屍體有效."

UnitSuspendDecayBJ="暫停屍體腐爛"
UnitSuspendDecayBJ=~Suspend/Resume," 屍體腐爛對 ",~單位
UnitSuspendDecayBJHint="只對已完成死亡動作的屍體有效."

UnitResetCooldown="重置技能CD"
UnitResetCooldown="重置 ",~單位," 的所有技能冷卻時間"
UnitResetCooldownHint="如果要重置單一技能的CD,可以通過刪除技能+添加技能+設置技能等級來完成."

UnitSetConstructionProgress="設置建築建造進度條"
UnitSetConstructionProgress="設置 ",~Building," 的建造進度條為 ",~Progress,"%"
UnitSetConstructionProgressHint="只作用於正在建造的建築."

UnitSetUpgradeProgress="設置建築升級進度條"
UnitSetUpgradeProgress="設置 ",~Building," 的升級進度條為 ",~Progress,"%"
UnitSetUpgradeProgressHint="只作用於正在升級的建築. 是建築A升級為建築B的升級,不是科技的研究."

UnitAddSleepPerm="控制單位睡眠狀態"
UnitAddSleepPerm="使 ",~單位," ",~Sleep/Remain Awake
UnitAddSleepPermHint="使用該功能前必須用觸發為單位添加'一直睡眠'技能."

UnitSetCanSleepBJ="設置單位夜晚睡眠"
UnitSetCanSleepBJ="設置 ",~單位," ",~Sleep/Remain Awake," 在夜晚"
UnitSetCanSleepBJHint="只對中立單位有效. 並不影響催眠魔法."

UnitWakeUpBJ="叫醒"
UnitWakeUpBJ="叫醒 ",~單位
UnitWakeUpBJHint="不影響催眠魔法傚果."


//UnitIgnoreAlarm

UnitGenerateAlarms="設置警報開啟/關閉"
UnitGenerateAlarms="設置警報對 ",~單位," ",~On/Off
UnitGenerateAlarmsHint="只作用於建築."

RescueUnitBJ="營救單位"
RescueUnitBJ="營救 ",~單位," ,改變所屬為 ",~Player," 並 ",~Change/Retain Color
RescueUnitBJHint=

SetUnitRescuable="設置可否營救(對玩家) [R]"
SetUnitRescuable="設置 ",~單位," 對 ",~玩家,~Rescuable/Unrescuable
SetUnitRescuableHint=

MakeUnitRescuableToForceBJ="設置可否營救(對玩家組)"
MakeUnitRescuableToForceBJ="設置 ",~單位," ",~Rescuable/Unrescuable," 對 ",~玩家組
MakeUnitRescuableToForceBJHint=

SetUnitRescueRange="設置營救範圍"
SetUnitRescueRange="設置 ",~單位," 的營救範圍為 ",~Range
SetUnitRescueRangeHint=

SetRescueUnitColorChangeBJ="設置營救顏色(單位)"
SetRescueUnitColorChangeBJ="設置單位 ",~Change/Retain Color," 當被營救時"
SetRescueUnitColorChangeBJHint="默認情況單位被營救時會改變顏色. 不影響已經被營救的單位."

SetRescueBuildingColorChangeBJ="設置營救顏色(建築)"
SetRescueBuildingColorChangeBJ="設置建築 ",~Change/Retain Color," 當被營救時"
SetRescueBuildingColorChangeBJHint="默認建築被營救時不會改變顏色. 不影響已經被營救的建築."

SetUnitUseFood="允許/禁止 人口占用 [R]"
SetUnitUseFood="設置 ",~單位," : ",~Enable/Disable," 其人口占用"
SetUnitUseFoodHint=

SetUnitUseFoodBJ="允許/禁止 人口占用"
SetUnitUseFoodBJ=~Enable/Disable," ",~單位," 的人口占用"
SetUnitUseFoodBJHint=

SetUnitFacing="設置單位面向角度(立即) [R]"
SetUnitFacing="設置 ",~單位," 的面向角度為 ",~Angle," 度
SetUnitFacingHint="面向角度採用角度制,0度為正東方向,90度為正北方向."

SetUnitFacingTimed="設置單位面向角度(指定時間)"
SetUnitFacingTimed="設置 ",~單位," 的面向角度為 ",~Angle," 度,使用時間 ",~Time," 秒"
SetUnitFacingTimedHint="面向角度採用角度制,0度為正東方向,90度為正北方向."

SetUnitFacingToFaceUnitTimed="設置單位面向單位"
SetUnitFacingToFaceUnitTimed="設置 ",~單位," 面向 ",~目標單位," ,使用時間 ",~Time," 秒"
SetUnitFacingToFaceUnitTimedHint="只是面向當前單位所在點而已. 並不會因為單位位置改變而改變目標位置."

SetUnitFacingToFaceLocTimed="設置單位面向點"
SetUnitFacingToFaceLocTimed="設置 ",~單位," 面向 ",~點," ,使用時間 ",~Time," 秒"
SetUnitFacingToFaceLocTimedHint=

SetUnitMoveSpeed="設置移動速度"
SetUnitMoveSpeed="設置 ",~單位," 的移動速度為 ",~Speed
SetUnitMoveSpeedHint=

SetUnitPathing="設置碰撞開關"
SetUnitPathing="設置 ",~單位," ",~On/Off," 碰撞"
SetUnitPathingHint="關閉碰撞的單位無視障礙物,但其他單位仍視其為障礙物."

SetUnitAcquireRangeBJ="設置主動攻擊範圍"
SetUnitAcquireRangeBJ="設置 ",~單位," 的主動攻擊範圍為 ",~數值
SetUnitAcquireRangeBJHint=

SetUnitUserData="設置自定義值"
SetUnitUserData="設置 ",~單位," 的自定義值為 ",~Index
SetUnitUserDataHint="單位自定義值僅用於觸發器. 可用來給單位綁定一個整型數據."

UnitRemoveBuffs="刪除魔法傚果(指定極性) [R]"
UnitRemoveBuffs="刪除 ",~單位," 的附帶Buff,(",~Include/Exclude," 正面Buff, ",~Include/Exclude," 負面Buff)"

UnitRemoveBuffsEx="刪除魔法傚果(詳細類別) [R]"
UnitRemoveBuffsEx="刪除 ",~單位," 的附帶Buff,(",~Include/Exclude," 正面Buff, ",~Include/Exclude," 負面Buff",~Include/Exclude," 魔法Buff, ",~Include/Exclude," 物理Buff",~Include/Exclude," 生命週期, ",~Include/Exclude," 光環效果",~Include/Exclude," 不可驅散Buff)"

UnitRemoveBuffNT="刪除指定魔法傚果 [R]"
UnitRemoveBuffNT="刪除 ",~單位," 的 ",~魔法傚果
UnitRemoveBuffNTHint=

UnitRemoveBuffsBJ="刪除魔法傚果(指定類別)"
UnitRemoveBuffsBJ="刪除 ",~Buff Type," 魔法傚果從 ",~單位
UnitRemoveBuffsBJHint=

UnitRemoveBuffsExBJ="刪除魔法傚果(詳細類別)"
UnitRemoveBuffsExBJ="刪除 ",~Buff Type," ",~Buff Resist," Buff從 ",~單位,"(",~Include/Exclude," 生命週期, ",~Include/Exclude," 光環)"
UnitRemoveBuffsExBJHint="buff性質選項第4項為無效選項, 僅為兼容而保留."

UnitRemoveBuffBJ="刪除指定魔法傚果"
UnitRemoveBuffBJ="刪除 ",~魔法傚果," 從 ",~單位
UnitRemoveBuffBJHint=

UnitAddAbility="添加技能 [R]"
UnitAddAbility="為 ",~單位," 添加 ",~技能
UnitAddAbilityHint=

UnitAddAbilityBJ="添加技能"
UnitAddAbilityBJ="添加 ",~技能," 給 ",~單位
UnitAddAbilityBJHint=

UnitRemoveAbility="刪除技能 [R]"
UnitRemoveAbility="為 ",~單位," 刪除 ",~技能
UnitRemoveAbilityHint=

UnitRemoveAbilityBJ="刪除技能"
UnitRemoveAbilityBJ="刪除 ",~技能," 從 ",~單位
UnitRemoveAbilityBJHint=

UnitMakeAbilityPermanent="設置技能永久性 [R]"
UnitMakeAbilityPermanent="設置 ",~單位," ",~是否," ",~技能," 永久性"
UnitMakeAbilityPermanentHint="如觸發添加給單位的技能就是非永久性的,非永久性技能在變身並回覆之後會丟失掉. 這類情況就需要設置技能永久性."

UnitAddType="添加類別 [R]"
UnitAddType="為 ",~單位," 添加 ",~Classification," 類別"
UnitAddTypeHint="已去除所有無效類別."

UnitAddTypeBJ="添加類別"
UnitAddTypeBJ="添加 ",~Classification," 類別到 ",~單位
UnitAddTypeBJHint="並非所有類別都是可以添加的,建議使用新函數."

UnitRemoveType="刪除類別 [R]"
UnitRemoveType="為 ",~單位," 刪除 ",~Classification," 類別"
UnitRemoveTypeHint="已去除所有無效類別."

UnitRemoveTypeBJ="刪除類別"
UnitRemoveTypeBJ="刪除 ",~Classification," 類別從 ",~單位
UnitRemoveTypeBJHint="並非所有類別都是可以刪除的,建議使用新函數."

DecUnitAbilityLevel="降低技能等級 [R]"
DecUnitAbilityLevel="使 ",~單位," 的 ",~技能," 等級降低1級"
DecUnitAbilityLeveldHint="改變死亡單位的光環技能會導致魔獸崩潰."

DecUnitAbilityLevelSwapped="降低技能等級"
DecUnitAbilityLevelSwapped="降低 ",~技能," 等級對 ",~單位
DecUnitAbilityLevelSwappedHint="改變死亡單位的光環技能會導致魔獸崩潰."

IncUnitAbilityLevel="提升技能等級 [R]"
IncUnitAbilityLevel="使 ",~單位," 的 ",~技能," 等級提升1級"
IncUnitAbilityLevelHint="改變死亡單位的光環技能會導致魔獸崩潰."

IncUnitAbilityLevelSwapped="提升技能等級"
IncUnitAbilityLevelSwapped="提升 ",~技能," 等級對 ",~單位
IncUnitAbilityLevelSwappedHint="改變死亡單位的光環技能會導致魔獸崩潰."

SetUnitAbilityLevel="設置技能等級 [R]"
SetUnitAbilityLevel="設置 ",~單位," 的 ",~技能," 等級為 ",~Level
SetUnitAbilityLevelHint="改變死亡單位的光環技能會導致魔獸崩潰."

SetUnitAbilityLevelSwapped="設置技能等級"
SetUnitAbilityLevelSwapped="設置 ",~技能," 等級對 ",~單位," 為 ",~Level
SetUnitAbilityLevelSwappedHint="改變死亡單位的光環技能會導致魔獸崩潰."

YDWESetUnitAbilityState="設置技能屬性 [JAPI]"
YDWESetUnitAbilityState="設置 ",~單位," 的 ",~技能," 的 ",~狀態," 為 ",~Value
YDWESetUnitAbilityStateHint=""

YDWESetUnitAbilityDataInteger="設置技能數據 (整數) [JAPI]"
YDWESetUnitAbilityDataInteger="設置 ",~單位," 的 ",~技能," 第 ",~等級," 級的 ",~數據," 為 ",~Value
YDWESetUnitAbilityDataIntegerHint=""

YDWESetUnitAbilityDataReal="設置技能數據 (實數) [JAPI]"
YDWESetUnitAbilityDataReal="設置 ",~單位," 的 ",~技能," 第 ",~等級," 級的 ",~數據," 為 ",~Value
YDWESetUnitAbilityDataRealHint="數據A~數據I也就是物體編輯器裡按Ctrl+D後看到的DataA~DataI"

YDWESetUnitAbilityDataString="設置技能數據 (字符串) [JAPI]"
YDWESetUnitAbilityDataString="設置 ",~單位," 的 ",~技能," 第 ",~等級," 級的 ",~數據," 為 ",~Value
YDWESetUnitAbilityDataStringHint=""



IssueImmediateOrder="發布命令(無目標)"
IssueImmediateOrder="對 ",~單位," 發布 ",~Order," 命令"
IssueImmediateOrderHint=

IssuePointOrder="發布命令(指定坐標) [R]"
IssuePointOrder="對 ",~單位," 發布 ",~Order," 命令到坐標:(",~X,",",~Y,")"
IssuePointOrderHint=

IssuePointOrderLoc="發布命令(指定點)"
IssuePointOrderLoc="對 ",~單位," 發布 ",~Order," 命令到目標點: ",~指定點
IssuePointOrderLocHint=

IssueTargetOrder="發布命令(指定單位)"
IssueTargetOrder="對 ",~單位," 發布 ",~Order," 命令到目標: ",~單位
IssueTargetOrderHint=

IssueTargetDestructableOrder="發布命令(指定可破壞物)"
IssueTargetDestructableOrder="對 ",~單位," 發布 ",~Order," 命令到目標: ",~可破壞物
IssueTargetDestructableOrderHint=

IssueTargetItemOrder="發布命令(指定物品)"
IssueTargetItemOrder="對 ",~單位," 發布 ",~Order," 命令到目標: ",~物品
IssueTargetItemOrderHint=

IssueImmediateOrderById="按ID發布命令(無目標) [R]"
IssueImmediateOrderById="對 ",~單位," 發布 ",~Order," 命令"
IssueImmediateOrderByIdHint=

IssuePointOrderById="按ID發布命令(指定坐標) [R]"
IssuePointOrderById="對 ",~單位," 發布 ",~Order," 命令到坐標:(",~X,",",~Y,")"
IssuePointOrderByIdHint=

IssuePointOrderByIdLoc="按ID發布命令(指定點) [R]"
IssuePointOrderByIdLoc="對 ",~單位," 發布 ",~Order," 命令到目標點: ",~指定點
IssuePointOrderByIdLocHint=

IssueTargetOrderById="按ID發布命令(指定單位) [R]"
IssueTargetOrderById="對 ",~單位," 發布 ",~Order," 命令到目標: ",~單位
IssueTargetOrderByIdHint=

IssueTargetDestructableOrderById="按ID發布命令(指定可破壞物) [R]"
IssueTargetDestructableOrderById="對 ",~單位," 發布 ",~Order," 命令到目標: ",~可破壞物
IssueTargetDestructableOrderByIdHint=

IssueTargetItemOrderById="按ID發布命令(指定物品) [R]"
IssueTargetItemOrderById="對 ",~單位," 發布 ",~Order," 命令到目標: ",~物品
IssueTargetItemOrderByIdHint=

IssueTrainOrderByIdBJ="發布訓練/升級命令"
IssueTrainOrderByIdBJ="命令 ",~單位," 建造/升級為 ",~單位類型
IssueTrainOrderByIdBJHint="該升級是指A單位升級為B單位,而不是科技升級."

IssueUpgradeOrderByIdBJ="發布研究科技命令"
IssueUpgradeOrderByIdBJ="命令 ",~單位," 研究 ",~Tech-Type
IssueUpgradeOrderByIdBJHint=

IssueBuildOrderById="發布建造命令(指定坐標) [R]"
IssueBuildOrderById="命令 ",~單位," 建造 ",~單位類型," 在坐標:(",~X,",",~Y,")"
IssueBuildOrderByIdHint=

IssueBuildOrderByIdLocBJ="發布建造命令(指定點)"
IssueBuildOrderByIdLocBJ="命令 ",~單位," 建造 ",~單位類型," 在 ",~指定點
IssueBuildOrderByIdLocBJHint=

UnitDropItemPoint="發布丟棄物品命令(指定坐標) [R]"
UnitDropItemPoint="命令 ",~單位," 丟棄物品 ",~物品," 到坐標:(",~X,",",~Y,")"
UnitDropItemPointHint=

UnitDropItemPointLoc="發布丟棄物品命令(指定點)"
UnitDropItemPointLoc="命令 ",~單位," 丟棄物品 ",~物品," 到 ",~指定點
UnitDropItemPointLocHint=

UnitDropItemSlot="移動物品到物品欄 [R]"
UnitDropItemSlot="命令 ",~單位," 移動 ",~物品," 到物品欄# ",~Index
UnitDropItemSlotHint="只有當單位持有該物品時才有效. 注意: 該函數中物品欄編號從0-5,而不是1-6."

UnitDropItemSlotBJ="移動物品到物品欄"
UnitDropItemSlotBJ="命令 ",~單位," 移動 ",~物品," 到物品欄第 ",~Index," 格"
UnitDropItemSlotBJHint="只有當單位持有該物品時才有效."

UnitDropItemTargetBJ="發布給予物品命令"
UnitDropItemTargetBJ="命令 ",~單位," 把 ",~物品," 給 ",~單位
UnitDropItemTargetBJHint=

IssueBuyUnitOrder="發布購買單位命令 [R]"
IssueBuyUnitOrder="使 ",~玩家," 從 ",~單位," 處購買 ",~單位類型
IssueBuyUnitOrderHint=

IssueBuyItemOrder="發布購買物品命令 [R]"
IssueBuyItemOrder="使 ",~玩家," 從 ",~單位," 處購買 ",~物品類型
IssueBuyItemOrderHint="先讓商店對玩家單位發布'中立商店 - 選擇'命令,再使用該函數就能實現指定單位的購買物品了."

IssueNeutralImmediateOrder="發布中介命令(無目標) [R]"
IssueNeutralImmediateOrder="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令"
IssueNeutralImmediateOrderHint="可以用來對非本玩家單位發布命令."

IssueNeutralPointOrder="發布中介命令(指定坐標) [R]"
IssueNeutralPointOrder="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到坐標:(",~X,",",~Y,")"
IssueNeutralPointOrderHint="可以用來對非本玩家單位發布命令."

IssueNeutralTargetOrder="發布中介命令(指定單位) [R]"
IssueNeutralTargetOrder="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~單位
IssueNeutralTargetOrderHint="可以用來對非本玩家單位發布命令."

IssueNeutralTargetDestructableOrder="發布中介命令(指定可破壞物) [R]"
IssueNeutralTargetDestructableOrder="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~可破壞物
IssueNeutralTargetDestructableOrderHint="可以用來對非本玩家單位發布命令."

IssueNeutralTargetItemOrder="發布中介命令(指定物品) [R]"
IssueNeutralTargetItemOrder="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~物品
IssueNeutralTargetItemOrderHint="可以用來對非本玩家單位發布命令."

IssueNeutralImmediateOrderById="按ID發布中介命令(無目標) [R]"
IssueNeutralImmediateOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令"
IssueNeutralImmediateOrderByIdHint="可以用來對非本玩家單位發布命令."

IssueNeutralPointOrderById="按ID發布中介命令(指定坐標) [R]"
IssueNeutralPointOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到坐標:(",~X,",",~Y,")"
IssueNeutralPointOrderByIdHint="可以用來對非本玩家單位發布命令."

IssueNeutralTargetOrderById="按ID發布中介命令(指定單位) [R]"
IssueNeutralTargetOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~單位
IssueNeutralTargetOrderByIdHint="可以用來對非本玩家單位發布命令."

IssueNeutralTargetDestructableOrderById="按ID發布中介命令(指定可破壞物) [R]"
IssueNeutralTargetDestructableOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~可破壞物
IssueNeutralTargetDestructableOrderByIdHint="可以用來對非本玩家單位發布命令."

IssueNeutralTargetItemOrderById="按ID發布中介命令(指定物品) [R]"
IssueNeutralTargetItemOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~物品
IssueNeutralTargetItemOrderByIdHint="可以用來對非本玩家單位發布命令."

YDWEIssueNeutralImmediateOrderById="自定義ID發布中介命令(無目標)"
YDWEIssueNeutralImmediateOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令"
YDWEIssueNeutralImmediateOrderByIdHint="可以用來對非本玩家單位發布命令，能直接輸入數字命令ID。"

YDWEIssueNeutralPointOrderById="自定義ID發布中介命令(指定坐標)"
YDWEIssueNeutralPointOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到坐標:(",~X,",",~Y,")"
YDWEIssueNeutralPointOrderByIdHint="可以用來對非本玩家單位發布命令，能直接輸入數字命令ID。"

YDWEIssueNeutralTargetOrderById="自定義ID發布中介命令(指定單位)"
YDWEIssueNeutralTargetOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~單位
YDWEIssueNeutralTargetOrderByIdHint="可以用來對非本玩家單位發布命令，能直接輸入數字命令ID。"

YDWEIssueNeutralTargetDestructableOrderById="自定義ID發布中介命令(指定可破壞物)"
YDWEIssueNeutralTargetDestructableOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~可破壞物
YDWEIssueNeutralTargetDestructableOrderByIdHint="可以用來對非本玩家單位發布命令，能直接輸入數字命令ID。"

YDWEIssueNeutralTargetItemOrderById="自定義ID發布中介命令(指定物品)"
YDWEIssueNeutralTargetItemOrderById="使 ",~玩家," 對 ",~單位," 發布 ",~Order," 命令到目標: ",~物品
YDWEIssueNeutralTargetItemOrderByIdHint="可以用來對非本玩家單位發布命令，能直接輸入數字命令ID。"

UnitDamagePoint="傷害區域 [R]"
UnitDamagePoint="命令 ",~單位," 在 ",~Seconds," 秒後對半徑為 ",~Size," 圓心為(",~X,",",~Y,")的範圍造成 ",~Amount," 點傷害(",~是," 攻擊傷害, ",~是,"遠程攻擊) 攻擊類型: ",~AttackType," 傷害類型: ",~DamageType," 裝甲類型: ",~WeaponType
UnitDamagePointHint="該動作不會打斷單位動作. 由該動作傷害/殺死單位同樣正常觸發'受到傷害'和'死亡'單位事件."

UnitDamagePointLoc="傷害區域"
UnitDamagePointLoc="命令 ",~單位," 在 ",~Seconds," 秒後對半徑為 ",~Size," 圓心為 ",~指定點," 的範圍造成",~Amount," 點傷害,攻擊類型: ",~AttackType," 傷害類型: ",~DamageType
UnitDamagePointLocHint="該動作不會打斷單位動作. 由該動作傷害/殺死單位同樣正常觸發'受到傷害'和'死亡'單位事件."

UnitDamageTarget="傷害目標 [R]"
UnitDamageTarget="命令 ",~單位," 對 ",~Target," 造成 ",~Amount," 點傷害(",~是," 攻擊傷害, ",~是,"遠程攻擊) 攻擊類型: ",~AttackType," 傷害類型: ",~DamageType," 武器類型: ",~WeaponType
UnitDamageTargetHint="該動作不會打斷單位動作. 由該動作傷害/殺死單位同樣正常觸發'受到傷害'和'死亡'單位事件."

UnitDamageTargetBJ="傷害目標"
UnitDamageTargetBJ="命令 ",~單位," 對 ",~Target," 造成 ",~Amount," 點傷害,攻擊類型: ",~AttackType," 傷害類型: ",~DamageType
UnitDamageTargetBJHint="該動作不會打斷單位動作. 由該動作傷害/殺死單位同樣正常觸發'受到傷害'和'死亡'單位事件."


// Custom actions
YDWECreateUnitPool="創建單位池 [YDWE]"
YDWECreateUnitPool="新建一個單位池"
YDWECreateUnitPoolHint="新建一個單位池，該單位池可以被<最後創建的單位池>獲得。"

UnitPoolAddUnitType="添加單位類型 [R]"
UnitPoolAddUnitType="在 ",~單位池," 中添加一個 ",~單位," 比重為 ",~數值
UnitPoolAddUnitTypeHint="比重越高被選擇的機率越大"

// Unitpool actions
UnitPoolRemoveUnitType="刪除單位類型 [R]"
UnitPoolRemoveUnitType="從 ",~單位池," 中刪除 ",~單位
UnitPoolRemoveUnitTypeHint=

PlaceRandomUnit="選擇放置單位 [R]"
PlaceRandomUnit="從 ",~單位池," 中為 ",~玩家," 任意選擇一個單位並放置到點( ",~X," , ",~Y," )"," 面向 ",~度
PlaceRandomUnitHint=

YDWEPlaceRandomUnit="選擇放置單位 [YDWE]"
YDWEPlaceRandomUnit="從 ",~單位池," 中為 ",~玩家," 任意選擇一個單位並放置到點( ",~X," , ",~Y," )"," 面向 ",~度
YDWEPlaceRandomUnitHint="該單位可以被<最後從單位池中取出的單位>獲取。"

DestroyUnitPool="刪除單位池 [R]"
DestroyUnitPool="刪除 ",~單位池
DestroyUnitPoolHint=

// Unit Group actions
ForGroupMultiple="選取單位組內單位做動作(多個動作)"
ForGroupMultiple="選取 ",~單位組," 內所有單位做動作"
ForGroupMultipleHint="使用'選取單位'來取代相應的單位. 對於單位組內每個單位都會運行一次動作(包括死亡的,不包括隱藏的). 等待不能在組動作中運行."

ForGroup="選取單位組內單位做動作"
ForGroup="選取 ",~單位組," 內所有單位 ",~做動作
ForGroupHint="使用'選取單位'來取代相應的單位. 對於單位組內每個單位都會運行一次動作(包括死亡的,不包括隱藏的). 等待不能在組動作中運行."

GroupEnumUnitsInRange="選取單位添加到單位組(坐標)"
GroupEnumUnitsInRange="為 ",~單位組," 添加以( ",~坐標X," , ",~坐標Y," )為圓心，",~半徑," 為半徑的圓範圍內，滿足 ",~條件," 的單位"
GroupEnumUnitsInRangeHint=

GroupEnumUnitsInRangeCounted="選取單位添加到單位組(坐標)(不建議使用)"
GroupEnumUnitsInRangeCounted="為 ",~單位組," 添加以( ",~坐標X," , ",~坐標Y," )為圓心，",~半徑," 為半徑的圓範圍內，滿足 ",~條件," 的單位。無效項( ",~N," )"
GroupEnumUnitsInRangeCountedHint="最後一項是無效項，建議用上一個UI"

GroupEnumUnitsInRangeOfLoc="選取單位添加到單位組(點)"
GroupEnumUnitsInRangeOfLoc="為 ",~單位組," 添加以 ",~點," 為圓心，",~半徑," 為半徑的圓範圍內，滿足 ",~條件," 的單位"
GroupEnumUnitsInRangeOfLocHint=

GroupEnumUnitsInRangeOfLocCounted="選取單位添加到單位組(點)(不建議使用)"
GroupEnumUnitsInRangeOfLocCounted="為 ",~單位組," 添加以 ",~點," 為圓心，",~半徑," 為半徑的圓範圍內，滿足 ",~條件," 的單位。無效項( ",~N," )"
GroupEnumUnitsInRangeOfLocCountedHint="最後一項是無效項，建議用上一個UI"

GroupAddUnit="添加單位 [R]"
GroupAddUnit="為 ",~單位組," 添加 ",~單位
GroupAddUnitHint="並不影響單位本身."

GroupAddUnitSimple="添加單位"
GroupAddUnitSimple="添加 ",~單位," 到 ",~單位組
GroupAddUnitSimpleHint="並不影響單位本身."

GroupAddGroup="添加單位組"
GroupAddGroup="添加 ",~單位組," 內所有單位到 ",~單位組
GroupAddGroupHint="並不影響單位本身."

GroupRemoveUnit="移除單位 [R]"
GroupRemoveUnit="為 ",~單位組," 刪除 ",~單位
GroupRemoveUnitHint="並不影響單位本身."

GroupRemoveUnitSimple="移除單位"
GroupRemoveUnitSimple="把 ",~單位," 從 ",~單位組," 移除"
GroupRemoveUnitSimpleHint="並不影響單位本身."

GroupRemoveGroup="移除單位組"
GroupRemoveGroup="把 ",~單位組," 中的單位從 ",~單位組," 移除"
GroupRemoveGroupHint="並不影響單位本身."

GroupClear="清空單位組"
GroupClear="清空 ",~單位組," 內所有單位"
GroupClearHint="並不影響單位本身."

DestroyGroup="刪除單位組 [R]"
DestroyGroup="刪除 ",~單位組
DestroyGroupHint=

GroupImmediateOrder="發布命令(無目標)"
GroupImmediateOrder="對 ",~單位組,"發布 ",~Order
GroupImmediateOrderHint="最多隻能對單位組中12個單位發布命令."

GroupPointOrder="發布命令(指定坐標) [R]"
GroupPointOrder="對 ",~單位組,"發布 ",~Order," 命令,目標點:(",~X,",",~Y,")"
GroupPointOrderHint="最多隻能對單位組中12個單位發布命令."

GroupPointOrderLoc="發布命令(指定點)"
GroupPointOrderLoc="對 ",~單位組,"發布 ",~Order," 命令,目標: ",~指定點
GroupPointOrderLocHint="最多隻能對單位組中12個單位發布命令."

GroupTargetOrder="發布命令(指定單位)"
GroupTargetOrder="對 ",~單位組," 發布 ",~Order," 命令,目標: ",~單位
GroupTargetOrderHint="最多隻能對單位組中12個單位發布命令."

GroupTargetDestructableOrder="發布命令(指定可破壞物)"
GroupTargetDestructableOrder="對 ",~單位組,"發布 ",~Order," 命令,目標: ",~可破壞物
GroupTargetDestructableOrderHint="最多隻能對單位組中12個單位發布命令."

GroupTargetItemOrder="發布命令(指定物品)"
GroupTargetItemOrder="對 ",~單位組,"發布 ",~Order," 命令,目標: ",~物品
GroupTargetItemOrderHint="最多隻能對單位組中12個單位發布命令."

GroupImmediateOrderById="按ID發布命令(無目標) [R]"
GroupImmediateOrderById="對 ",~單位組,"發布 ",~Order
GroupImmediateOrderByIdHint="最多隻能對單位組中12個單位發布命令."

GroupPointOrderById="按ID發布命令(指定坐標) [R]"
GroupPointOrderById="對 ",~單位組,"發布 ",~Order," 命令,目標點:(",~X,",",~Y,")"
GroupPointOrderByIdint="最多隻能對單位組中12個單位發布命令."

GroupPointOrderByIdLoc="按ID發布命令(指定點) [R]"
GroupPointOrderByIdLoc="對 ",~單位組,"發布 ",~Order," 命令,目標: ",~指定點
GroupPointOrderByIdLocHint="最多隻能對單位組中12個單位發布命令."

GroupTargetOrderById="按ID發布命令(指定單位) [R]"
GroupTargetOrderById="對 ",~單位組," 發布 ",~Order," 命令,目標: ",~單位
GroupTargetOrderByIdHint="最多隻能對單位組中12個單位發布命令."

GroupTargetDestructableOrderById="按ID發布命令(指定可破壞物) [R]"
GroupTargetDestructableOrderById="對 ",~單位組,"發布 ",~Order," 命令,目標: ",~可破壞物
GroupTargetDestructableOrderByIdHint="最多隻能對單位組中12個單位發布命令."

GroupTargetItemOrderById="按ID發布命令(指定物品) [R]"
GroupTargetItemOrderById="對 ",~單位組,"發布 ",~Order," 命令,目標: ",~物品
GroupTargetItemOrderByIdHint="最多隻能對單位組中12個單位發布命令."

GroupTrainOrderByIdBJ="發布發布訓練/升級命令"
GroupTrainOrderByIdBJ="命令 ",~單位組," 訓練/升級為 ",~單位類型
GroupTrainOrderByIdBJHint="最多隻能對單位組中12個單位發布命令."


// Ubersplat actions
CreateUbersplatBJ="創建地面紋理變化"
CreateUbersplatBJ="創建一個地面紋理變化在 ",~指定點," ,使用圖像: ",~Type," 顏色值:(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度",~Transparency,"% (",~Enable/Disable," 暫停狀態, ",~Enble/Disable," 跳過出生動畫)"
CreateUbersplatBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的. 使用'地面紋理變化 - 設置永久渲染狀態' 來顯示創建的紋理變化. 暫停狀態表示動畫播放完畢後是否繼續保留該紋理變化."

DestroyUbersplat="刪除地面紋理變化"
DestroyUbersplat="刪除 ",~Ubersplat
DestroyUbersplatHint=

ResetUbersplat="重置地面紋理變化"
ResetUbersplat="重置 ",~Ubersplat
ResetUbersplatHint=

FinishUbersplat="結束地面紋理變化"
FinishUbersplat="結束 ",~Ubersplat
FinishUbersplatHint="在動畫播放完畢時自動清除該地面紋理變化."

ShowUbersplat="顯示/隱藏 地面紋理變化[R]"
ShowUbersplat="設置 ",~Ubersplat," 狀態為 ",~Show/Hide
ShowUbersplatHint=

ShowUbersplatBJ="顯示/隱藏 地面紋理變化"
ShowUbersplatBJ=~Show/Hide," ",~Ubersplat
ShowUbersplatBJHint=

SetUbersplatRender="設置渲染狀態"
SetUbersplatRender="設置 ",~Ubersplat," : ",~Enable/Disable," 渲染狀態"
SetUbersplatRenderHint="未發現有任何作用."

SetUbersplatRenderAlways="設置永久渲染狀態"
SetUbersplatRenderAlways="設置 ",~Ubersplat," : ",~Enable/Disable," 永久渲染狀態"
SetUbersplatRenderAlwaysHint="要顯示地面紋理變化則必須開啟該項."


// Location actions
MoveLocation="移動點 [R]"
MoveLocation="移動 ",~點," 到(",~X,",",~Y,")"
MoveLocationHint="該點必須是一個變量. 因為移動一個不可重用的點是無意義的."

RemoveLocation="清除點 [R]"
RemoveLocation="清除 ",~點
RemoveLocationHint="點是堆積最多的垃圾資源,不需要再使用的點都要記得清除掉."
// Cinematic actions
TransmissionFromUnitWithNameBJ="播送單位消息(指定單位)"
TransmissionFromUnitWithNameBJ="對 ",~玩家組," 播送信息,發言單位: ",~單位," 顯示名字: ",~文字," ,播放音效: ",~音效," 顯示信息: ",~文字," 持續時間: ",~Method," ",~Time," 秒並 ",~Wait/Don't Wait
TransmissionFromUnitWithNameBJHint="'沒有聲音'的持續時間為5秒. 等待表示其他動作需要等待信息播放完畢後才能運行."

TransmissionFromUnitTypeWithNameBJ="播送單位消息(指定單位-類型)"
TransmissionFromUnitTypeWithNameBJ="對 ",~玩家組," 播送信息,發言單位: ",~Player," 的 ",~單位類型,"  顯示名字:  ",~文字," 發言位置: ",~指定點," 播放音效: ",~音效," 顯示信息: ",~文字," 持續時間: ",~Method," ",~Time," 秒並 ",~Wait/Don't Wait
TransmissionFromUnitTypeWithNameBJHint="'沒有聲音'的持續時間為5秒. 等待表示其他動作需要等待信息播放完畢後才能運行."

ForceCinematicSubtitlesBJ="字幕顯示"
ForceCinematicSubtitlesBJ=~On/Off," 電影字幕顯示功能"
ForceCinematicSubtitlesBJHint="該功能和'遊戲菜單-聲音選項'中的字幕選項中有一項為開時即能夠顯示電影字幕."

CinematicModeBJ="電影模式"
CinematicModeBJ=~On/Off," 電影模式對 ",~玩家組
CinematicModeBJHint=

CinematicModeExBJ="電影模式(指定時間)"
CinematicModeExBJ=~On/Off," 電影模式對 ",~玩家組," ,轉換時間為 ",~Time," 秒"
CinematicModeExBJHint=

CinematicFadeBJ="淡入淡出濾鏡"
CinematicFadeBJ=~Fade Type," 使用 ",~Duration," 秒時間,使用圖片: ",~Texture," 顏色值:(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度: ",~Transparency,"%"
CinematicFadeBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

CinematicFilterGenericBJ="高級濾鏡"
CinematicFilterGenericBJ="持續時間: ",~Duration," 秒,混合方式: ",~Blending Method," 使用圖片: ",~Texture," 開始顏色值:(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度: ",~Transparency,"% ,結束顏色值:(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度:",~Transparency,"%"
CinematicFilterGenericBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

DisplayCineFilterBJ="顯示/隱藏 濾鏡"
DisplayCineFilterBJ=~Show/Hide," 濾鏡"
DisplayCineFilterBJHint=

PingMinimap="小地圖信號(所有玩家) [R]"
PingMinimap="對所有玩家發送小地圖信號到坐標(",~X,",",~Y,") 持續時間: ",~Duration," 秒"
PingMinimapHint=

PingMinimapLocForForce="小地圖信號(指定玩家組)"
PingMinimapLocForForce="對 ",~玩家組," 發送小地圖信號到 ",~指定點," ,持續時間: ",~Duration," 秒"
PingMinimapLocForForceHint=

PingMinimapEx="小地圖信號(指定顏色)(所有玩家) [R]"
PingMinimapEx="對所有玩家發送小地圖信號到坐標(",~X,",",~Y,") 持續時間: ",~Duration," 秒, 信號顏色:(",~Red,",",~Green,",",~Blue,") 信號類型: ",~Style
PingMinimapExHint="顏色格式為(紅,綠,藍). 顏色值取值範圍為0-255."

PingMinimapLocForForceEx="小地圖信號(指定顏色)(指定玩家組)"
PingMinimapLocForForceEx="對 ",~玩家組," 發送小地圖信號到 ",~指定點," ,持續時間: ",~Duration," 秒,信號類型: ",~Style," 信號顏色:(",~Red,"%, ",~Green,"%, ",~Blue,"%)"
PingMinimapLocForForceExHint="顏色格式為(紅,綠,藍). 警告信號總是紅色不可變."

UnitAddIndicator="閃動指示器(對單位) [R]"
UnitAddIndicator="對 ",~單位," 閃動指示器,使用顏色:(",~Red,"%, ",~Green,"%, ",~Blue,"%) Alpha通道值: ",~Transparency
UnitAddIndicatorHint="顏色格式為(紅,綠,藍). Alpha通道值0為不可見. 顏色值和Alpha通道值取值範圍為0-255."

UnitAddIndicatorBJ="閃動指示器(對單位)"
UnitAddIndicatorBJ="對 ",~單位," 閃動指示器,使用顏色(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度 ",~Transparency,"%"
UnitAddIndicatorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

DestructableAddIndicator="閃動指示器(對可破壞物) [R]"
DestructableAddIndicator="對 ",~可破壞物," 閃動指示器,使用顏色:(",~Red,"%, ",~Green,"%, ",~Blue,"%) Alpha通道值: ",~Transparency
DestructableAddIndicatorHint="顏色格式為(紅,綠,藍). Alpha通道值0為不可見. 顏色值和Alpha通道值取值範圍為0-255."

DestructableAddIndicatorBJ="閃動指示器(對可破壞物)"
DestructableAddIndicatorBJ="對 ",~可破壞物," 閃動指示器,使用顏色(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度 ",~Transparency,"%"
DestructableAddIndicatorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

ItemAddIndicator="閃動指示器(對物品) [R]"
ItemAddIndicator="對 ",~物品," 閃動指示器,使用顏色:(",~Red,"%, ",~Green,"%, ",~Blue,"%) Alpha通道值: ",~Transparency
ItemAddIndicatorHint="顏色格式為(紅,綠,藍). Alpha通道值0為不可見. 顏色值和Alpha通道值取值範圍為0-255."

ItemAddIndicatorBJ="閃動指示器(對物品)"
ItemAddIndicatorBJ="對 ",~物品," 閃動指示器,使用顏色(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度 ",~Transparency,"%"
ItemAddIndicatorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

ShowInterface="開啟/關閉 信箱模式(所有玩家) [R]"
ShowInterface=~開啟/關閉," 信箱模式,轉換時間為 ",~Duration," 秒"
ShowInterfaceHint="使用電影鏡頭模式,隱藏遊戲界面."

ShowInterfaceForceOff="信箱模式開啟(指定玩家組)"
ShowInterfaceForceOff="對 ",~玩家組," 開啟信箱模式,轉換時間為 ",~Duration," 秒"
ShowInterfaceForceOffHint="使用電影鏡頭模式,隱藏遊戲界面."

ShowInterfaceForceOn="信箱模式開啟關閉(指定玩家組)"
ShowInterfaceForceOn="對 ",~玩家組," 關閉信箱模式,轉換時間為 ",~Duration," 秒"
ShowInterfaceForceOnHint="關閉信箱模式,返回遊戲界面."

EnableUserControl="啟用/禁用玩家控制權(所有玩家) [R]"
EnableUserControl=~啟用/禁用," 玩家控制權"
EnableUserControlHint=

SetUserControlForceOff="禁用玩家控制權(指定玩家組)"
SetUserControlForceOff="禁用 ",~玩家組," 的控制權"
SetUserControlForceOffHint=

SetUserControlForceOn="啟用玩家控制權(指定玩家組)"
SetUserControlForceOn="啟用 ",~玩家組," 的控制權"
SetUserControlForceOnHint=

EnableOcclusion="允許/禁止閉塞(所有玩家) [R]"
EnableOcclusion=~Enable/Disable," 閉塞"
EnableOcclusionHint=

EnableOcclusionBJ="允許/禁止閉塞(指定玩家組)"
EnableOcclusionBJ=~Enable/Disable," 閉塞對 ",~玩家組
EnableOcclusionBJHint=

EnableWorldFogBoundary="允許/禁止 邊界染色(所有玩家) [R]"
EnableWorldFogBoundary=~Enable/Disable," 邊界染色,應用於所有玩家"
EnableWorldFogBoundaryHint="禁用邊界染色時邊界為普通地形,不顯示為黑色,但仍是不可通行的."

EnableWorldFogBoundaryBJ="允許/禁止 邊界染色(指定玩家組)"
EnableWorldFogBoundaryBJ=~Enable/Disable," 邊界染色,應用於 ",~玩家組
EnableWorldFogBoundaryBJHint="禁用邊界染色時邊界為普通地形,不顯示為黑色,但仍是不可通行的."
// Animation actions
SetUnitAnimation="播放單位動畫"
SetUnitAnimation="播放 ",~Unit," 的 ",~動畫名," 動作"
SetUnitAnimationHint="通過 '重置單位動作' 恢復到普通的動作."

SetUnitAnimationByIndex="播放單位指定序號動動作 [R]"
SetUnitAnimationByIndex="播放 ",~單位," 的第",~序號," 號動作"
SetUnitAnimationByIndexHint="可以指定播放所有的單位動畫,不過需要自己多嘗試.每個單位的動作序號不一樣的."

SetUnitAnimationWithRarity="播放單位動運作(指定概率)"
SetUnitAnimationWithRarity="播放 ",~單位," 的 ",~Animation Name," 動作,只用 ",~Rarity," 動作"
SetUnitAnimationWithRarityHint="通過 '重置單位動作' 恢復到普通的動作."

QueueUnitAnimationBJ="單位動畫加入隊列"
QueueUnitAnimationBJ="把 ",~單位," 的 ",~Animation Name," 動作添加到動作隊列"
QueueUnitAnimationBJHint="單位按隊列中運作的先後順序播放動作."

ResetUnitAnimation="重置單位動畫"
ResetUnitAnimation="重置 ",~單位," 的動作,恢復到普通狀態"
ResetUnitAnimationHint="無論該單位在什麼動作,都將把單位的動作恢復到普通狀態(也就是'stand'動作的狀態)."

AddUnitAnimationProperties="添加/刪除 單位動畫附加名 [R]"
AddUnitAnimationProperties="給 ",~單位," 附加動作 ",~Tag," ,狀態為 ",~Add/Remove
AddUnitAnimationPropertiesHint="比如惡魔獵手添加'alternate'會顯示為惡魔形態;農民添加'gold'則為背負黃金形態."

AddUnitAnimationPropertiesBJ="添加/刪除單位動畫附加名"
AddUnitAnimationPropertiesBJ=~Add/Remove," ",~Tag," 動畫附加名給 ",~單位
AddUnitAnimationPropertiesBJHint="比如惡魔獵手添加'alternate'會顯示為惡魔形態;農民添加'gold'則為背負黃金形態."

SetUnitLookAt="鎖定身體朝向"
SetUnitLookAt="鎖定 ",~單位," 的 ",~Source," 朝向 ",~目標單位," ,偏移坐標 (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtHint="單位的該身體部件會一直朝向目標單位的偏移坐標點處,直到使用'重置身體朝向'. 坐標偏移以目標單位腳下為坐標原點."

ResetUnitLookAt="重置身體朝向"
ResetUnitLookAt="重置 ",~單位," 的身體朝向"
ResetUnitLookAtHint="恢復單位的身體朝向為正常狀態."

SetUnitScale="改變單位尺寸(按倍數) [R]"
SetUnitScale="改變 ",~單位," 的尺寸縮放為:(",~X,",",~Y,",",~Z,")"
SetUnitScaleHint="縮放尺寸使用(長,寬,高)格式."

SetUnitScalePercent="改變單位尺寸(按比例)"
SetUnitScalePercent="設置 ",~Unit," 的縮放尺寸為 (",~X,"%, ",~Y,"%, ",~Z,"%)"
SetUnitScalePercentHint="縮放尺寸使用(長,寬,高)格式."

SetUnitVertexColor="改變單位的顏色(RGB:0-255) [R]"
SetUnitVertexColor="改變 ",~單位," 的顏色值: (",~Red,",",~Green,",",~Blue,"), 透明值: ",~Transparency
SetUnitVertexColorHint="顏色格式為(紅,綠,藍). 大多數單位使用(255,255,255)的顏色值和255的Alpha值. 透明值為0是不可見的.顏色值和Alpha值取值範圍為0-255."

SetUnitVertexColorBJ="改變單位顏色(RGB:0-100%)"
SetUnitVertexColorBJ="改變 ",~單位,"  的顏色比例: (",~Red,"%, ",~Green,"%, ",~Blue,"%),透明度: ",~Transparency,"%"
SetUnitVertexColorBJHint="顏色格式為(紅,綠,藍). 大多數單位使用100%的顏色值和0%透明度. 100%透明度是完全透明的."

SetUnitTimeScale="改變單位動畫播放速度(按倍數) [R]"
SetUnitTimeScale="改變 ",~單位," 的動畫播放速度為正常速度的 ",~Percent," 倍"
SetUnitTimeScaleHint="設置1倍動畫播放速度來恢復正常狀態."

SetUnitTimeScalePercent="改變單位動畫播放速度(按百分比)"
SetUnitTimeScalePercent="改變 ",~單位," 的動畫播放速度為正常速度的 ",~Percent,"%"
SetUnitTimeScalePercentHint="設置100%動畫播放速度來恢復正常狀態."

SetUnitTurnSpeedBJ="改變單位轉身速度"
SetUnitTurnSpeedBJ="改變 ",~單位," 的轉身速度為 ",~Value
SetUnitTurnSpeedBJHint="轉身速度表示單位改變面向方向時的速度，數值(0-1)越小表示轉身越慢，為0則無法轉身。"

SetUnitBlendTimeBJ="改變單位混合時間"
SetUnitBlendTimeBJ="改變 ",~單位," 的混合時間為 ",~數值
SetUnitBlendTimeBJHint="單位動畫圖像混合時間. 決定身體部件連接的快慢,比如攻擊時手臂揮舞的速度. 默認值0.15,增大該值會導致動作僵硬化."

SetUnitFlyHeightBJ="改變單位飛行高度"
SetUnitFlyHeightBJ="改變 ",~單位," 的飛行高度為 ",~數值," ,變換速率: ",~數值
SetUnitFlyHeightBJHint="飛行單位可以直接改變飛行高度. 其他單位通過添加/刪除 替換為飛行單位的變身技能(如烏鴉形態)之後,也能改變飛行高度."

SetUnitPropWindow="改變單位轉向角度(弧度制) [R]"
SetUnitPropWindow="改變 ",~單位," 的轉向角度為 ",~數值," (弧度制)"
SetUnitPropWindowHint="設置單位轉身時的轉向角度. 數值越大轉向幅度越大. "

SetUnitPropWindowBJ="改變單位轉向角度(角度制)"
SetUnitPropWindowBJ="改變 ",~單位," 的轉向角度為 ",~數值," 度"
SetUnitPropWindowBJHint="設置單位轉身時的轉向角度. 數值越大轉向幅度越大. 大於360度的角將作為359度角處理."

SetDestructableAnimationBJ="播放可破壞物動畫"
SetDestructableAnimationBJ="播放 ",~可破壞物," 的 ",~Animation Name," 動作"
SetDestructableAnimationBJHint=

QueueDestructableAnimationBJ="將可破壞物動畫加入隊列"
QueueDestructableAnimationBJ="將 ",~可破壞物," 的 ",~Animation Name," 動作加入隊列"
QueueDestructableAnimationBJHint=

SetDestructableAnimationSpeed="改變可破壞物動畫播放速度 [R]"
SetDestructableAnimationSpeed="改變 ",~可破壞物," 的動畫播放速度為正常的 ",~Percent,"倍"
SetDestructableAnimationSpeedHint="設置1倍動畫播放速度來恢復正常狀態."

SetDestAnimationSpeedPercent="改變可破壞物動畫播放速度"
SetDestAnimationSpeedPercent="改變 ",~可破壞物," 的動畫播放速度為正常的 ",~Percent,"%"
SetDestAnimationSpeedPercentHint="設置100%動畫播放速度來恢復正常狀態."

SetDoodadAnimationRect="播放矩形區域內地形裝飾物動畫 [R]"
SetDoodadAnimationRect="播放 ",~Rect," 內所有 ",~裝飾物類型," 的 ",~Animation Name," 動作(",~允許/禁止," 隨機播放)"
SetDoodadAnimationRectHint="特殊動畫名: 'show', 'hide', 'soundon', 'soundoff'. 隨機播放:比如某裝飾物有好幾個'stand'動作,則允許該項時會隨機抽取某個動作播放,而禁止該項時只播放首個動作."

SetDoodadAnimationRectBJ="播放矩形區域內地形裝飾物動畫"
SetDoodadAnimationRectBJ="播放 ",~Animation Name," 動作對所有 ",~裝飾物類型," 在 ",~Rect," 內"
SetDoodadAnimationRectBJHint="特殊動畫名: 'show', 'hide', 'soundon', 'soundoff'"

SetDoodadAnimation="播放圓範圍內地形裝飾物動畫 [R]"
SetDoodadAnimation="選取圓心為(",~X,",",~Y,"),半徑為 ",~半徑," 的圓範圍內的 ",~裝飾物類型,"(選取方式:",~選取方式,"), 做 ",~Animation Name," 動作(",~允許/禁止," 隨機播放)"
SetDoodadAnimationHint="特殊動畫名: 'show', 'hide', 'soundon', 'soundoff'. 隨機播放:比如某裝飾物有好幾個'stand'動作,則允許該項時會隨機抽取某個動作播放,而禁止該項時只播放首個動作."

SetDoodadAnimationBJ="播放圓範圍內地形裝飾物動畫"
SetDoodadAnimationBJ="播放 ",~Animation Name," 動作對所有 ",~裝飾物類型," 在半徑為 ",~Radius," 圓心為 ",~指定點," 的圓範圍內"
SetDoodadAnimationBJHint="特殊動畫名: 'show', 'hide', 'soundon', 'soundoff'"
// Dialog actions
DialogDisplay="顯示/隱藏 [R]"
DialogDisplay="對 ",~Player," 設置 ",~對話框," 的狀態為 ",~Show/Hide
DialogDisplayHint="對話框不能應用於地圖初始化事件."

DialogDisplayBJ="顯示/隱藏"
DialogDisplayBJ=~Show/Hide," ",~Dialog," 對 ",~Player
DialogDisplayBJHint="對話框不能應用於地圖初始化事件."

DialogSetMessageBJ="改變標題"
DialogSetMessageBJ="改變 ",~Dialog," 的標題為 ",~Title
DialogSetMessageBJHint=

DialogAddButtonBJ="添加對話按鈕"
DialogAddButtonBJ="為 ",~Dialog," 添加一個對話按鈕,按鈕標籤為 ",~Text
DialogAddButtonBJHint="使用'最後創建的對話按鈕'來獲得創建的對話按鈕."

DialogAddButtonWithHotkeyBJ="添加對話框按鈕(有快捷鍵) [R]"
DialogAddButtonWithHotkeyBJ="為 ",~對話框," 添加一個按鈕,按鈕標題為: ",~文字,",快捷鍵為: ",~HotKey
DialogAddButtonWithHotkeyBJHint="使用'最後創建的對話按鈕'來獲得創建的對話按鈕."

DialogAddQuitButton="添加退出遊戲按鈕 [R]"
DialogAddQuitButton="為 ",~對話框," 添加退出遊戲按鈕(",~跳過," 計分屏) 按鈕標題為: ",~文字," 快捷鍵為: ",~HotKey
DialogAddQuitButtonHint="該函數創建的按鈕並不被紀錄到'最後創建的對話框按鈕'.當該按鈕被點擊時會退出遊戲"

DialogClearBJ="清空"
DialogClearBJ="清空 ",~Dialog
DialogClearBJHint="清除對話框的標題和按鈕."

DialogDestroy="刪除 [R]"
DialogDestroy="刪除 ",~對話框
DialogDestroyHint="將對話框清除出內存.一般來說對話框並不需要刪除."

// Multiboard actions
CreateMultiboardBJ="創建"
CreateMultiboardBJ="創建一個列數為 ",~Columns," 行數為 ",~Rows," 標題為 ",~文字," 的多面板"
CreateMultiboardBJHint="多面板不能在地圖初始化時顯示."

DestroyMultiboardBJ="刪除"
DestroyMultiboardBJ="刪除 ",~Multiboard
DestroyMultiboardBJHint=

MultiboardDisplay="顯示/隱藏 [R]"
MultiboardDisplay="設置 ",~Multiboard," ",~Show/Hide
MultiboardDisplayHint="多面板不能在地圖初始化時顯示."

MultiboardDisplayBJ="顯示/隱藏"
MultiboardDisplayBJ=~Show/Hide," ",~Multiboard
MultiboardDisplayBJHint="多面板不能在地圖初始化時顯示."

MultiboardSuppressDisplay="顯示/隱藏多面板模式 [R]"
MultiboardSuppressDisplay=~打開/關閉," 隱藏多面板模式"
MultiboardSuppressDisplayHint="隱藏多面板模式將無法顯示多面板."

MultiboardAllowDisplayBJ="顯示/隱藏多面板模式"
MultiboardAllowDisplayBJ=~Show/Hide," 多面板模式"
MultiboardAllowDisplayBJHint="隱藏多面板模式將無法顯示多面板."

MultiboardMinimize="最大/最小化 [R]"
MultiboardMinimize="設置 ",~Multiboard," ",~Minimize/Maximize
MultiboardMinimizeHint="最小化的多面板只顯示標題."

MultiboardMinimizeBJ="最大/最小化"
MultiboardMinimizeBJ=~Minimize/Maximize," ",~Multiboard
MultiboardMinimizeBJHint="最小化的多面板只顯示標題."

MultiboardClear="清空多面板"
MultiboardClear="清空 ",~Multiboard
MultiboardClearHint="清空該多面板中的所有行和列."

MultiboardSetTitleText="設置標題"
MultiboardSetTitleText="設置 ",~Multiboard," 的標題為 ",~文字
MultiboardSetTitleTextHint=

MultiboardSetTitleTextColor="設置標題顏色 [R]"
MultiboardSetTitleTextColor="設置 ",~Multiboard," 的標題顏色為(",~Red,",",~Green,",",~Blue,"), Alpha值為 ",~Transparency
MultiboardSetTitleTextColorHint="顏色格式為(紅,綠,藍). Alpha值為0是不可見的. 顏色值和Alpha值取值範圍為0-255."

MultiboardSetTitleTextColorBJ="設置標題顏色"
MultiboardSetTitleTextColorBJ="設置 ",~Multiboard," 的標題顏色為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
MultiboardSetTitleTextColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

MultiboardSetRowCount="設置行數"
MultiboardSetRowCount="設置 ",~Multiboard," 的行數為 ",~Rows
MultiboardSetRowCountHint=

MultiboardSetColumnCount="設置列數"
MultiboardSetColumnCount="設置 ",~Multiboard," 的列數為 ",~Columns
MultiboardSetColumnCountHint=

MultiboardSetItemStyle="設置指定項目顯示風格 [R]"
MultiboardSetItemStyle="設置 ",~多面板項目," 的顯示風格: ",~Show/Hide," 文字 ",~Show/Hide," 圖標"
MultiboardSetItemStyleHint=

MultiboardSetItemValue="設置指定項目文本 [R]"
MultiboardSetItemValue="設置 ",~多面板項目," 的項目文本為 ",~文字
MultiboardSetItemValueHint=

MultiboardSetItemValueColor="設置指定項目顏色 [R]"
MultiboardSetItemValueColor="設置 ",~多面板項目," 的項目顏色為(",~Red,",",~Green,",",~Blue,"), Alpha值為 ",~Transparency
MultiboardSetItemValueColorHint="顏色格式為(紅,綠,藍). Alpha值為0是不可見的. 顏色值和Alpha值取值範圍為0-255."

MultiboardSetItemWidth="設置指定項目寬度 [R]"
MultiboardSetItemWidth="設置 ",~多面板項目," 的項目寬度為 ",~Width," 倍屏幕寬度"

MultiboardSetItemIcon="設置指定項目圖標 [R]"
MultiboardSetItemIcon="設置 ",~多面板項目," 的項目圖標為 ",~Icon File

MultiboardSetItemsStyle="設置所有項目顯示風格 [R]"
MultiboardSetItemsStyle="設置 ",~多面板," 的所有項目顯示風格: ",~Show/Hide," 文字 ",~Show/Hide," 圖標"

MultiboardSetItemsValue="設置所有項目文本 [R]"
MultiboardSetItemsValue="設置 ",~多面板," 的所有項目文本為 ",~文字

MultiboardSetItemsValueColor="設置所有項目顏色 [R]"
MultiboardSetItemsValueColor="設置 ",~多面板," 的所有項目顏色為(",~Red,",",~Green,",",~Blue,"), Alpha值為 ",~Transparency
MultiboardSetItemsValueColorHint="顏色格式為(紅,綠,藍). Alpha值為0是不可見的. 顏色值和Alpha值取值範圍為0-255."

MultiboardSetItemsWidth="設置所有項目寬度 [R]"
MultiboardSetItemsWidth="設置 ",~多面板," 的所有項目寬度為 ",~Width," 倍屏幕寬度"

MultiboardSetItemsIcon="設置所有項目圖標 [R]"
MultiboardSetItemsIcon="設置 ",~多面板," 的所有項目圖標為 ",~Icon File

MultiboardSetItemStyleBJ="設置項目顯示風格"
MultiboardSetItemStyleBJ="設置 ",~Multiboard," 第 ",~Column," 列,第 ",~Row," 行項目的顯示風格: ",~Show/Hide," 文字 ",~Show/Hide," 圖標"
MultiboardSetItemStyleBJHint="可以設置行/列數為0來指代所有的行/列. "

MultiboardSetItemValueBJ="設置項目文本"
MultiboardSetItemValueBJ="設置 ",~Multiboard," 第 ",~Column," 列,第 ",~Row," 行的項目文本為 ",~文字
MultiboardSetItemValueBJHint="可以設置行/列數為0來指代所有的行/列."

MultiboardSetItemColorBJ="設置項目顏色"
MultiboardSetItemColorBJ="設置 ",~Multiboard," 第 ",~Column," 列,第 ",~Row," 行的項目顏色為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
MultiboardSetItemColorBJHint="可以設置行/列數為0來指代所有的行/列. 顏色格式為(紅,綠,藍). 透明度100%是不可見的."

MultiboardSetItemWidthBJ="設置項目寬度"
MultiboardSetItemWidthBJ="設置 ",~Multiboard," 第 ",~Column," 列,第 ",~Row," 行的項目寬度為屏幕的 ",~Width,"%"
MultiboardSetItemWidthBJHint=

MultiboardSetItemIconBJ="設置項目圖標"
MultiboardSetItemIconBJ="設置 ",~Multiboard," 第 ",~Column," 列,第 ",~Row," 行的項目圖標為 ",~Icon File
MultiboardSetItemIconBJHint=

MultiboardReleaseItem="刪除多面板項目 [R]"
MultiboardReleaseItem="刪除 ",~多面板項目
MultiboardReleaseItemHint="並不會影響對多面板的顯示. 多面板項目指向多面板但不附屬於多面板."

// Environment actions
AddWeatherEffectSaveLast="添加天氣效果"
AddWeatherEffectSaveLast="給 ",~Rect," 添加天氣效果: ",~Weather Id
AddWeatherEffectSaveLastHint="用'最後添加的天氣效果'來獲得所添加的天氣效果."

EnableWeatherEffect="啟用/禁用 天氣效果"
EnableWeatherEffect="設置 ",~Weather Effect," 的狀態為: ",~On/Off
EnableWeatherEffectHint="可以使用'環境 - 創建天氣效果'動作來創建天氣效果."

RemoveWeatherEffectBJ="刪除天氣效果"
RemoveWeatherEffectBJ="刪除 ",~天氣效果
RemoveWeatherEffectBJHint=

TerrainDeformationCraterBJ="創建地形變化:彈坑"
TerrainDeformationCraterBJ="創建一個持續 ",~Duration," 秒的 ",~Type," 彈坑變形在 ",~指定點," ,半徑: ",~Radius,"深度: ",~Depth
TerrainDeformationCraterBJHint="使用'最後創建的地形變化'來獲取該變化. 深度可取負數. 永久地形變化在保存遊戲時不會被記錄."

TerrainDeformationRippleBJ="創建地形變化:波紋"
TerrainDeformationRippleBJ="創建一個持續 ",~Duration," 秒的 ",~Type," 波紋變形在 ",~指定點," ,開始半徑: ",~Radius," ,結束半徑: ",~Radius," ,深度: ",~Depth," 週期: ",~Time," 秒,波間距: ",~Distance
TerrainDeformationRippleBJHint="使用'最後創建的地形變化'來獲取該變化."

TerrainDeformationWaveBJ="創建地形變化:衝擊波"
TerrainDeformationWaveBJ="創建一個持續 ",~Duration," 秒的衝擊波變形從 ",~Source," 到 ",~Target," ,半徑: ",~Radius," ,深度: ",~Depth," ,效果存在時間: ",~Delay," 秒"
TerrainDeformationWaveBJHint="使用'最後創建的地形變化'來獲取該變化. 深度可取負數."

TerrainDeformationRandomBJ="創建地形變化:隨機"
TerrainDeformationRandomBJ="創建一個持續 ",~Duration," 秒的隨機變形變形在 ",~指定點," ,半徑: ",~Radius," 最小深度: ",~Minimum," 最大深度: ",~Maximum,", 變形間隔: ",~Update Interval," 秒"
TerrainDeformationRandomBJHint="使用'最後創建的地形變化'來獲取該變化."

TerrainDeformStop="停止地形變化 [R]"
TerrainDeformStop="停止 ",~Terrain Deformation," ,衰退時間: ",~Duration," 毫秒"
TerrainDeformStopHint="地形變化會平滑地過渡到無."

TerrainDeformationStopBJ="停止地形變化"
TerrainDeformationStopBJ="停止 ",~Terrain Deformation," ,衰退時間: ",~Duration," 秒"
TerrainDeformationStopBJHint="地形變化會平滑地過渡到無."

TerrainDeformStopAll="停止所有地形變化"
TerrainDeformStopAll="停止所有地形變化"
TerrainDeformStopAllHint="包括由技能引起的地形變化."

SetWaterDeforms="開啟/關閉 水面變形"
SetWaterDeforms=~On/Off," 水面變形"
SetWaterDeformsHint="開啟時當發生地形變化時水面高度也會隨著變化. 對永久變形無效."

SetTerrainType="改變地形類型(指定坐標) [R]"
SetTerrainType="改變(",~X,",",~Y,")處的地形為 ",~Terrain Type," ,使用樣式: ",~Variation," 範圍: ",~Area," 形狀: ",~Shape
SetTerrainTypeHint="地形樣式-1表示隨機樣式. 範圍即地形編輯器中的刷子大小.1表示128x128範圍"

SetTerrainTypeBJ="改變地形類型(指定點)"
SetTerrainTypeBJ="改變 ",~指定點," 處的地形為 ",~Terrain Type," ,使用樣式: ",~Variation," 範圍: ",~Area," 形狀: ",~Shape
SetTerrainTypeBJHint="地形樣式-1表示隨機樣式. 範圍即地形編輯器中的刷子大小.1表示128x128範圍"

SetTerrainPathable="設置地形通行狀態(指定坐標) [R]"
SetTerrainPathable="設置(",~X,",",~Y,")處單元點的 ",~Pathing," 地形通行狀態為: ",~On/Off
SetTerrainPathableHint="例:設置'建造'通行狀態為開,則該點可以建造建築. 一個單元點範圍為32x32."

SetTerrainPathableBJ="設置地形通行狀態(指定點)"
SetTerrainPathableBJ="設置 ",~指定點," 處單元點的 ",~Pathing," 地形通行狀態為: ",~On/Off
SetTerrainPathableBJHint="例:設置'建造'通行狀態為開,則該點可以建造建築. 一個單元點範圍為32x32."

SetWaterBaseColor="設置水顏色 [R]"
SetWaterBaseColor="設置水顏色為:(",~Red,",",~Green,",",~Blue,"), 透明值為: ",~Transparency
SetWaterBaseColorHint="顏色格式為(紅,綠,藍). 透明值0為不可見. 顏色值和透明道值取值範圍為0-255."

SetWaterBaseColorBJ="設置水顏色"
SetWaterBaseColorBJ="設置水顏色為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
SetWaterBaseColorBJHint="顏色格式為(紅,綠,藍). 100%透明的水是不可見的."

SetSkyModel="設置天空"
SetSkyModel="設置天空模型為 ",~Sky
SetSkyModelHint=

SetTerrainFogEx="設置迷霧 [R]"
SetTerrainFogEx="迷霧風格: ",~Style,", Z軸開始端: ",~Z-Start,", Z軸結束端: ",~Z-End,", 密度: ",~Density," 顏色:(",~Red,",",~Green,",",~Blue,")"
SetTerrainFogExHint="顏色格式為(紅,綠,藍). 取值範圍0.00-1.00."

SetTerrainFogExBJ="設置迷霧"
SetTerrainFogExBJ="迷霧風格: ",~Style,", Z軸開始端: ",~Z-Start,", Z軸結束端: ",~Z-End,", 密度: ",~Density," 顏色:(",~Red,"%, ",~Green,"%, ",~Blue,"%)"
SetTerrainFogExBJHint="顏色格式為(紅,綠,藍)."

ResetTerrainFogBJ="重置迷霧"
ResetTerrainFogBJ="重置迷霧為默認設置"
ResetTerrainFogBJHint=

//SetBlightPoint
//SetBlightLoc

SetBlightRect="創建/刪除荒蕪地表(矩形區域) [R]"
SetBlightRect="為 ",~Player," 在 ",~Region," ",~Create/Remove," 一塊荒蕪地表"
SetBlightRectHint=

SetBlightRectBJ="創建/刪除荒蕪地表(矩形區域)"
SetBlightRectBJ=~Create/Remove," 一塊荒蕪地表給 ",~Player," 在 ",~Region
SetBlightRectBJHint=

SetBlight="創建/刪除荒蕪地表(圓範圍)(指定坐標) [R]"
SetBlight="為 ",~Player," 在圓心為(",~X,",",~Y,"),半徑為 ",~R," 的圓範圍內 ",~Create/Remove," 一塊荒蕪地表"
SetBlightHint=

SetBlightRadiusLocBJ="創建/刪除荒蕪地表(圓範圍)(指定點)"
SetBlightRadiusLocBJ=~Create/Remove," 一塊荒蕪地表給 ",~Player," 在圓心為 ",~指定點," 半徑為 ",~Radius," 的圓範圍"
SetBlightRadiusLocBJHint=


// Camera actions
CameraSetupApplyForceDuration="應用鏡頭(所有玩家)(限時) [R]"
CameraSetupApplyForceDuration="將 ",~鏡頭," 應用方式設置為 ",~Apply Method,",持續 ",~Time," 秒"
CameraSetupApplyForceDurationHint=

CameraSetupApplyForPlayer="應用鏡頭(指定玩家)(限時)"
CameraSetupApplyForPlayer="",~應用方式," ",~鏡頭," 作用於 ",~Player,",持續 ",~Time," 秒"
CameraSetupApplyForPlayerHint=

PanCameraToTimed="平移鏡頭(所有玩家)(限時) [R]"
PanCameraToTimed="平移玩家鏡頭到(",~X,",",~Y,"),持續 ",~Time," 秒"
PanCameraToTimedHint=

PanCameraToTimedLocForPlayer="平移鏡頭(指定玩家)(限時)"
PanCameraToTimedLocForPlayer="平移 ",~Player," 的鏡頭到 ",~點,",持續 ",~Time," 秒"
PanCameraToTimedLocForPlayerHint=

PanCameraToTimedWithZ="指定高度平移鏡頭(所有玩家)(限時) [R]"
PanCameraToTimedWithZ="平移玩家鏡頭到(",~X,",",~Y,"),鏡頭距離地面高度為 ",~Z,",持續 ",~Time," 秒"
PanCameraToTimedWithZHint="在指定移動路徑上鏡頭不會低於地面高度."

PanCameraToTimedLocWithZForPlayer="指定高度平移鏡頭(指定玩家)(限時)"
PanCameraToTimedLocWithZForPlayer="平移 ",~Player," 的鏡頭到 ",~Point," 距離地面高度為 ",~Z,",持續 ",~Time," 秒"
PanCameraToTimedLocWithZForPlayerHint="在指定移動路徑上鏡頭不會低於地面高度."



SmartCameraPanBJ="在必要時平移鏡頭(指定玩家)(限時)"
SmartCameraPanBJ="在必要時平移 ",~Player," 的鏡頭到 ",~指定點," ,持續 ",~Time," 秒"
SmartCameraPanBJHint="如果距離過遠則直接跳轉鏡頭,如果過近則不做動作."



SetCameraField="設置鏡頭屬性(所有玩家)(限時) [R]"
SetCameraField="設置玩家的鏡頭屬性 ",~Field," 為 ",~數值,",持續 ",~Time," 秒"
SetCameraFieldHint=

SetCameraFieldForPlayer="設置鏡頭屬性(指定玩家)(限時)"
SetCameraFieldForPlayer="設置 ",~Player," 的鏡頭屬性 ",~Field," 為 ",~Value,",持續 ",~Time," 秒"
SetCameraFieldForPlayerHint=
SetCameraRotateMode="指定點旋轉鏡頭(所有玩家)(弧度)(限時) [R]"
SetCameraRotateMode="以(",~X,",",~Y,")為中心,旋轉弧度為",~Rad,", 持續: ",~Time," 秒"
SetCameraRotateModeHint=

RotateCameraAroundLocBJ="指定點旋轉鏡頭(指定玩家)(角度)(限時)"
RotateCameraAroundLocBJ="旋轉角度為",~Angle," 度,以 ",~點," 為中心,應用於 ",~Player,",持續 ",~Time," 秒"
RotateCameraAroundLocBJHint=

SetCameraTargetController="鎖定鏡頭到單位(所有玩家) [R]"
SetCameraTargetController="鎖定玩家鏡頭到 ",~單位,", 偏移坐標(",~X,", ",~Y,") ,使用 ",~Rotation Source
SetCameraTargetControllerHint="偏移坐標(X,Y)以單位腳底為原點坐標."

SetCameraTargetControllerNoZForPlayer="鎖定鏡頭到單位(指定玩家)"
SetCameraTargetControllerNoZForPlayer="鎖定 ",~Player," 的鏡頭到 ",~單位,", 偏移坐標(",~X,", ",~Y,") ,使用 ",~Rotation Source
SetCameraTargetControllerNoZForPlayerHint="偏移坐標(X,Y)以單位腳底為原點坐標."

SetCameraOrientController="鎖定鏡頭到單位(固定鏡頭源)(所有玩家) [R]"
SetCameraOrientController="鎖定玩家鏡頭到 ",~單位,", 偏移坐標(",~X,", ",~Y,")"
SetCameraOrientControllerHint="偏移坐標(X,Y)以單位腳底為原點坐標."

SetCameraOrientControllerForPlayerBJ="鎖定鏡頭到單位(固定鏡頭源)(指定玩家)"
SetCameraOrientControllerForPlayerBJ="鎖定 ",~Player," 的鏡頭到 ",~單位,", 偏移坐標(",~X,", ",~Y,")"
SetCameraOrientControllerForPlayerBJHint="偏移坐標(X,Y)以單位腳底為原點坐標."

SetCinematicCamera="播放電影鏡頭(所有玩家) [R]"
SetCinematicCamera="對所有玩家播放電影鏡頭: ",~Camera File
SetCinematicCameraHint="在'Objects\CinematicCameras'目錄下有一些電影鏡頭,可用Mpq工具來查詢."

SetCinematicCameraForPlayer="播放電影鏡頭(指定玩家)"
SetCinematicCameraForPlayer="對 ",~Player," 播放電影鏡頭: ",~Camera File
SetCinematicCameraForPlayerHint="在'Objects\CinematicCameras'目錄下有一些電影鏡頭,可用Mpq工具來查詢."

StopCamera="停止播放鏡頭(所有玩家) [R]"
StopCamera="讓所有玩家停止播放鏡頭"
StopCameraHint="比如在平移鏡頭的過程中可用該動作來中斷平移."

StopCameraForPlayerBJ="停止播放鏡頭(指定玩家)"
StopCameraForPlayerBJ="讓 ",~Player," 停止播放鏡頭"
StopCameraForPlayerBJHint="比如在平移鏡頭的過程中可用該動作來中斷平移."

ResetToGameCamera="重置遊戲鏡頭(所有玩家) [R]"
ResetToGameCamera="重置玩家鏡頭為遊戲默認狀態,持續  ",~Time," 秒"
ResetToGameCameraHint=

ResetToGameCameraForPlayer="重置遊戲鏡頭(指定玩家)"
ResetToGameCameraForPlayer="重置 ",~Player," 的鏡頭為遊戲默認狀態,持續 ",~Time," 秒"
ResetToGameCameraForPlayerHint=

CameraSetSmoothingFactorBJ="設置鏡頭平滑參數"
CameraSetSmoothingFactorBJ="設置鏡頭平滑參數為 ",~Factor
CameraSetSmoothingFactorBJHint="數值越大,鏡頭轉換越平滑."

CameraResetSmoothingFactorBJ="重置鏡頭平滑參數"
CameraResetSmoothingFactorBJ="重置鏡頭平滑參數為遊戲默認值"
CameraResetSmoothingFactorBJHint="其實就是設置鏡頭平滑參數為0."

//CameraSetSourceNoise
//CameraSetTargetNoise

CameraSetSourceNoiseEx="搖晃鏡頭源(所有玩家) [R]"
CameraSetSourceNoiseEx="搖晃玩家的鏡頭源, 搖晃幅度: ",~Magnitude," 速率: ",~Velocity," 搖晃方式: ",~方式
CameraSetSourceNoiseExHint="使用'鏡頭 - 重置鏡頭'或設置搖晃幅度和速率為0來停止搖晃."

CameraSetSourceNoise="搖晃鏡頭源(所有玩家)(不使用搖晃方式) [R]"
CameraSetSourceNoise="搖晃玩家的鏡頭源, 搖晃幅度: ",~Magnitude," 速率: ",~Velocity
CameraSetSourceNoiseExHint="使用'鏡頭 - 重置鏡頭'或設置搖晃幅度和速率為0來停止搖晃."

CameraSetSourceNoiseForPlayer="搖晃鏡頭源(指定玩家)"
CameraSetSourceNoiseForPlayer="搖晃 ",~Player," 的鏡頭源, 搖晃幅度: ",~Magnitude," 速率: ",~Velocity
CameraSetSourceNoiseForPlayerHint="使用'鏡頭 - 重置鏡頭'或'鏡頭 - 停止搖晃鏡頭'來停止搖晃."

CameraSetTargetNoiseEx="搖晃鏡頭目標(所有玩家) [R]"
CameraSetTargetNoiseEx="搖晃玩家的鏡頭源, 搖晃幅度: ",~Magnitude," 速率: ",~Velocity," 搖晃方式: ",~方式
CameraSetTargetNoiseExHint="使用'鏡頭 - 重置鏡頭'或設置搖晃幅度和速率為0來停止搖晃."

CameraSetTargetNoise="搖晃鏡頭目標(所有玩家)(不使用搖晃方式) [R]"
CameraSetTargetNoise="搖晃玩家的鏡頭源, 搖晃幅度: ",~Magnitude," 速率: ",~Velocity
CameraSetTargetNoiseHint="使用'鏡頭 - 重置鏡頭'或設置搖晃幅度和速率為0來停止搖晃."

CameraSetTargetNoiseForPlayer="搖晃鏡頭目標(指定玩家)"
CameraSetTargetNoiseForPlayer="搖晃 ",~Player," 的鏡頭目標, 搖晃幅度: ",~Magnitude," 速率: ",~Velocity
CameraSetTargetNoiseForPlayerHint="使用'鏡頭 - 重置鏡頭'或'鏡頭 - 停止搖晃鏡頭'來停止搖晃."

CameraSetEQNoiseForPlayer="震動鏡頭(指定玩家)"
CameraSetEQNoiseForPlayer="震動 ",~Player," 的鏡頭, 震動幅度: ",~Magnitude
CameraSetEQNoiseForPlayerHint="使用'鏡頭 - 重置鏡頭'或'鏡頭 - 停止震動鏡頭'來停止震動."

CameraClearNoiseForPlayer="停止搖晃/震動鏡頭(指定玩家)"
CameraClearNoiseForPlayer="停止 ",~Player," 鏡頭的搖晃和震動"
CameraClearNoiseForPlayerHint="可以用本地玩家實現對所有玩家停止搖晃/震動鏡頭."

SetCameraBounds="設置可用鏡頭區域(所有玩家) [R]"
SetCameraBounds="設置玩家可用鏡頭區域: 左下角(",~X,",",~Y,"), 左上角(",~X,",",~Y,"), 右上角(",~X,",",~Y,"), 右下角(",~X,",",~Y,")"
SetCameraBoundsHint="該動作同樣會影響小地圖的顯示. 但小地圖的圖片是無法改變的. 實際可用區域要大於可用鏡頭區域."

AdjustCameraBoundsForPlayerBJ="擴張/收縮 可用鏡頭區域(指定玩家)"
AdjustCameraBoundsForPlayerBJ=~Extend/Shrink," ",~Player," 的可用鏡頭區域, 西: ",~West," ,東 ",~East," ,北: ",~North," ,南: ",~South
AdjustCameraBoundsForPlayerBJHint="該動作同樣會影響小地圖的顯示. 但小地圖的圖片是無法改變的. 實際可用區域要大於可用鏡頭區域."

SetCameraBoundsToRectForPlayerBJ="設置可用鏡頭區域(指定玩家)"
SetCameraBoundsToRectForPlayerBJ="設置 ",~Player," 的可用鏡頭區域為 ",~地區
SetCameraBoundsToRectForPlayerBJHint="該動作同樣會影響小地圖的顯示. 但小地圖的圖片是無法改變的. 實際可用區域要大於可用鏡頭區域."

SetCameraQuickPosition="設置空格鍵轉向點(所有玩家) [R]"
SetCameraQuickPosition="設置玩家的空格鍵轉向點為(",~X,",",~Y,")"
SetCameraQuickPositionHint="按下空格鍵時鏡頭轉向的位置."

SetCameraQuickPositionLocForPlayer="設置空格鍵轉向點(指定玩家)"
SetCameraQuickPositionLocForPlayer="設置 ",~Player," 的空格鍵轉向點為 ",~指定點
SetCameraQuickPositionLocForPlayerHint="按下空格鍵時鏡頭轉向的位置."
// Visibility actions
FogEnable="啟用/禁用 戰爭迷霧 [R]"
FogEnable=~啟用/禁用," 戰爭迷霧"
FogEnableHint=

FogEnableOn="啟用戰爭迷霧"
FogEnableOn="啟用戰爭迷霧"
FogEnableOnHint=

FogEnableOff="禁用戰爭迷霧"
FogEnableOff="禁用戰爭迷霧"
FogEnableOffHint=

FogMaskEnable="啟用/禁用黑色陰影 [R]"
FogMaskEnable=~啟用/禁用," 黑色陰影"
FogMaskEnableHint=

FogMaskEnableOn="啟用黑色陰影"
FogMaskEnableOn="啟用黑色陰影"
FogMaskEnableOnHint=

FogMaskEnableOff="禁用黑色陰影"
FogMaskEnableOff="禁用黑色陰影"
FogMaskEnableOffHint=

CreateFogModifierRectBJ="創建可見度修正器(矩形區域)"
CreateFogModifierRectBJ="創建一個狀態為 ",~Enabled/Disabled," 的可見度修正器給 ",~Player," ,設置 ",~Visibility State," 在 ",~Region
CreateFogModifierRectBJHint="會創建可見度修正器."

CreateFogModifierRadiusLocBJ="創建可見度修正器(圓範圍)"
CreateFogModifierRadiusLocBJ="創建一個狀態為 ",~Enabled/Disabled," 的可見度修正器給 ",~Player," ,設置 ",~Visibility State," 在圓心為 ",~指定點," 半徑為 ",~Radius," 的圓範圍"
CreateFogModifierRadiusLocBJHint="會創建可見度修正器."

FogModifierStart="啟用可見度修正器"
FogModifierStart="啟用 ",~Visibility Modifier
FogModifierStartHint=

FogModifierStop="禁用可見度修正器"
FogModifierStop="禁用 ",~Visibility Modifier
FogModifierStopHint=

DestroyFogModifier="刪除可見度修正器"
DestroyFogModifier="刪除 ",~Visibility Modifier
DestroyFogModifierHint=

SetFogStateRect="設置地圖迷霧(矩形區域) [R]"
SetFogStateRect="為 ",~玩家," 設置 ",~FogStateVisible," 在 ",~矩形區域," (對盟友 ",~共享," 視野)"
SetFogStateRectHint=

SetFogStateRadius="設置地圖迷霧(圓範圍) [R]"
SetFogStateRadius="為 ",~玩家," 設置 ",~FogStateVisible," 在圓心為(",~X,",",~Y,") 半徑為 ",~數值," 的範圍, (對盟友 ",~共享," 視野)"
SetFogStateRadiusHint=


//YDWE API

//YD Ability
YDWECreateEwsp="創建環繞單位<wataloo添加>"
YDWECreateEwsp="圍繞 ",~單位," 創建 ",~單位類型," 共 ",~n,"個 ，旋轉半徑 ",~R,"，持續 ",~T," 秒，刷新週期 ",~I,"，旋轉角速度每個週期 ",~S,"。"
YDWECreateEwspHint="刷新週期越小動畫越連續，但也越耗資源"

YDWEJumpTimer="跳躍函數"
YDWEJumpTimer="命令 ",~單位," 向 ",~方向," 方向跳躍，距離為 ",~距離," ，持續 ",~時間," 秒，刷新週期 ",~I,"，最大高度 ",~高度,"。"
YDWEJumpTimerHint="當最大高度設置為0，則為普通的移動。"

YDWEMeatHook="肉鉤<鉤肥大戰>"
YDWEMeatHook="讓","單","位 ",~單位," 向 ",~點," 放","出","一","條","鉤","子，","鉤","頭","為 ",~鉤頭,"，鏈條為 ",~鏈條,"，最","遠","距","離可","達 ",~實數,"，鏈條","間距","為 ",~實數,"，對敵對","單位","造成","傷害 ",~實數,"，刷新","週期為 ",~實數,"。"
YDWEMeatHookHint="            鉤肥大戰裡的鉤子，由Ors和Everguo優化代碼。請務必從演示地圖裡複製鉤子和鉤條單位，算我求大家了-.-"

YDWETimerPatternJumpAttack="跳劈函數<Warft_TigerCN製作>"
YDWETimerPatternJumpAttack="命令 ",~單位," 向 ",~方向," 方向跳劈，距離為 ",~距離," ，","持","續","時","間 ",~時間,"，刷新週期 ",~I,"，最大高度 ",~高度,"，","對","途","經","敵","人","造","成","傷","害","值 ",~傷害量,"，在敵人的 ",~部位," 附加特效 ",~特效,"。"
YDWETimerPatternJumpAttackHint="當傷害值設置為0，則敵人身上不出現特效。代碼由Fetrix_sai修改。"

YDWETimerPatternMoonPriestessArrow="月神箭<Warft_TigerCN製作>"
YDWETimerPatternMoonPriestessArrow="命令 ",~單位," 向 ",~方向," 方向飛行，距離為 ",~距離," ，","持續 ",~時間," 秒，刷新週期 ",~I,"，生成帶有 ",~整數," 級 ",~技能," 的 ",~輔助單位,"，對目標施放 ",~技能," ，在目標的 ",~部位," 附加 ",~特效,"。"
YDWETimerPatternMoonPriestessArrowHint="                                                           由輔助單位給目標添加眩暈等狀態。代碼由Fetrix_sai修改。"

YDWETimerPatternRushSlide="衝鋒<Warft_TigerCN製作>"
YDWETimerPatternRushSlide="命令 ",~單位," 向 ",~方向," 方向衝鋒，射程為 ",~距離," ，持續 ",~時間," 秒，刷新週期 ",~I,"，對途經敵人傷害值 ",~實數,"，摧毀樹木 ",~布爾,"，不計算碰撞 ",~布爾,"，無視地形 ",~布爾," ，在目標的 ",~部位," 附加 ",~特效,"(地面)，附加 ",~特效,"(水中)"
YDWETimerPatternRushSlideHint="                                                                                                 代碼由Fetrix_sai修改"

YDWEAroundSystem="萬能環繞函數<Fetrix_sai製作>"
YDWEAroundSystem="命令 ",~單位," 圍繞 ",~單位," 環繞，角速度為 ",~實數,"，離心速度為 ",~實數,"，提升速度為 ",~實數,"，持續 ",~實數," 秒""，""刷""新""周""期""為 ",~實數," 秒"
YDWEAroundSystemHint="角速度為正，順時針旋轉，反之逆時針；離心速度為正，遠離目標，反之靠近；提升速度為正，則高度上升，反之下降。"

//YD System  YDWENewItemsFormula="將( ",~材料1,",",~整數,")、(",~材料2,",",~整數,")、(",~材料3,",",~整數,")、(",~材料4,",",~整數,")、(",~材料5,",",~整數,")、(",~材料6,",",~整數," )合成 ",~物品." "
YDWENewItemsFormula="物品合成系統<Fetrix_sai製作>"
YDWENewItemsFormula="將材料1( ",~類型,",",~整數,")、材料2( ",~類型,",",~整數,")、材料3( ",~類型,",",~整數,")""、""材""料""4""( ",~類型,",",~整數,")、材料5( ",~類型,",",~整數,")、材料6( ",~類型,",",~整數,")合成 ",~物品," "
YDWENewItemsFormulaHint="填寫物品合成所需的材料及其數量，最多可以填6種；當所需材料數量為0時，對應材料將被忽略。"

YDWE_TP_PauseTimerPeriodic="新中心計時器-終止運行<Fetrix_sai製作>"
YDWE_TP_PauseTimerPeriodic="終止運行索引為 ",~計時器運行索引," 的計時器運行 "
YDWE_TP_PauseTimerPeriodicHint="當中心計時器運行某個觸發器時，會生成一個運行索引；可以通過該運行索引來終止本次計時器運行。"

YDWE_TP_SetTimeInterval="新中心計時器-修改運行間隔<Fetrix_sai製作>"
YDWE_TP_SetTimeInterval="修改運行索引為 ",~計時器運行索引," 的計時器運行間隔為 ",~實數
YDWE_TP_SetTimeIntervalHint="當中心計時器運行某個觸發器時，會生成一個運行索引；可以中途修改計時器某次運行的時間間隔。"

YDWEAttackWaveTimer="刷兵系統"
YDWEAttackWaveTimer="為玩家 ",~玩家," 創建 ",~n," 個 ",~單位類型," 在點 ",~初始點," 面向 ",~角度,"，命令他們攻擊到點 ",~目標點,"，刷新週期 ",~週期,"。"
YDWEAttackWaveTimerHint="3C的刷兵系統，也可用於防守RPG，按週期生成每波單位向指定點進攻。"

YDWERemoveAttackWaveByUnitID="取消刷兵(輸入參數)"
YDWERemoveAttackWaveByUnitID="停止創建 ",~單位,"，地點為 ",~初始點,"，週期是 ",~週期
YDWERemoveAttackWaveByUnitIDHint="取消刷兵，注意這裡填寫的參數要與前面刷兵系統一致，不然無法停止刷兵。"

YDWERemoveAttackWaveByTimer="取消刷兵(刪除計時器)"
YDWERemoveAttackWaveByTimer="刪除刷兵計時器 ",~計時器
YDWERemoveAttackWaveByTimerHint="取消刷兵，並能自動清空緩存。"

YDWEDoubleItemSlotByAbility="多重物品欄(技能觸發)"
YDWEDoubleItemSlotByAbility="當 ",~單位," 使用技能 ",~背包技能," 時切換背包，輔助單位為 ",~背包單位,"，背包個數為 ",~整數
YDWEDoubleItemSlotByAbilityHint="切換背包時會觸發單位獲得和掉落物品事件；背包技能和背包單位的設置請參考example文件夾中的輔助地圖。"

YDWEDoubleItemSlotByItem="多重物品欄(物品觸發)"
YDWEDoubleItemSlotByItem="當 ",~單位," 使用物品 ",~背包物品," 時切換背包，輔助單位為 ",~背包單位,"，背包個數為 ",~整數
YDWEDoubleItemSlotByItemHint="切換背包時會觸發單位獲得和掉落物品事件；背包物品和背包單位的設置請參考example文件夾中的輔助地圖。"

YDWEGeneralBounsSystemUnitSetBonus="萬能屬性系統-設置屬性<茄子製作>"
YDWEGeneralBounsSystemUnitSetBonus="設置 ",~單位," 的附加 ",~屬性," ",~計算," ",~數值
YDWEGeneralBounsSystemUnitSetBonusHint=

//YD AI
YDWESetGuard="傭兵系統<Red_Wolf製作>"
YDWESetGuard="命令 ",~單位," 跟隨 ",~單位,"，刷新週期 ",~timeout,"，巡邏半徑 ",~guardRanger,"，返回半徑 ",~returnRanger,"，傳送半徑 ",~outRanger,"，巡邏概率 ",~percent,"%"
YDWESetGuardHint="讓一個傭兵跟隨主人，可以在主人身邊巡邏，當遠離主人後自動返回或傳送到主人身邊。"

YDWERemoveGuard="取消傭兵<Red_Wolf製作>"
YDWERemoveGuard="取消 ",~單位," 的跟隨"
YDWERemoveGuardHint="讓一個傭兵不再跟隨主人。備註：如果傭兵是召喚生物那麼不必取消，因為當傭兵或主人死亡後，系統會自動取消跟隨。"

YDWEAIRecordAbility="AI-技能綁定英雄<GreedWind製作>"
YDWEAIRecordAbility="給單位 ",~英雄," 綁定技能 ",~技能1," ",~技能2," ",~技能3," ",~技能4," ",~技能5
YDWEAIRecordAbilityHint="為單位綁定5個技能，如果英雄只有4個技能，那麼第5個技能請設置為空。"

YDWEAIRecordLearn_sequence="AI-技能學習順序綁定英雄<GreedWind製作>"
YDWEAIRecordLearn_sequence="給單位 ",~英雄," 設置技能學習順序為( ",~技能1," ",~技能2," ",~技能3," ",~技能4," ",~技能5," )"
YDWEAIRecordLearn_sequenceHint="單位會按輸入的等級去學習對應的技能，切記技能學習順序要按^等級^等級...^等級^的格式輸入。"

YDWEHeroLearnSkillAI="AI-自動學習對應技能<GreedWind製作>"
YDWEHeroLearnSkillAI="讓英雄 ",~英雄," 自動學習技能，所學技能對應的英雄等級為 ",~整數
YDWEHeroLearnSkillAIHint="英雄會學習與等級對應的技能，這些技能必須在之前綁定給英雄。"

YDWEHeroMaxSkillAI="AI-自動學習全部技能<GreedWind製作>"
YDWEHeroMaxSkillAI="讓英雄 ",~英雄," 自動學習所有技能。"
YDWEHeroMaxSkillAIHint="英雄會洗去之前學習過的技能，並根據技能表順序學習完所有技能。"

YDWEAddAIOrder="AI-自動施放技能"
YDWEAddAIOrder="讓單位 ",~單位," 在 ",~整數,"時 ",~目標,"施","放","技","能","，","技","能","施","放","方","式","為","(","對","單","位-",~命令,"、","對","點-",~命令,"、","立","即-",~命令,")，","施","放","概","率","為 ",~整數,"%"
YDWEAddAIOrderHint="讓單位有一定概率施放技能，命令要與技能目標一致；代碼由Red_Wolf和Fetrix_sai優化。"

//YD Aganist Fate











































//YD Save Load
YDWE_PreloadSL_SetFile="設置存檔索引(存檔名單)"
YDWE_PreloadSL_SetFile="為",~玩家,"在","『",~目錄名,"』","下","，","將","〖",~存檔名,"〗","的","索","引","設","置","為","→","[",~整數,"]"
YDWE_PreloadSL_SetFileHint="高級功能，當目錄下有多個玩家存檔時，為存檔添加整數索引，建立起存檔文件名字與索引的對應關係。"

YDWE_PreloadSL_Save="保存玩家存檔"
YDWE_PreloadSL_Save="為",~玩家,"在","『",~目錄名,"』","〖",~存檔名,"〗","下","保","存","存","檔","，","該","存","檔","含","有","[",~整數,"]","個","數","據","項"
YDWE_PreloadSL_SaveHint="保存一個玩家存檔在指定路徑下，注意存檔的數據項數目不要填錯。"

YDWE_PreloadSL_Load="讀取玩家存檔"
YDWE_PreloadSL_Load="為",~玩家,"從","『",~目錄名,"』","〖",~存檔名,"〗","上","讀","取","存","檔","，","該","存","檔","含","有","[",~整數,"]","個","數","據","項"
YDWE_PreloadSL_LoadHint="獲取指定目錄下某個玩家存檔，必須填寫正確的文件名和數據項數目。"

YDWE_PreloadSL_Set="添加存檔數據"
YDWE_PreloadSL_Set="為",~玩家,"添","加"," ※",~數據注釋,"，","在","當","前","存","檔","[",~數據項索引,"]","上","，","添","加","┠",~數據,"┨"
YDWE_PreloadSL_SetHint="把數據寫入到玩家存檔，需要填入正確的數據項索引，注釋則可以隨意填寫。"

//YD LocalVariable
YDWELocalVariableInitiliation="開啟局部變量功能"
YDWELocalVariableInitiliation="開啟局部變量功能"
YDWELocalVariableInitiliationHint="必須在局部變量賦值之前啟用；若觸發器內沒有等待動作，可以不啟用；有等待需求時必須選用局部變量專用等待動作。"

YDWELocalVariableEnd="清空局部變量"
YDWELocalVariableEnd="清空局部變量"
YDWELocalVariableEndHint="清空本觸發器內用到的全部局部變量，避免內存泄露；使用本動作之前請確保局部變量已經使用完畢。"

YDWESetLocalVariableInteger="設置 整數 局部變量"
YDWESetLocalVariableInteger="設置 local_",~i," = ",~整數
YDWESetLocalVariableIntegerHint="為整數局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableIntegerArray="設置 整數 局部變量數組"
YDWESetLocalVariableIntegerArray="設置 local_",~i,"[",~index,"]"," = ",~整數
YDWESetLocalVariableIntegerArrayHint="為整數局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableReal="設置 實數 局部變量"
YDWESetLocalVariableReal="設置 local_",~R," = ",~實數
YDWESetLocalVariableRealHint="為實數局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableRealArray="設置 實數 局部變量數組"
YDWESetLocalVariableRealArray="設置 local_",~R,"[",~index,"]"," = ",~實數
YDWESetLocalVariableRealArrayHint="為實數局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableString="設置 字符串 局部變量"
YDWESetLocalVariableString="設置 local_",~str," = ",~字符串
YDWESetLocalVariableStringHint="為字符串局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableStringArray="設置 字符串 局部變量數組"
YDWESetLocalVariableStringArray="設置 local_",~str,"[",~index,"]"," = ",~字符串
YDWESetLocalVariableStringArrayHint="為字符串局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableBoolean="設置 真值 局部變量"
YDWESetLocalVariableBoolean="設置 local_",~bl," = ",~真值
YDWESetLocalVariableBooleanHint="為真值局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableBooleanArray="設置 真值 局部變量數組"
YDWESetLocalVariableBooleanArray="設置 local_",~bl,"[",~index,"]"," = ",~真值
YDWESetLocalVariableBooleanArrayHint="為真值局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableUnit="設置 單位 局部變量"
YDWESetLocalVariableUnit="設置 local_",~u," = ",~單位
YDWESetLocalVariableUnitHint="為單位局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableUnitArray="設置 單位 局部變量數組"
YDWESetLocalVariableUnitArray="設置 local_",~u,"[",~index,"]"," = ",~單位
YDWESetLocalVariableUnitArrayHint="為單位局部變量賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableUnitID="設置 單位類型 局部變量"
YDWESetLocalVariableUnitID="設置 local_",~uid," = ",~單位類型
YDWESetLocalVariableUnitIDHint="為單位類型局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableUnitIDArray="設置 單位類型 局部變量數組"
YDWESetLocalVariableUnitIDArray="設置 local_",~uid,"[",~index,"]"," = ",~單位類型
YDWESetLocalVariableUnitIDArrayHint="為單位類型局部變量賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableAbilityID="設置 技能類型 局部變量"
YDWESetLocalVariableAbilityID="設置 local_",~ab," = ",~技能
YDWESetLocalVariableAbilityIDHint="為單位類型局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableAbilityIDArray="設置 技能類型 局部變量數組"
YDWESetLocalVariableAbilityIDArray="設置 local_",~ab,"[",~index,"]"," = ",~技能
YDWESetLocalVariableAbilityIDArrayHint="為單位類型局部變量賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableItem="設置 物品 局部變量"
YDWESetLocalVariableItem="設置 local_",~it," = ",~物品
YDWESetLocalVariableItemHint="為物品局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableItemArray="設置 物品 局部變量數組"
YDWESetLocalVariableItemArray="設置 local_",~it,"[",~index,"]"," = ",~物品
YDWESetLocalVariableItemArrayHint="為物品局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableItemID="設置 物品類型 局部變量"
YDWESetLocalVariableItemID="設置 local_",~itid," = ",~物品類型
YDWESetLocalVariableItemIDHint="為物品類型局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableItemIDArray="設置 物品類型 局部變量數組"
YDWESetLocalVariableItemIDArray="設置 local_",~itid,"[",~index,"]"," = ",~物品類型
YDWESetLocalVariableItemIDArrayHint="為物品類型局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableLocation="設置 點 局部變量"
YDWESetLocalVariableLocation="設置 local_",~point," = ",~點
YDWESetLocalVariableLocationHint="為點局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableLocationArray="設置 點 局部變量數組"
YDWESetLocalVariableLocationArray="設置 local_",~point,"[",~index,"]"," = ",~點
YDWESetLocalVariableLocationArrayHint="為點局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableGroup="設置 單位組 局部變量"
YDWESetLocalVariableGroup="設置 local_",~g," = ",~單位組
YDWESetLocalVariableGroupHint="為單位組局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableGroupArray="設置 單位組 局部變量數組"
YDWESetLocalVariableGroupArray="設置 local_",~g,"[",~index,"]"," = ",~單位組
YDWESetLocalVariableGroupArrayHint="為單位組局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableEffect="設置 特效 局部變量"
YDWESetLocalVariableEffect="設置 local_",~e," = ",~特效
YDWESetLocalVariableEffectHint="為特效局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableEffectArray="設置 特效 局部變量數組"
YDWESetLocalVariableEffectArray="設置 local_",~e,"[",~index,"]"," = ",~特效
YDWESetLocalVariableEffectArrayHint="為特效局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

YDWESetLocalVariableRect="設置 地區 局部變量"
YDWESetLocalVariableRect="設置 local_",~rt," = ",~地區
YDWESetLocalVariableRectHint="為地區局部變量賦值，參數處填入該變量的名字;該變量在本條觸發器內有效。"

YDWESetLocalVariableRectArray="設置 地區 局部變量數組"
YDWESetLocalVariableRectArray="設置 local_",~rt,"[",~index,"]"," = ",~地區
YDWESetLocalVariableRectArrayHint="為地區局部變量數組賦值，參數處填入該變量的名字和數組索引;該變量在本條觸發器內有效。"

SetRandomSeed="設置隨機種子"
SetRandomSeed="設置隨機種子數為：",~整數
SetRandomSeedHint="設置遊戲的隨機種子，隨機種子會影響隨機整數，攻擊骰子之類的隨機數。"

//YD Function
YDWESetAttackDamageWeaponType="設置默認攻擊|傷害|武器類型"
YDWESetAttackDamageWeaponType="設置默認攻擊類型為 ",~攻擊類型,"，傷害類型為 ",~傷害類型,"，武器類型為 ",~武器類型
YDWESetAttackDamageWeaponTypeHint="設置一些技能（如鉤子、月神箭）需要用到的攻擊|傷害|武器類型，系統會按設置的攻擊|傷害|武器類型對目標造成傷害。"

YDWESetEventDamage="設置傷害值 [JAPI]"
YDWESetEventDamage="設置單位所受傷害為 ",~傷害值
YDWESetEventDamageHint="修改傷害事件裡的傷害值，不能在等待之後使用。"

YDWEFlyEnable="設置單位可以飛行"
YDWEFlyEnable="讓單位 ",~地面單位," 變得可以飛行。"
YDWEFlyEnableHint="讓一個地面單位變得可以飛行，可以設置其飛行高度。"

YDWESetMapLimitCoordinate="設置地圖邊界坐標"
YDWESetMapLimitCoordinate="設置地圖的邊界坐標為 ( X坐標最小值 ",~實數,"，X坐標最大值 ",~實數,"，Y坐標最小值 ",~實數,"，Y坐標最大值 ",~實數," )"
YDWESetMapLimitCoordinateHint="邊界坐標的設置會影響鉤子、跳躍等技能在地圖邊界處的表現形式；默認的邊界坐標是鏡頭範圍的邊界,新手慎用本設置!"

YDWELifeChange="設置單位生命上限"
YDWELifeChange="設置 ",~單位," 的生命上限 ",~變化," ",~整數," ，關聯技能為 ",~輔助技能
YDWELifeChangeHint="如果修改後單位生命上限小於0，單位會立即死亡；關聯技能的設置請參考example文件夾下的輔助地圖。"

YDWEManaChange="設置單位魔法上限"
YDWEManaChange="設置 ",~單位," 的魔法上限 ",~變化," ",~整數," ，關聯技能為 ",~輔助技能
YDWEManaChangeHint="如果修改後單位魔法上限小於0，單位的魔法欄將消失；關聯技能的設置請參考example文件夾下的輔助地圖。"

//YD Game Data
YDWERHSetGameWinner="設置聯盟勝利 [JAPI]"
YDWERHSetGameWinner="設置隊伍(",~整數,")獲勝"
YDWERHSetGameWinnerHint="隊伍1的ID為0，隊伍2的ID為1。"

YDWERecordSetTitle="服務器存檔-設置平台積分項名稱 [JAPI]"
YDWERecordSetTitle="設置平台界面上第",~整數,"個積分項名稱為〖",~戰鬥力,"〗"
YDWERecordSetTitleHint="11平台RPG積分是用玩家服務器存檔來模擬，這裡可以設置需要顯示在平台界面上的積分項名字，最多可顯示8個積分項，每個積分項名字不超過3個漢字。"

YDWERecordSetI="服務器存檔-設置玩家存檔數據 [JAPI]"
YDWERecordSetI="設置",~玩家,"的服務器存檔數據〖",~戰鬥力,"〗為",~整數
YDWERecordSetIHint="設置玩家服務器存檔裡某個目錄下的數據，如設置玩家一的戰鬥力為5。"

YDWERecordSave="服務器存檔-保存玩家存檔數據 [JAPI]"
YDWERecordSave="保存",~玩家,"當前所有存檔數據"
YDWERecordSaveHint="服務器存檔數據必須保存後才能生效。"

YDWERecordClear="服務器存檔-清空玩家存檔數據 [JAPI]"
YDWERecordClear="清空",~玩家,"當前所有存檔數據"
YDWERecordClearHint="由於每個玩家最多隻能存儲100條左右的數據，假如超過上限，建議使用此功能清空全部數據，然後重新保存有用的數據。"

//YD Load
YDWEFlushMissionByInteger="清空 目錄 (整數路徑)"
YDWEFlushMissionByInteger="清空目錄-> ",~整數
YDWEFlushMissionByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從GameCache或HashTable上清空目錄。"

YDWEFlushMissionByString="清空 目錄 (字符串路徑)"
YDWEFlushMissionByString="清空目錄-> ",~字符串
YDWEFlushMissionByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從GameCache或HashTable上清空目錄。"

YDWESaveIntegerByInteger="存儲 整數 (整數路徑)"
YDWESaveIntegerByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲整數-> ",~整數
YDWESaveIntegerByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲整數數據。"

YDWESaveRealByInteger="存儲 實數 (整數路徑)"
YDWESaveRealByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲實數-> ",~實數
YDWESaveRealByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲實數數據。"

YDWESaveStringByInteger="存儲 字符串 (整數路徑)"
YDWESaveStringByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲字符串-> ",~字符串
YDWESaveStringByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲字符串數據。"

YDWESaveBooleanByInteger="存儲 真值 (整數路徑)"
YDWESaveBooleanByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲真值-> ",~真值
YDWESaveBooleanByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲真值數據。"

YDWESaveUnitByInteger="存儲 單位 (整數路徑)"
YDWESaveUnitByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲單位-> ",~單位
YDWESaveUnitByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲單位數據。"

YDWESaveUnitIDByInteger="存儲 單位類型 (整數路徑)"
YDWESaveUnitIDByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲單位類型 -> ",~單位類型
YDWESaveUnitIDByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲單位類型數據。"

YDWESaveAbilityIDByInteger="存儲 技能 (整數路徑)"
YDWESaveAbilityIDByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲技能 -> ",~技能
YDWESaveAbilityIDByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲技能數據。"

YDWESaveItemByInteger="存儲 物品 (整數路徑)"
YDWESaveItemByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲物品-> ",~物品
YDWESaveItemByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲物品數據。"

YDWESaveItemIDByInteger="存儲 物品類型 (整數路徑)"
YDWESaveItemIDByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲物品類型-> ",~物品類型
YDWESaveItemIDByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲物品類型數據。"

YDWESavePlayerByInteger="存儲 玩家 (整數路徑)"
YDWESavePlayerByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲玩家-> ",~玩家
YDWESavePlayerByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲玩家數據。"

YDWESaveTimerByInteger="存儲 計時器 (整數路徑)"
YDWESaveTimerByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲計時器-> ",~計時器
YDWESaveTimerByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲計時器數據。"

YDWESaveTriggerByInteger="存儲 觸發器 (整數路徑)"
YDWESaveTriggerByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲觸發器-> ",~觸發器
YDWESaveTriggerByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲觸發器數據。"

YDWESaveLocationByInteger="存儲 點 (整數路徑)"
YDWESaveLocationByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲點-> ",~點
YDWESaveLocationByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲點數據。"

YDWESaveGroupByInteger="存儲 單位組 (整數路徑)"
YDWESaveGroupByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲單位組-> ",~單位組
YDWESaveGroupByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲單位組數據。"

YDWESaveMultiboardByInteger="存儲 多面板 (整數路徑)"
YDWESaveMultiboardByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲多面板-> ",~多面板
YDWESaveMultiboardByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲多面板數據。"

YDWESaveMultiboardItemByInteger="存儲 多面板項目 (整數路徑)"
YDWESaveMultiboardItemByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲多面板項目-> ",~多面板項目
YDWESaveMultiboardItemByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲多面板項目數據。"

YDWESaveTextTagByInteger="存儲 漂浮文字 (整數路徑)"
YDWESaveTextTagByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲漂浮文字-> ",~漂浮文字
YDWESaveTextTagByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲漂浮文字數據。"

YDWESaveLightningByInteger="存儲 閃電 (整數路徑)"
YDWESaveLightningByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲閃電-> ",~閃電
YDWESaveLightningByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲閃電數據。"

YDWESaveRegionByInteger="存儲 區域 (整數路徑)"
YDWESaveRegionByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲區域-> ",~區域
YDWESaveRegionByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲區域數據。"

YDWESaveRectByInteger="存儲 地區 (整數路徑)"
YDWESaveRectByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲地區-> ",~地區
YDWESaveRectByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲地區數據。"

YDWESaveLeaderboardByInteger="存儲 排行榜 (整數路徑)"
YDWESaveLeaderboardByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲排行榜-> ",~排行榜
YDWESaveLeaderboardByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲排行榜數據。"

YDWESaveEffectByInteger="存儲 特效 (整數路徑)"
YDWESaveEffectByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲特效-> ",~特效
YDWESaveEffectByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲特效數據。"

YDWESaveDestructableByInteger="存儲 可破壞物 (整數路徑)"
YDWESaveDestructableByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲可破壞物-> ",~可破壞物
YDWESaveDestructableByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲可破壞物數據。"

YDWESaveTriggerConditionByInteger="存儲 觸發器條件 (整數路徑)"
YDWESaveTriggerConditionByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲觸發器條件-> ",~觸發器條件
YDWESaveTriggerConditionByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲觸發器條件數據。"

YDWESaveTriggerActionByInteger="存儲 觸發器動作 (整數路徑)"
YDWESaveTriggerActionByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲觸發器動作-> ",~觸發器動作
YDWESaveTriggerActionByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲觸發器動作數據。"

YDWESaveTriggerEventByInteger="存儲 事件 (整數路徑)"
YDWESaveTriggerEventByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲事件-> ",~事件
YDWESaveTriggerEventByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲事件數據。"

YDWESaveForceByInteger="存儲 勢力 (整數路徑)"
YDWESaveForceByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲勢力-> ",~勢力
YDWESaveForceByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲勢力數據。"

YDWESaveBoolexprByInteger="存儲 布爾表達式 (整數路徑)"
YDWESaveBoolexprByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲布爾表達式-> ",~布爾表達式
YDWESaveBoolexprByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲布爾表達式數據。"

YDWESaveSoundByInteger="存儲 聲音 (整數路徑)"
YDWESaveSoundByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲聲音-> ",~聲音
YDWESaveSoundByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲聲音數據。"

YDWESaveTimerDialogByInteger="存儲 計時器窗口 (整數路徑)"
YDWESaveTimerDialogByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲計時器窗口-> ",~計時器窗口
YDWESaveTimerDialogByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲計時器窗口數據。"

YDWESaveTrackableByInteger="存儲 可追蹤物 (整數路徑)"
YDWESaveTrackableByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲可追蹤物-> ",~可追蹤物
YDWESaveTrackableByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲可追蹤物數據。"

YDWESaveDialogByInteger="存儲 對話框 (整數路徑)"
YDWESaveDialogByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲對話框-> ",~對話框
YDWESaveDialogByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲對話框數據。"

YDWESaveButtonByInteger="存儲 對話框按鈕 (整數路徑)"
YDWESaveButtonByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲對話框按鈕-> ",~對話框按鈕
YDWESaveButtonByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲對話框按鈕數據。"

YDWESaveQuestByInteger="存儲 任務 (整數路徑)"
YDWESaveQuestByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲任務-> ",~任務
YDWESaveQuestByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲任務數據。"

YDWESaveQuestItemByInteger="存儲 任務目標項 (整數路徑)"
YDWESaveQuestItemByInteger="存儲目錄-> ",~整數,"，標籤-> ",~整數,"，存儲任務目標項-> ",~任務目標項
YDWESaveQuestItemByIntegerHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲任務目標項數據。"

YDWESaveIntegerByString="存儲 整數 (字符串路徑)"
YDWESaveIntegerByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲整數-> ",~整數
YDWESaveIntegerByStringHint="通過輸入的路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲整數數據。"

YDWESaveRealByString="存儲 實數 (字符串路徑)"
YDWESaveRealByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲實數-> ",~實數
YDWESaveRealByStringHint="通過輸入的路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲實數數據。"

YDWESaveStringByString="存儲 字符串 (字符串路徑)"
YDWESaveStringByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲字符串-> ",~字符串
YDWESaveStringByStringHint="通過輸入的路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲字符串數據。"

YDWESaveBooleanByString="存儲 真值 (字符串路徑)"
YDWESaveBooleanByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲真值-> ",~真值
YDWESaveBooleanByStringHint="通過輸入的路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲真值數據。"

YDWESaveUnitByString="存儲 單位 (字符串路徑)"
YDWESaveUnitByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲單位-> ",~單位
YDWESaveUnitByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲單位數據。

YDWESaveUnitIDByString="存儲 單位類型 (字符串路徑)"
YDWESaveUnitIDByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲單位類型-> ",~單位類型
YDWESaveUnitIDByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲單位類型數據。

YDWESaveAbilityIDByString="存儲 技能 (字符串路徑)"
YDWESaveAbilityIDByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲技能-> ",~技能
YDWESaveAbilityIDByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲技能數據。

YDWESaveItemByString="存儲 物品 (字符串路徑)"
YDWESaveItemByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲物品-> ",~物品
YDWESaveItemByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲物品數據。

YDWESaveItemIDByString="存儲 物品類型 (字符串路徑)"
YDWESaveItemIDByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲物品類型-> ",~物品類型
YDWESaveItemIDByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲物品類型數據。

YDWESavePlayerByString="存儲 玩家 (字符串路徑)"
YDWESavePlayerByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲玩家-> ",~玩家
YDWESavePlayerByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲玩家數據。

YDWESaveTimerByString="存儲 計時器 (字符串路徑)"
YDWESaveTimerByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲計時器-> ",~計時器
YDWESaveTimerByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲計時器數據。

YDWESaveTriggerByString="存儲 觸發器 (字符串路徑)"
YDWESaveTriggerByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲觸發器-> ",~觸發器
YDWESaveTriggerByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲觸發器數據。

YDWESaveLocationByString="存儲 點 (字符串路徑)"
YDWESaveLocationByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲點-> ",~點
YDWESaveLocationByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲點數據。

YDWESaveGroupByString="存儲 單位組 (字符串路徑)"
YDWESaveGroupByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲單位組-> ",~單位組
YDWESaveGroupByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲單位組數據。

YDWESaveMultiboardByString="存儲 多面板 (字符串路徑)"
YDWESaveMultiboardByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲多面板-> ",~多面板
YDWESaveMultiboardByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲多面板數據。

YDWESaveMultiboardItemByString="存儲 多面板項目 (字符串路徑)"
YDWESaveMultiboardItemByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲多面板項目-> ",~多面板項目
YDWESaveMultiboardItemByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲多面板項目數據。

YDWESaveTextTagByString="存儲 漂浮文字 (字符串路徑)"
YDWESaveTextTagByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲漂浮文字-> ",~漂浮文字
YDWESaveTextTagByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲漂浮文字數據。

YDWESaveLightningByString="存儲 閃電 (字符串路徑)"
YDWESaveLightningByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲閃電-> ",~閃電
YDWESaveLightningByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲閃電數據。

YDWESaveRegionByString="存儲 區域 (字符串路徑)"
YDWESaveRegionByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲區域-> ",~區域
YDWESaveRegionByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲區域數據。

YDWESaveRectByString="存儲 地區 (字符串路徑)"
YDWESaveRectByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲地區-> ",~地區
YDWESaveRectByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲地區數據。

YDWESaveLeaderboardByString="存儲 排行榜 (字符串路徑)"
YDWESaveLeaderboardByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲排行榜-> ",~排行榜
YDWESaveLeaderboardByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲排行榜數據。

YDWESaveEffectByString="存儲 特效 (字符串路徑)"
YDWESaveEffectByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲特效-> ",~特效
YDWESaveEffectByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲特效數據。

YDWESaveDestructableByString="存儲 可破壞物 (字符串路徑)"
YDWESaveDestructableByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲可破壞物-> ",~可破壞物
YDWESaveDestructableByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲可破壞物數據。

YDWESaveTriggerConditionByString="存儲 觸發器條件 (字符串路徑)"
YDWESaveTriggerConditionByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲觸發器條件-> ",~觸發器條件
YDWESaveTriggerConditionByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲觸發器條件數據。

YDWESaveTriggerActionByString="存儲 觸發器動作 (字符串路徑)"
YDWESaveTriggerActionByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲觸發器動作-> ",~觸發器動作
YDWESaveTriggerActionByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲觸發器動作數據。

YDWESaveTriggerEventByString="存儲 事件 (字符串路徑)"
YDWESaveTriggerEventByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲事件-> ",~事件
YDWESaveTriggerEventByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲事件數據。

YDWESaveForceByString="存儲 勢力 (字符串路徑)"
YDWESaveForceByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲勢力-> ",~勢力
YDWESaveForceByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲勢力數據。

YDWESaveBoolexprByString="存儲 布爾表達式 (字符串路徑)"
YDWESaveBoolexprByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲布爾表達式-> ",~布爾表達式
YDWESaveBoolexprByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲布爾表達式數據。

YDWESaveSoundByString="存儲 聲音 (字符串路徑)"
YDWESaveSoundByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲聲音-> ",~聲音
YDWESaveSoundByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲聲音數據。

YDWESaveTimerDialogByString="存儲 計時器窗口 (字符串路徑)"
YDWESaveTimerDialogByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲計時器窗口-> ",~計時器窗口
YDWESaveTimerDialogByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲計時器窗口數據。

YDWESaveTrackableByString="存儲 可追蹤物 (字符串路徑)"
YDWESaveTrackableByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲可追蹤物-> ",~可追蹤物
YDWESaveTrackableByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲可追蹤物數據。

YDWESaveDialogByString="存儲 對話框 (字符串路徑)"
YDWESaveDialogByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲對話框-> ",~對話框
YDWESaveDialogByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲對話框數據。

YDWESaveButtonByString="存儲 對話框按鈕 (字符串路徑)"
YDWESaveButtonByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲對話框按鈕-> ",~對話框按鈕
YDWESaveButtonByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲對話框按鈕數據。

YDWESaveQuestByString="存儲 任務 (字符串路徑)"
YDWESaveQuestByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲任務-> ",~任務
YDWESaveQuestByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲任務數據。"

YDWESaveQuestItemByString="存儲 任務目標項 (字符串路徑)"
YDWESaveQuestItemByString="存儲目錄-> ",~字符串,"，標籤-> ",~字符串,"，存儲任務目標項 -> ",~任務目標項
YDWESaveQuestItemByStringHint="通過輸入路徑，系統會根據當前魔獸版本採用Return bug+GC或HashTable存儲任務目標項數據。"

//YD Special Effect
//YDWEMusicFountain="生成音樂噴泉<!llusion製作>"
//YDWEMusicFountain="創建音樂噴泉特效在 ",~點,"，設置播放速率為 ",~實數,"，圖形參數1為 ",~實數," ，圖形參數2為 ",~實數," ，結束參數為 ",~實數," ，遊戲時間為 ",~實數," ，閃電類型為 "~閃電特效,"。"
//YDWEMusicFountainHint="播放速率數值設置越大則特效播放節奏越快，修改圖形參數和遊戲時間可以獲得不同圖形效果，有興趣可以試著改改看。"

YDWECreateLine="生成絲帶<thody製作>"
YDWECreateLine="在 ",~單位," 身上生成絲帶，特效單位類型為 ",~單位類型,"，數目為 ",~整數,"，角度偏移 ",~實數,"，間距為 ",~實數,"，持續時間為 ",~實數,"，刷新週期為 ",~實數,"，初始高度為 ",~實數,"，高度等差為 ",~實數,"，模型尺寸初始為 ",~實數,"，尺寸等差為 ",~實數,"。"
YDWECreateLineHint="  好看的絲帶~"

//Script System actions
YDWEInitCinematicSystem="開啟電影系統<Anitarf製作>"
YDWEInitCinematicSystem="開啟Script System電影系統"
YDWEInitCinematicSystemHint="電影系統必需開啟後才能使用，YDWE會自動加載對應的函數庫。"

YDWECinematicCameraDisable="關閉電影系統<Anitarf製作>"
YDWECinematicCameraDisable="關閉Script System電影系統"
YDWECinematicCameraDisableHint="電影系統關閉之後，無法再使用相關觸發器動作。"

YDWECinSInitTempPoint="設置演員出生點<Anitarf製作>"
YDWECinSInitTempPoint="設置演員單位出生在 ",~點"，系統會在該點創建單位"
YDWECinSInitTempPointHint="系統默認演員單位出生在(0,0)點，通過這條動作可以修改出生點位置。如果要刪除這個點，請在單位生成完畢後再刪除。"

YDWEScriptSystemPeriod="設置電影系統刷新週期<Anitarf製作>"
YDWEScriptSystemPeriod="設置電影系統刷新週期為 ",~刷新週期" 秒"
YDWEScriptSystemPeriodHint="電影系統默認刷新週期是0.02秒，通過這裡設定可以改變刷新週期。"

YDWEParticlePeriod="設置粒子系統刷新週期<Anitarf製作>"
YDWEParticlePeriod="設置粒子系統刷新週期為 ",~刷新週期" 秒"
YDWEParticlePeriodHint="粒子系統包含單位移動和轉向等與單位有關函數，默認刷新週期是0.02秒。"

YDWECameraPeriod="設置鏡頭系統刷新週期<Anitarf製作>"
YDWECameraPeriod="設置鏡頭系統刷新週期為 ",~刷新週期" 秒"
YDWECameraPeriodHint="鏡頭系統包含鏡頭移動和鎖定等函數，默認刷新週期是0.02秒。"

YDWEFadeFilterUnit="設置濾鏡單位<Anitarf製作>"
YDWEFadeFilterUnit="設置濾鏡輔助單位類型為 ",~單位類型
YDWEFadeFilterUnitHint="電影系統帶有一個濾鏡模型，通過它可以獲得更好的視覺效果。"

YDWEWriteToScene="記錄當前場景<Anitarf製作>"
YDWEWriteToScene="記錄當前場景為 ",~整數
YDWEWriteToSceneHint="告訴系統本幕場景的序號。"

YDWEPlayScene="播放場景<Anitarf製作>"
YDWEPlayScene="播放場景 ",~整數
YDWEPlaySceneHint="播放指定的場景。"

YDWEScriptNextScene="設置下一幕場景播放時間<Anitarf製作>"
YDWEScriptNextScene="在時間線 ",~實數," 秒時播放下一幕場景"
YDWEScriptNextSceneHint="電影系統將一部電影分為若干場景，每處場景可以在指定時間播放。"

YDWEScriptExternalFunc="運行外部函數<Anitarf製作>"
YDWEScriptExternalFunc="在時間線 ",~實數," 秒時運行函數 ",~字符串
YDWEScriptExternalFuncHint="可以運行電影系統之外的函數，填入函數的名字即可。"

YDWEScriptSubtitleLine="顯示字幕線<Anitarf製作>"
YDWEScriptSubtitleLine="在時間線 ",~實數," 秒時顯示字幕線 ",~字符串
YDWEScriptSubtitleLineHint="可以屏幕上顯示一行文字。"

YDWEScriptSubtitleClear="清除字幕線<Anitarf製作>"
YDWEScriptSubtitleClear="在時間線 ",~實數," 秒時清除字幕線"
YDWEScriptSubtitleClearHint="清除屏幕上顯示的文字。"

YDWEActorCreate="創建演員<Anitarf製作>"
YDWEActorCreate="為玩家 ",~玩家," 創建一個演員單位，編號為 ",~整數,"，單位類型為 ",~整數
YDWEActorCreateHint="電影裡出場的演員，必須通過這條動作來生成；每個演員需要設置一個終身編號，如9527，系統會通過這個編號來讓演員進行表演。"

YDWEScriptActAbilityLvl="添加技能<Anitarf製作>"
YDWEScriptActAbilityLvl="在時間線 ",~實數," 秒時為演員 ",~整數," 添加技能 ",~技能,"，等級為 ",~整數
YDWEScriptActAbilityLvlHint="在演員後面的參數填寫演員的編號，如9527，就可以為演員添加一個技能；可以設置技能的等級。"

YDWEScriptActAnimPlay="播放動畫<Anitarf製作>"
YDWEScriptActAnimPlay="在時間線 ",~實數," 秒時播放演員 ",~整數," 的動畫 ",~整數,"，動畫混合時間為 ",~實數," 秒"
YDWEScriptActAnimPlayHint="在動畫後面的參數填寫該動畫的索引，0為默認動畫；動畫混合時間是上一個動畫到下一個動畫的過渡時間，為0則立即切換。"

YDWEScriptActAnimSpeed="調整動畫速度<Anitarf製作>"
YDWEScriptActAnimSpeed="在時間線 ",~實數," 秒時調整演員 ",~整數," 的動畫速度為 ",~實數," x100%"
YDWEScriptActAnimSpeedHint="在動畫後面的參數填寫該動畫的索引，0為默認動畫；動畫混合時間是上一個動畫到下一個動畫的過渡時間，為0則立即切換。"

YDWEScriptActAnimReset="重置動畫<Anitarf製作>"
YDWEScriptActAnimReset="在時間線 ",~實數," 秒時重置演員 ",~整數," 的動畫"
YDWEScriptActAnimResetHint="重置單位的動畫，即播放單位的默認動畫；這個動畫通常是站立，索引為0。"

YDWEActorWalkProperties="單位行走設置<Anitarf製作>"
YDWEActorWalkProperties="設置單位類型 ",~單位類型," 的行走動畫索引為 ",~整數,"，行走動畫播放時間為 ",~實數,"，單位移動速度為 ",~實數
YDWEActorWalkPropertiesHint="設置單位的行走動畫參數，在本系統裡單位的行走是通過不斷移動單位並播放行走動畫來模擬實現。"

YDWEScriptActWalk="單位行走<Anitarf製作>"
YDWEScriptActWalk="在時間線 ",~實數," 秒時讓演員 ",~整數," 走到目的地(坐標X ",~實數,"，坐標Y ",~實數,")，時間為 ",~實數,"，動畫混合時間為 ",~實數," 秒"
YDWEScriptActWalkHint="讓單位在指定時間內跑到指定坐標；在使用這條動作之前，必須先設置好單位行走參數。"

YDWEScriptActSlide="單位滑行<Anitarf製作>"
YDWEScriptActSlide="在時間線 ",~實數," 秒時讓演員 ",~整數," 滑行到目的地(坐標X ",~實數,"，坐標Y ",~實數,")，時間為 ",~實數," 秒" ,"，最大高度為 ",~實數
YDWEScriptActSlideHint="設置單位的行走動畫參數，在本系統裡單位的行走是通過不斷移動單位並播放行走動畫來模擬實現。"

YDWEScriptActTurn="單位轉向<Anitarf製作>"
YDWEScriptActTurn="在時間線 ",~實數," 秒時讓演員 ",~整數," 朝向角度 ",~實數,"，時間為 ",~實數,"，旋轉方向為 ",~整數
YDWEScriptActTurnHint="讓單位在指定時間內旋轉到朝向某個角度；當選擇最近方向，單位會自動選擇用時最短的旋轉方式。"

YDWEScriptActFace="鎖定單位身體朝向<Anitarf製作>"
YDWEScriptActFace="在時間線 ",~實數," 秒時鎖定演員 ",~整數," 的身體朝向演員 ",~整數,"，部位為 ",~部位,"，偏移坐標為( X ",~Xoffset,"，","Y ",~Yoffset,"，","Z ",~offset," )，","動畫","混合","時間為 ",~實數," 秒"
YDWEScriptActFaceHint="讓單位的頭部或胸部一直朝向目標單位的偏移坐標點處，直到重置身體朝向為止；坐標偏移以目標單位腳下為原點。"

YDWEScriptActFaceReset="重置單位身體朝向<Anitarf製作>"
YDWEScriptActFaceReset="在時間線 ",~實數," 秒時重置演員 ",~整數," 的身體朝向，動畫混合時間為 ",~實數
YDWEScriptActFaceResetHint="讓單位的身體朝向恢復正常。"

YDWEScriptActColour="改變單位顏色<Anitarf製作>"
YDWEScriptActColour="在時間線 ",~實數," 秒時改變演員 ",~整數," 的顏色比例為( ","紅 ",~紅,"%，綠 ",~綠,"%，藍 ",~藍,"% )，可見度為 ",~可見度,"%，指定時間為 ",~時間," 秒"
YDWEScriptActColourHint="在指定時間內逐漸改變單位的顏色比例和可見度到指定值，單位默認顏色比列均是100%，可見度為0時單位完全透明。"

YDWEScriptActSize="改變單位身體尺寸<Anitarf製作>"
YDWEScriptActSize="在時間線 ",~實數," 秒時改變演員 ",~整數," 的身體尺寸為 " ,~實數,"，指定時間為 ",~實數," 秒"
YDWEScriptActSizeHint="在指定時間內逐漸改變單位的身體尺寸為目標值，1.0為單位正常身體尺寸。"

YDWECameraSetupAssign="設置鏡頭<Anitarf製作>"
YDWECameraSetupAssign="設置鏡頭 ",~鏡頭," 的編號為 ",~整數
YDWECameraSetupAssignHint="設置鏡頭的編號，系統會根據鏡頭這個編號來調用鏡頭。"

YDWEScriptCamera="應用鏡頭<Anitarf製作>"
YDWEScriptCamera="在時間線 ",~實數," 秒時應用鏡頭 ",~整數,"，指定時間為 ",~實數,"，鏡頭切換方式為 ",~整數
YDWEScriptCameraHint="在指定時間內將當前鏡頭切換到目標鏡頭；可以選擇鏡頭切換方式，當選擇立即切換，指定時間的參數會被忽略。"

YDWEScriptCameraStat="改變鏡頭參數<Anitarf製作>"
YDWEScriptCameraStat="在時間線 ",~實數," 秒時設置當前鏡頭的參數 ",~整數," 在指定時間 ",~實數," 內改變為 ",~實數,"，速度為 ",~實數,"，鏡頭切換方式為 ",~整數
YDWEScriptCameraStatHint="在指定時間內將改變當前鏡頭的某個屬性到目標值；當選擇立即切換，指定時間、目標值和速度的參數會被忽略。"

YDWEScriptCameraIgnoreTerrain="鏡頭忽略懸崖<Anitarf製作>"
YDWEScriptCameraIgnoreTerrain="在時間線 ",~實數," 秒時設置鏡頭移動時 ",~真值," 懸崖高度"
YDWEScriptCameraIgnoreTerrainHint="如果選擇不忽略，那麼鏡頭在移動時，會隨著地形起伏而抖動；選擇忽略，如果鏡頭高度低於地表，會看到地表下的天空。"

YDWEScriptActCameraLock="鎖定鏡頭位置<Anitarf製作>"
YDWEScriptActCameraLock="在時間線 ",~實數," 秒時鎖定鏡頭位置到演員 ",~整數,"，偏移坐標為( X ",~Xoffset,"，","Y ",~Yoffset,"，","Z ",~offset," )，鏡頭運動是否平滑(",~真值,")，指","定","時","間","為 ",~實數," 秒"
YDWEScriptActCameraLockHint="在指定時間內將鏡頭位置鎖定在目標單位的偏移坐標點處，如果鏡頭運動選擇不平滑，那麼鏡頭將按線性移動。"

YDWEScriptActCameraLockReset="重置鏡頭位置<Anitarf製作>"
YDWEScriptActCameraLockReset="在時間線 ",~實數," 秒時重置鏡頭位置，鏡頭運動是否平滑(",~真值,")，指","定","時","間","為 ",~實數," 秒"
YDWEScriptActCameraLockResetHint="在指定時間內解除鏡頭位置鎖定，如果鏡頭運動選擇不平滑，那麼鏡頭將按線性移動。"

YDWEScriptActCameraFace="鎖定鏡頭角度<Anitarf製作>"
YDWEScriptActCameraFace="在時間線 ",~實數," 秒時鎖定鏡頭角度到演員 ",~整數,"，偏移坐標為( X ",~Xoffset,"，","Y ",~Yoffset,"，","Z ",~offset," )，鏡頭運動是否平滑(",~真值,")，指","定","時","間","為 ",~實數," 秒"
YDWEScriptActCameraFaceHint="在指定時間內將鏡頭角度鎖定在目標單位的偏移坐標點處，如果鏡頭運動選擇不平滑，那麼鏡頭將按線性移動。"

YDWEScriptActCameraFaceReset="重置鏡頭角度<Anitarf製作>"
YDWEScriptActCameraFaceReset="在時間線 ",~實數," 秒時重置鏡頭角度，鏡頭運動是否平滑(",~真值,")，指","定","時","間","為 ",~實數," 秒"
YDWEScriptActCameraFaceResetHint="在指定時間內解除鏡頭角度鎖定，如果鏡頭運動選擇不平滑，那麼鏡頭將按線性移動。"

YDWEScriptFog="設置迷霧<Anitarf製作>"
YDWEScriptFog="在時間線 ",~實數," 秒時設置迷霧，Z軸起始 ",~實數,"，Z軸結束 ",~實數,"，顏色比例為( ","紅 ",~紅,"%，綠 ",~綠,"%，藍 ",~藍,"% )，指定時間為 ",~實數," 秒"
YDWEScriptFogHint="迷霧在指定時間內變化到指定值。"

YDWEScriptFade="設置濾鏡<Anitarf製作>"
YDWEScriptFade="在時間線 ",~實數," 秒時設置濾鏡，顏色比例為( ","紅 ",~紅,"%，綠 ",~綠,"%，藍 ",~藍,"% )，透明度為 ",~實數,"%，指定時間為 ",~實數," 秒"
YDWEScriptFadeHint="濾鏡在指定時間內變化到指定值。"

YDWEScriptPlaySound="播放聲音<Anitarf製作>"
YDWEScriptPlaySound="在時間線 ",~實數," 秒時播放聲音，路徑為 ",~字符串,"，播放速率為 ",~實數,"，音量為 ",~整數
YDWEScriptPlaySoundHint="播放聲音；在路徑處填寫聲音文件的路徑；1.0為正常播放速率，0.5為半速，2.0為兩倍速率；音量是聲音大小，取值於0-127之間。"

YDWEScriptPointEffect="創建特效(指定點)<Anitarf製作>"
YDWEScriptPointEffect="在時間線 ",~實數," 秒時創建特效在空間坐標( X ",~實數,"，Y ",~實數,"，Z ",~實數," )，路徑為 ",~字符串,"，特效存在時間為 ",~實數," 秒"
YDWEScriptPointEffectHint="創建特效在空間坐標處，可以設置特效存在的時間。"

YDWEScriptActEffect="創建特效(綁定單位)<Anitarf製作>"
YDWEScriptActEffect="在時間線 ",~實數," 秒時創建特效在演員 ",~整數," 身上，特效路徑為 ",~字符串,"，附加部位為 ",~字符串,"，特效存在時間為 ",~實數
YDWEScriptActEffectHint="創建特效在單位身上，可以設置特效附加部位和存在時間。"

// Countdown Timer actions

TimerStart="運行計時器 [C]"
TimerStart="立即運行 ",~計時器," 時間設置: ",~Time," 秒,是否循環: ",~false/true," ,運行函數: ",~function name
TimerStartHint="等同於TimerStart"

StartTimerBJ="啟動計時器"
StartTimerBJ="啟動 ",~Timer,",應用計時方式: ",~One-Shot/Repeating,",計時週期為 ",~Time," 秒"
StartTimerBJHint=

PauseTimer="暫停計時器 [R]"
PauseTimer="暫停 ",~計時器
PauseTimerHint=

ResumeTimer="恢復計時器 [R]"
ResumeTimer="恢復 ",~計時器
ResumeTimerHint=

PauseTimerBJ="暫停/恢復 計時器"
PauseTimerBJ=~Pause/Resume," ",~Timer
PauseTimerBJHint=

DestroyTimer="刪除計時器 [R]"
DestroyTimer="刪除 ",~計時器
DestroyTimerHint="一般來說,計時器並不需要刪除.只為某些有特別需求的用戶提供."

YDWETimerDestroyTimer="計時器系統-刪除計時器[YDWE]""
YDWETimerDestroyTimer="在 ",~時間," 秒後刪除 ",~計時器
YDWETimerDestroyTimerHint="啟動中心計時器，在指定時間之後刪除計時器。"

CreateTimerDialogBJ="創建計時器窗口"
CreateTimerDialogBJ="為 ",~計時器," 創建計時器窗口,標題: ",~文字
CreateTimerDialogBJHint="計時器窗口不能在地圖初始化時顯示."

DestroyTimerDialogBJ="刪除計時器窗口"
DestroyTimerDialogBJ="刪除 ",~計時器窗口
DestroyTimerDialogBJHint=

TimerDialogDisplay="顯示/隱藏 計時器窗口(所有玩家) [R]"
TimerDialogDisplay="設置 ",~計時器窗口," 的狀態為",~Show/Hide
TimerDialogDisplayHint="計時器窗口不能在地圖初始化時顯示."

TimerDialogDisplayBJ="顯示/隱藏 計時器窗口(所有玩家)"
TimerDialogDisplayBJ=~Show/Hide," ",~計時器窗口
TimerDialogDisplayBJHint="計時器窗口不能在地圖初始化時顯示."

TimerDialogDisplayForPlayerBJ="顯示/隱藏 計時器窗口(指定玩家)"
TimerDialogDisplayForPlayerBJ=~Show/Hide," ",~計時器窗口," 應用於 ",~Player
TimerDialogDisplayForPlayerBJHint="計時器窗口不能在地圖初始化時顯示."

TimerDialogSetTitleBJ="改變計時器窗口標題"
TimerDialogSetTitleBJ="改變 ",~Timer Window," 的標題為 ",~Title
TimerDialogSetTitleBJHint=

TimerDialogSetTitleColor="改變計時器窗口文字顏色 [R]"
TimerDialogSetTitleColor="改變 ",~Timer Window," 文字顏色為(",~Red,",",~Green,",",~Blue,") 透明值為: ",~Transparency
TimerDialogSetTitleColorHint="顏色格式為(紅,綠,藍). Alpha通道值0為不可見. 顏色值和透明值值取值範圍為0-255."

TimerDialogSetTitleColorBJ="改變計時器窗口標題顏色"
TimerDialogSetTitleColorBJ="改變 ",~Timer Window," 的標題顏色為 (",~紅,"%, ",~綠,"%, ",~藍,"%) 透明度為 ",~Transparency,"%"
TimerDialogSetTitleColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

TimerDialogSetTimeColor="改變計時器窗口計時顏色 [R]"
TimerDialogSetTimeColor="改變 ",~Timer Window," 的計間顏色為(",~Red,",",~Green,",",~Blue,") 透明值為: ",~Transparency
TimerDialogSetTimeColorHint="顏色格式為(紅,綠,藍). Alpha通道值0為不可見. 顏色值和透明值值取值範圍為0-255."

TimerDialogSetTimeColorBJ="改變計時器窗口計時顏色"
TimerDialogSetTimeColorBJ="改變 ",~Timer Window," 的計時顏色為 (",~紅,"%, ",~綠,"%, ",~藍,"%) 透明度為 ",~Transparency,"%"
TimerDialogSetTimeColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

TimerDialogSetSpeed="設置計時器窗口速率 [R]"
TimerDialogSetSpeed="設置 ",~Timer Window," 的時間流逝速度為 ",~Factor," 倍"
TimerDialogSetSpeedHint=" 同時計時器顯示時間也會隨之變化. 就是說60秒的計時器設置為2倍速則顯示時間也會變為120秒."

//TimerDialogSetSpeedBJ="設置計時器窗口速率"
//TimerDialogSetSpeedBJ="設置 ",~Timer Window," 的時間流逝速度為 ",~Factor,"%"
//TimerDialogSetSpeedBJHint=


// Destructable actions
CreateDestructableLoc="創建可破壞物"
CreateDestructableLoc="創建 ",~可破壞物類型," 在 ",~指定點," ,面向角度: ",~Direction," 尺寸縮放: ",~Scale," 樣式: ",~Variation
CreateDestructableLocHint="面向角度採用角度制,0度為正東方向,90度為正北方向. 使用'最後創建的可破壞物'來獲取創建的物體."

CreateDeadDestructableLocBJ="創建可破壞物(死亡)"
CreateDeadDestructableLocBJ="創建死亡的 ",~可破壞物類型," 在 ",~指定點," ,面向角度: ",~Direction," 尺寸縮放: ",~Scale," 樣式: ",~Variation
CreateDeadDestructableLocBJHint="面向角度採用角度制,0度為正東方向,90度為正北方向. 使用'最後創建的可破壞物'來獲取創建的物體."

KillDestructable="殺死"
KillDestructable="殺死 ",~可破壞物
KillDestructableHint=

RemoveDestructable="刪除"
RemoveDestructable="刪除 ",~可破壞物
RemoveDestructableHint=

DestructableRestoreLife="復活"
DestructableRestoreLife="復活 ",~Destructible," ,設置生命值為 ",~Value," 並 ",~Show/Hide," 生長動畫"
DestructableRestoreLifeHint=

ShowDestructable="顯示/隱藏 [R]"
ShowDestructable="設置 ",~可破壞物," 的狀態為 ",~Show/Hide
ShowDestructableHint="隱藏的可破壞物不被顯示,但仍影響通行和視線."

ShowDestructableBJ="顯示/隱藏"
ShowDestructableBJ=~Show/Hide," ",~可破壞物
ShowDestructableBJHint="隱藏的可破壞物不被顯示,但仍影響通行和視線."

SetDestructableLifePercentBJ="設置生命值(百分比)"
SetDestructableLifePercentBJ="設置 ",~可破壞物," 的生命值為 ",~Percent,"%"
SetDestructableLifePercentBJHint=

SetDestructableLife="設置生命值(指定值)"
SetDestructableLife="設置 ",~可破壞物," 的生命值為 ",~Value
SetDestructableLifeHint=

SetDestructableMaxLifeBJ="設置最大生命值"
SetDestructableMaxLifeBJ="設置 ",~可破壞物," 的最大生命值為 ",~Value
SetDestructableMaxLifeBJHint=

ModifyGateBJ="打開/關閉/破壞大門"
ModifyGateBJ=~Open/Close/Destroy," ",~大門
ModifyGateBJHint=

ChangeElevatorWalls="打開/關閉升降機墻壁"
ChangeElevatorWalls=~Open/Close," ",~Walls," 對 ",~升降機
ChangeElevatorWallsHint=""

ChangeElevatorHeight="設置升降機高度"
ChangeElevatorHeight="設置 ",~升降機," 的高度為 ",~Height
ChangeElevatorHeightHint=

SetDestructableInvulnerableBJ="設置無敵/可攻擊"
SetDestructableInvulnerableBJ="設置 ",~可破壞物," ",~Invulnerable/Vulnerable
SetDestructableInvulnerableBJHint=

SetDestructableOccluderHeight="設置閉塞高度"
SetDestructableOccluderHeight="設置 ",~可破壞物," 的閉塞高度為 ",~Height
SetDestructableOccluderHeightHint=

EnumDestructablesInRectAllMultiple="選取矩形區域內可破壞物做動作(多個動作)"
EnumDestructablesInRectAllMultiple="選取 ",~矩形區域," 內所有可破壞物做動作"
EnumDestructablesInRectAllMultipleHint="組動作中可使用'選取的可破壞物'來獲取對應的可破壞物. 每個可破壞物都會運行一次動作(包括死亡和隱藏的). 等待不能在組動作中運行."

EnumDestructablesInCircleBJMultiple="選取指定點範圍內可破壞物做動作(多個動作)"
EnumDestructablesInCircleBJMultiple="選取 ",~Radius," 範圍以 ",~指定點," 為中心的區域內所有可破壞物做動作(多個動作)"
EnumDestructablesInCircleBJMultipleHint="組動作中可使用'選取的可破壞物'來獲取對應的可破壞物. 每個可破壞物都會運行一次動作(包括死亡和隱藏的). 等待不能在組動作中運行."

EnumDestructablesInRectAll="選取矩形區域內可破壞物做動作"
EnumDestructablesInRectAll="選取 ",~矩形區域," 內所有可破壞物 ",~做動作
EnumDestructablesInRectAllHint="組動作中可使用'選取的可破壞物'來獲取對應的可破壞物. 每個可破壞物都會運行一次動作(包括死亡和隱藏的). 等待不能在組動作中運行."

EnumDestructablesInCircleBJ="選取指定點範圍內可破壞物做動作"
EnumDestructablesInCircleBJ="選取 ",~Radius," 範圍以 ",~指定點,"為中心的區域內所有可破壞物 ",~做動作
EnumDestructablesInCircleBJHint="組動作中可使用'選取的可破壞物'來獲取對應的可破壞物. 每個可破壞物都會運行一次動作(包括死亡和隱藏的). 等待不能在組動作中運行."


// Leaderboard actions
CreateLeaderboardBJ="創建"
CreateLeaderboardBJ="對 ",~玩家組," 創建排行榜,使用標題: ",~文字
CreateLeaderboardBJHint="排行榜不能在地圖初始化時顯示. 標題為空則不顯示標題欄."

DestroyLeaderboardBJ="刪除"
DestroyLeaderboardBJ="刪除 ",~排行榜
DestroyLeaderboardBJHint=

LeaderboardClear="清空 [R]"
LeaderboardClear="清空 ",~排行榜
LeaderboardClearHint="清空排行榜中所有內容."

LeaderboardSortItemsBJ="排序"
LeaderboardSortItemsBJ="將 ",~排行榜," 按 ",~Field," 使用 ",~Ascending/Descending," 排列"
LeaderboardSortItemsBJHint=

LeaderboardDisplay="顯示/隱藏 [R]"
LeaderboardDisplay="設置 ",~排行榜," ",~Show/Hide,
LeaderboardDisplayHint="排行榜不能在地圖初始化時顯示."

LeaderboardDisplayBJ="顯示/隱藏"
LeaderboardDisplayBJ=~Show/Hide," ",~排行榜
LeaderboardDisplayBJHint="排行榜不能在地圖初始化時顯示."

PlayerSetLeaderboard="設置玩家使用的排行榜 [R]"
PlayerSetLeaderboard="設置 ",~Player," 使用 ",~排行榜
PlayerSetLeaderboardHint="每個玩家只能顯示一個排行榜."

LeaderboardSetLabelBJ="設置標題"
LeaderboardSetLabelBJ="設置 ",~Leaderboard," 的標題為 ",~文字
LeaderboardSetLabelBJHint=

LeaderboardSetLabelColor="設置文字顏色 [R]"
LeaderboardSetLabelColor="設置 ",~Leaderboard," 的文字顏色為(",~Red,",",~Green,",",~Blue,") Alpha通道值為: ",~Transparency
LeaderboardSetLabelColorHint="顏色格式為(紅,綠,藍). Alpha通道值0為不可見. 顏色值和Alpha通道值取值範圍為0-255."

LeaderboardSetLabelColorBJ="設置文字顏色"
LeaderboardSetLabelColorBJ="設置 ",~Leaderboard," 的文字顏色為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
LeaderboardSetLabelColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

LeaderboardSetValueColor="設置數值顏色 [R]"
LeaderboardSetValueColor="設置 ",~Leaderboard," 的數值顏色為(",~Red,",",~Green,",",~Blue,") Alpha通道值為: ",~Transparency
LeaderboardSetValueColorHint="顏色格式為(紅,綠,藍). Alpha通道值0為不可見. 顏色值和Alpha通道值取值範圍為0-255."

LeaderboardSetValueColorBJ="設置數值顏色"
LeaderboardSetValueColorBJ="設置 ",~Leaderboard," 的數值顏色為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
LeaderboardSetValueColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

LeaderboardSetStyleBJ="設置顯示樣式"
LeaderboardSetStyleBJ="設置 ",~Leaderboard," 的顯示樣式: ",~Show/Hide," 標題, ",~Show/Hide," 文字, ",~Show/Hide," 分數, ",~Show/Hide," 圖標"
LeaderboardSetStyleBJHint=

LeaderboardAddItemBJ="添加玩家"
LeaderboardAddItemBJ="添加 ",~Player," 到 ",~Leaderboard," ,使用名字: ",~文字," 設置分數: ",~Value
LeaderboardAddItemBJHint=

LeaderboardRemovePlayerItemBJ="移除玩家"
LeaderboardRemovePlayerItemBJ="把 ",~Player," 從 ",~Leaderboard," 移除"
LeaderboardRemovePlayerItemBJHint=

LeaderboardSetPlayerItemLabelBJ="改變玩家名字"
LeaderboardSetPlayerItemLabelBJ="設置 ",~Player," 在 ",~Leaderboard," 中的名字為 ",~文字
LeaderboardSetPlayerItemLabelBJHint=

LeaderboardSetPlayerItemLabelColorBJ="設置玩家名字顏色"
LeaderboardSetPlayerItemLabelColorBJ="設置 ",~Player," 在 ",~Leaderboard," 中的名字顏色為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
LeaderboardSetPlayerItemLabelColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

LeaderboardSetPlayerItemValueBJ="改變玩家分數"
LeaderboardSetPlayerItemValueBJ="設置 ",~Player," 在 ",~Leaderboard," 中的分數為: ",~Value
LeaderboardSetPlayerItemValueBJHint=

LeaderboardSetPlayerItemValueColorBJ="改變玩家分數顏色"
LeaderboardSetPlayerItemValueColorBJ="設置 ",~Player," 在 ",~Leaderboard," 中的分數顏色為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
LeaderboardSetPlayerItemValueColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

LeaderboardSetPlayerItemStyleBJ="設置玩家顯示樣式"
LeaderboardSetPlayerItemStyleBJ="設置 ",~Player," 在 ",~Leaderboard," 中的顯示樣式: ",~Show/Hide," 名字, ",~Show/Hide," 分數, ",~Show/Hide," 圖標"
LeaderboardSetPlayerItemStyleBJHint=

// Text Tag actions
CreateTextTagLocBJ="創建漂浮文字(指定地點)"
CreateTextTagLocBJ="創建漂浮文字: ",~文字," 在 ",~指定點,",Z軸高度: ",~Z," ,字體大小: ",~Size," ,顏色值:(",~Red,"%, ",~Green,"%, ",~Blue,"%) ,透明度: ",~Transparency,"%"
CreateTextTagLocBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

CreateTextTagUnitBJ="創建漂浮文字(指定單位)"
CreateTextTagUnitBJ="創建漂浮文字: ",~文字," 在 ",~單位,"的頭頂, Z軸偏移 ",~Z,",字體大小: ",~Size," ,顏色值:(",~Red,"%, ",~Green,"%, ",~Blue,"%) ,透明度: ",~Transparency,"%"
CreateTextTagUnitBJHint="該方式創建的漂浮文字並不會跟隨單位一起移動.  顏色格式為(紅,綠,藍). 透明度100%是不可見的."

DestroyTextTagBJ="刪除"
DestroyTextTagBJ="刪除 ",~Floating Text
DestroyTextTagBJHint="遊戲最多允許存在100個漂浮文字,所以請及時刪除不再使用的漂浮文字."

YDWETimerDestroyTextTag="計時器系統-刪除漂浮文字[YDWE]""
YDWETimerDestroyTextTag="在 ",~時間," 秒後刪除 ",~漂浮文字
YDWETimerDestroyTextTagHint="啟動中心計時器，在指定時間之後刪除漂浮文字。"

SetTextTagVisibility="顯示/隱藏 (所有玩家) [R]"
SetTextTagVisibility="對所有玩家 ",~Show/Hide," ",~Floating Text
SetTextTagVisibilityHint=

ShowTextTagForceBJ="顯示/隱藏"
ShowTextTagForceBJ=~Show/Hide," ",~Floating Text," 對 ",~玩家組
ShowTextTagForceBJHint=

SetTextTagVelocity="設置速率 [R]"
SetTextTagVelocity="設置 ",~Floating Text," 的X軸速率: ",~XSpeed," ,Y軸速率: ",~YSpeed
SetTextTagVelocityHint="對移動後的漂浮文字設置速率,該漂浮文字會先回到原點再向設定的角度移動. 這裡的1約等於遊戲中的1800速度."

SetTextTagVelocityBJ="設置速率"
SetTextTagVelocityBJ="設置 ",~Floating Text," 的移動速率為 ",~Speed," ,方向為 ",~Angle," 度"
SetTextTagVelocityBJHint="對移動後的漂浮文字設置速率,該漂浮文字會先回到原點再向設定的角度移動. 方向採用角度制,0度為正東方向,90度為正北方向."

SetTextTagColor="改變顏色 [R]"
SetTextTagColor="改變 ",~Floating Text," 的顏色為(",~Red,",",~Green,",",~Blue,") 透明值為 ",~Transparency
SetTextTagColorHint="顏色格式為(紅,綠,藍). 透明值0為不可見. 顏色值和透明值取值範圍為0-255."

SetTextTagColorBJ="改變顏色"
SetTextTagColorBJ="改變 ",~Floating Text," 的顏色為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
SetTextTagColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

SetTextTagPos="改變位置(坐標) [R]"
SetTextTagPos="改變 ",~Floating Text," 的位置為(",~X,",",~Y,") ,Z軸高度為 ",~Z
SetTextTagPosBJ="改變位置(點)"
SetTextTagPosBJ="改變 ",~Floating Text," 的位置為 ",~指定點," ,Z軸高度為 ",~Z
SetTextTagPosBJHint=
SetTextTagPosHint=

SetTextTagPosUnitBJ="改變位置(單位)"
SetTextTagPosUnitBJ="改變 ",~Floating Text," 的位置到 ",~單位," 頭頂Z軸偏移 ",~Z," 處"
SetTextTagPosUnitBJHint=



SetTextTagText="改變文字內容 [R]"
SetTextTagText="改變 ",~Floating Text," 的內容為 ",~文字," ,字體大小: ",~Size
SetTextTagTextHint="採用原始字體大小單位. 字體大小不能超過0.5."

SetTextTagTextBJ="改變文字內容"
SetTextTagTextBJ="改變 ",~Floating Text," 的內容為 ",~文字," ,字體大小: ",~Size
SetTextTagTextBJHint=

SetTextTagSuspendedBJ="暫停/恢復"
SetTextTagSuspendedBJ="設置 ",~Floating Text," : ",~Enable/Disable," 暫停狀態"
SetTextTagSuspendedBJHint="暫停狀態暫停漂浮文字的移動和生命計時."

SetTextTagPermanentBJ="設置永久顯示"
SetTextTagPermanentBJ="設置 ",~Floating Text," : ",~Enable/Disable," 永久顯示."
SetTextTagPermanentBJHint=

SetTextTagLifespanBJ="設置顯示時間"
SetTextTagLifespanBJ="設置 ",~Floating Text," 的顯示時間為 ",~Time," 秒"
SetTextTagLifespanBJHint="該動作並不影響永久性漂浮文字. 當顯示時間到期時,系統會自動清除該漂浮文字."

SetTextTagFadepointBJ="設置消逝時間點"
SetTextTagFadepointBJ="設置 ",~Floating Text," 的消逝時間點為 ",~Time," 秒"
SetTextTagFadepointBJHint="該動作並不影響永久性漂浮文字. 當漂浮文字存在時間到達該值時會開始淡化消逝."

SetTextTagAgeBJ="設置已存在時間"
SetTextTagAgeBJ="設置 ",~Floating Text," 的已存在時間為 ",~Time," 秒"
SetTextTagAgeBJHint="該動作並不影響永久性漂浮文字. "

// Region actions
RegionAddRect="添加區域 [R]"
RegionAddRect="對 ",~不規則區域," 添加 ",~矩形區域
RegionAddRectHint=區域是遊戲中一個遊戲地區的集合體,可以包含地區和點.

RegionClearRect="移除區域 [R]"
RegionClearRect="在 ",~不規則區域," 中移除 ",~矩形區域
RegionClearRectHint=

RegionAddCell="添加單元點(指定坐標) [R]"
RegionAddCell="對 ",~不規則區域," 添加單元點: (",~X,",",~Y,")"
RegionAddCellHint=單元點大小為32x32.

RegionAddCellAtLoc="添加單元點(指定點) [R]"
RegionAddCellAtLoc="對 ",~不規則區域," 添加單元點: ",~點
RegionAddCellAtLocHint=單元點大小為32x32.

RegionClearCell="移除單元點(指定坐標) [R]"
RegionClearCell="在 ",~不規則區域," 中移除單元點: (",~X,",",~Y,")"
RegionClearCellHint="單元點大小為32x32."

RegionClearCellAtLoc="移除單元點(指定點) [R]"
RegionClearCellAtLoc="在 ",~不規則區域," 中移除單元點: ",~點
RegionClearCellAtLocHint="單元點大小為32x32."

RemoveRegion="刪除不規則區域 [R]"
RemoveRegion="刪除 ",~不規則區域
RemoveRegionHint=

// Rect actions
SetRect="設置矩形區域(指定坐標) [R]"
SetRect="重新設置 ",~矩形區域," ,左下角坐標為(",~X,",",~Y,"), 右上角坐標為(",~X,",",~Y,")"
SetRectHint="該區域必須是一個變量. 重新設置矩形區域的大小和位置."

SetRectFromLoc="設置矩形區域(指定點) [R]"
SetRectFromLoc="重新設置 ",~矩形區域," ,左下角點為 ",~點," 右上角點為 ",~點
SetRectFromLocHint="該區域必須是一個變量. 重新設置矩形區域的大小和位置."

MoveRectTo="移動矩形區域(指定坐標) [R]"
MoveRectTo="移動 ",~矩形區域," 到(",~X,",",~Y,")"
MoveRectToHint="該區域必須是一個變量. 目標點將作為該區域的新中心點."


MoveRectToLoc="移動矩形區域(指定點)"
MoveRectToLoc="移動 ",~矩形區域," 到 ",~目標點
MoveRectToLocHint="該區域必須是一個變量. 目標點將作為該區域的新中心點."

RemoveRect="刪除矩形區域 [R]"
RemoveRect="刪除 ",~矩形區域
RemoveRectHint=
// Quest actions
QuestMessageBJ="發送任務信息"
QuestMessageBJ="對 ",~玩家組," 發送 ",~Quest Message Type," 信息: ",~文字
QuestMessageBJHint=

CreateQuestBJ="創建任務"
CreateQuestBJ="創建一個 ",~Quest Type," 任務,標題: ",~文字," 任務說明: ",~文字," 任務圖標: ",~Icon Path
CreateQuestBJHint=

DestroyQuestBJ="刪除任務"
DestroyQuestBJ="刪除 ",~Quest
DestroyQuestBJHint="被刪除的任務將不再顯示在任務列表."

QuestSetEnabled="啟用/禁用 任務 [R]"
QuestSetEnabled="設置 ",~Quest," ",~Enable/Disable
QuestSetEnabledHint="被禁用的任務將不會顯示在任務列表."

QuestSetEnabledBJ="啟用/禁用任務"
QuestSetEnabledBJ=~Enable/Disable," ",~Quest
QuestSetEnabledBJHint="被禁用的任務將不會顯示在任務列表."

QuestSetCompletedBJ="設置任務完成"
QuestSetCompletedBJ="設置 ",~Quest," ",~Completed/Incomplete
QuestSetCompletedBJHint=

QuestSetFailedBJ="設置任務失敗"
QuestSetFailedBJ="設置 ",~Quest," ",~Failed/Not Failed
QuestSetFailedBJHint=

QuestSetDiscoveredBJ="設置任務被發現"
QuestSetDiscoveredBJ="設置 ",~Quest," ",~Discovered/Undiscovered
QuestSetDiscoveredBJHint=

QuestSetTitleBJ="設置任務標題"
QuestSetTitleBJ="設置 ",~Quest," 的標題為 ",~文字
QuestSetTitleBJHint=

QuestSetDescriptionBJ="設置任務說明"
QuestSetDescriptionBJ="設置 ",~Quest," 的任務說明為: ",~文字
QuestSetDescriptionBJHint=

CreateQuestItemBJ="創建任務項目"
CreateQuestItemBJ="為 ",~Quest," 創建一個任務項目: ",~文字
CreateQuestItemBJHint=

QuestItemSetCompletedBJ="設置任務項目完成"
QuestItemSetCompletedBJ="設置 ",~Quest Requirement," ",~Completed/Incomplete
QuestItemSetCompletedBJHint=

QuestItemSetDescriptionBJ="改變任務項目說明"
QuestItemSetDescriptionBJ="改變 ",~Quest Requirement," 的說明為: ",~文字
QuestItemSetDescriptionBJHint=

CreateDefeatConditionBJ="創建失敗條件"
CreateDefeatConditionBJ="創建失敗條件: ",~文字
CreateDefeatConditionBJHint="失敗條件會在每個任務中顯示."

DestroyDefeatConditionBJ="刪除失敗條件"
DestroyDefeatConditionBJ="刪除 ",~Defeat Condition
DestroyDefeatConditionBJHint="被刪除的失敗條件會從每個任務中移除."

DefeatConditionSetDescriptionBJ="改變失敗條件說明"
DefeatConditionSetDescriptionBJ="改變 ",~Defeat Condition," 的說明為: ",~文字
DefeatConditionSetDescriptionBJHint=

FlashQuestDialogButtonBJ="閃動任務按鈕"
FlashQuestDialogButtonBJ="閃動任務按鈕"
FlashQuestDialogButtonBJHint=
// Lightning actions
AddLightningLoc="創建閃電效果"
AddLightningLoc="創建一道 ",~Type," 閃電效果,從 ",~點," 到 ",~點
AddLightningLocHint=

DestroyLightningBJ="刪除閃電效果"
DestroyLightningBJ="刪除 ",~Lightning
DestroyLightningBJHint=

YDWETimerDestroyLightning="計時器系統-刪除閃電效果[YDWE]"
YDWETimerDestroyLightning="在 ",~時間," 秒後刪除 ",~閃電效果
YDWETimerDestroyLightningHint="啟動中心計時器，在指定時間之後刪除閃電效果。"
//MoveLightning

MoveLightningEx="移動閃電效果(指定坐標) [R]"
MoveLightningEx="移動 ",~Lightning," 到新位置,(",~Boolean," 檢查可見性) 新起始點: (",~X,",",~Y,",",~Z,") 新終結點: (",~X,",",~Y,",",~Z,")
MoveLightningExHint="可指定Z坐標. 允許檢查可見性則在指定起始點和終結點都不可見時將不移動閃電效果."

MoveLightningLoc="移動閃電效果(指定點)"
MoveLightningLoc="移動 ",~Lightning," ,使其連接 ",~點," 到 ",~點
MoveLightningLocHint=

SetLightningColorBJ="改變閃電效果顏色"
SetLightningColorBJ="改變 ",~Lightning," 的顏色值為(",~Red," ",~Green," ",~Blue,") Alpha通道值為 ",~Alpha
SetLightningColorBJHint="顏色格式為(紅,綠,藍). 顏色和Alpha通道值取值範圍0-1. Alpha通道值為0即完全透明."
// Sound actions
PlaySoundBJ="播放音效"
PlaySoundBJ="播放 ",~音效
PlaySoundBJHint="音效不能在地圖初始化時播放. 注意3D音效必須指定地點播放."

PlaySoundAtPointBJ="播放3D音效(指定點)"
PlaySoundAtPointBJ="播放 ",~3D音效," ,音量: ",~Volume,"% 播放位置: ",~指定點," Z軸高度: ",~Z
PlaySoundAtPointBJHint="音效不能在地圖初始化時播放. 該動作只能用於播放3D音效."

PlaySoundOnUnitBJ="播放3D音效(跟隨單位)"
PlaySoundOnUnitBJ="播放 ",~3D音效," ,音量: ",~Volume,"%, 跟隨單位: ",~目標單位
PlaySoundOnUnitBJHint="音效不能在地圖初始化時播放. 該動作只能用於播放3D音效."

PlaySoundFromOffsetBJ="跳播音效"
PlaySoundFromOffsetBJ="播放 ",~音效,",音量: ",~Volume,"%,跳過開始 ",~Offset," 秒"
PlaySoundFromOffsetBJHint="音效不能在地圖初始化時播放.該動作不能用於3D音效."

StopSoundBJ="停止音效"
StopSoundBJ="停止播放 ",~音效," ",~After Fading/Immediately
StopSoundBJHint=

KillSoundWhenDoneBJ="刪除音效"
KillSoundWhenDoneBJ="刪除 ",~音效
KillSoundWhenDoneBJHint="如果音效正在播放則在播放結束時刪除."

SetSoundVolume="設置音效音量 [R]"
SetSoundVolume="設置 ",~音效," 的音量為 ",~Volume
SetSoundVolumeHint="音量取值範圍0-127."

SetSoundVolumeBJ="設置音效音量"
SetSoundVolumeBJ="設置 ",~音效," 的音量為 ",~Volume,"%"
SetSoundVolumeBJHint=

SetSoundPlayPosition="設置音效播放時間點 [R]"
SetSoundPlayPosition="設置 ",~音效," 的播放時間點為 ",~Offset," 毫秒"
SetSoundPlayPositionHint="音效必須是正在播放的. 不能用於3D音效."

SetSoundOffsetBJ="設置音效播放時間點"
SetSoundOffsetBJ="設置播放時間點為 ",~Offset," 秒對 ",~音效
SetSoundOffsetBJHint="音效必須是正在播放的. 不能用於3D音效."

SetSoundDistanceCutoffBJ="設置聲音截斷距離"
SetSoundDistanceCutoffBJ="設置 ",~音效," 的截斷距離為 ",~數值
SetSoundDistanceCutoffBJHint="地圖距離,玩家鏡頭距離音源超過該範圍則切斷聲音."

SetSoundPitchBJ="設置聲音速率"
SetSoundPitchBJ="設置 ",~音效," 的速率為 ",~數值
SetSoundPitchBJHint="表示正常速率的倍數."

AttachSoundToUnitBJ="綁定單位"
AttachSoundToUnitBJ="將 ",~3D音效," 綁定到 ",~單位
AttachSoundToUnitBJHint="該動作僅用於3D音效."

SetSoundPosition="設置3D音效位置(指定坐標) [R]"
SetSoundPosition="設置 ",~3D音效," 的播放位置為(",~X,",",~Y,"), Z軸高度為 ",~Z
SetSoundPosition="該動作僅用於3D音效."

SetSoundPositionLocBJ="設置3D音效位置(指定點)"
SetSoundPositionLocBJ="設置 ",~3D音效," 的播放位置為 ",~指定點," Z軸高度為 ",~Z
SetSoundPositionLocBJHint="該動作僅用於3D音效."

SetSoundDistances="設置3D音效衰減範圍"
SetSoundDistances="設置 ",~3D音效," 的衰減最小範圍: ",~數值," 最大範圍: ",~數值
SetSoundDistancesHint="該動作僅用於3D音效. 注意不一定要達到最大範圍,音量衰減到一定程度也會變沒的."

SetStackedSoundBJ="添加/刪除區域音效"
SetStackedSoundBJ=~Add/Remove," ",~3D音效," 到 ",~地區
SetStackedSoundBJHint="該動作僅用於3D音效."

SetAmbientDaySound="使用白天環境音效"
SetAmbientDaySound="使用 ",~Theme," 白天環境音效"
SetAmbientDaySoundHint=

SetAmbientNightSound="使用夜晚環境音效"
SetAmbientNightSound="使用 ",~Theme," 夜晚環境音效"
SetAmbientNightSoundHint=

EnableDawnDusk="允許/禁止晝夜交替音效"
EnableDawnDusk=~Enable/Disable," 晝夜交替音效"
EnableDawnDuskHint=

SetMapMusic="設置背景音樂列表 [R]"
SetMapMusic="設置背景音樂列表為: ",~Music," , ",~允許/禁止," 隨機播放, 開始播放序號為 ",~Index
SetMapMusicHint="可指定播放文件或播放目錄."

SetMapMusicIndexedBJ="設置背景音樂列表(指定播放)"
SetMapMusicIndexedBJ="設置背景音樂列表為: ",~Music," ,播放序號: ",~Index
SetMapMusicIndexedBJHint="可指定播放文件或播放目錄."

SetMapMusicRandomBJ="設置背景音樂列表(隨機播放)"
SetMapMusicRandomBJ="設置背景音樂列表為: ",~Music," ,隨機播放"
SetMapMusicRandomBJHint="可指定播放文件或播放目錄."

ClearMapMusicBJ="清空背景音樂列表"
ClearMapMusicBJ="清空背景音樂列表"
ClearMapMusicBJHint=
//PlayMusic
//PlayMusicEx

PlayMusicBJ="播放背景音樂"
PlayMusicBJ="播放 ",~背景音樂
PlayMusicBJHint=

PlayMusicExBJ="跳播背景音樂"
PlayMusicExBJ="播放 ",~背景音樂," ,跳過開始 ",~Offset," 秒,淡入時間: ",~Fade Time," 秒"
PlayMusicExBJHint=

StopMusicBJ="停止背景音樂"
StopMusicBJ="停止背景音樂 ",~After Fading/Immediately
StopMusicBJHint=

ResumeMusicBJ="恢復背景音樂"
ResumeMusicBJ="恢復背景音樂"
ResumeMusicBJHint=

SetMusicVolume="設置背景音樂音量 [R]"
SetMusicVolume="設置背景音樂音量為 ",~Volume
SetMusicVolumeHint="音量取值範圍為0-127."

SetMusicVolumeBJ="設置背景音樂音量"
SetMusicVolumeBJ="設置背景音樂音量為 ",~Volume,"%"
SetMusicVolumeBJHint=

SetMusicPlayPosition="設置背景音樂播放時間點 [R]"
SetMusicPlayPosition="設置當前背景音樂的播放時間點為 ",~Offset," 毫秒"
SetMusicPlayPositiontHint=

SetMusicOffsetBJ="設置背景音樂播放時間點"
SetMusicOffsetBJ="設置當前背景音樂的播放時間點為 ",~Offset," 秒"
SetMusicOffsetBJHint=

PlayThematicMusic="播放主題音樂 [C]"
PlayThematicMusic="播放 ",~Music Theme," 主題音樂"
PlayThematicMusicHint="播放主題音樂一次,然後恢復原來的音樂."

PlayThematicMusicBJ="播放主題音樂"
PlayThematicMusicBJ="播放 ",~Music Theme," 主題音樂"
PlayThematicMusicBJHint="播放主題音樂一次,然後恢復原來的音樂."

PlayThematicMusicEx="跳播主題音樂 [R]"
PlayThematicMusicEx="播放 ",~Music Theme," 主題音樂,跳過開始 ",~Offset," 毫秒"
PlayThematicMusicExBJHint="播放主題音樂一次,然後恢復原來的音樂."

PlayThematicMusicExBJ="跳播主題音樂"
PlayThematicMusicExBJ="播放 ",~Music Theme," 主題音樂,跳過開始 ",~Offset," 秒"
PlayThematicMusicExBJHint="播放主題音樂一次,然後恢復原來的音樂."

EndThematicMusic="停止主題音樂[C]"
EndThematicMusic="停止正在播放的主題音樂"
EndThematicMusicHint=

EndThematicMusicBJ="停止主題音樂"
EndThematicMusicBJ="停止正在播放的主題音樂"
EndThematicMusicBJHint=

SetThematicMusicPlayPosition="設置主題音樂播放時間點 [R]"
SetThematicMusicPlayPosition="設置當前主題音樂播放時間點為 ",~Offset," 毫秒"
SetThematicMusicPlayPositionHint=

SetThematicMusicOffsetBJ="設置主題音樂播放時間點"
SetThematicMusicOffsetBJ="設置當前主題音樂播放時間點為 ",~Offset," 秒"
SetThematicMusicOffsetBJHint=

VolumeGroupSetVolume="設置多通道音量 [R]"
VolumeGroupSetVolume="設置 ",~Volume Channel," 的音量為 ",~Volume
VolumeGroupSetVolumeHint="音量取值範圍0-1."

VolumeGroupSetVolumeBJ="設置多通道音量"
VolumeGroupSetVolumeBJ="設置 ",~Volume Channel," 的音量為 ",~Volume,"%"
VolumeGroupSetVolumeBJHint=

SetCineModeVolumeGroupsBJ="設置電影多通道音量環境"
SetCineModeVolumeGroupsBJ="設置多通道音量為電影模式"
SetCineModeVolumeGroupsBJHint=

SetSpeechVolumeGroupsBJ="設置語音多通道音量環境"
SetSpeechVolumeGroupsBJ="設置多通道音量為語音模式"
SetSpeechVolumeGroupsBJHint="語音模式即電影的播送單位消息功能."

VolumeGroupResetBJ="重置多通道音量"
VolumeGroupResetBJ="重置所有通道音量為預設值."
// Special Effect actions

AddSpecialEffectLocBJ="創建特效(指定點)"
AddSpecialEffectLocBJ="在 ",~指定點," 創建特效: ",~Model File
AddSpecialEffectLocBJHint=

AddSpecialEffectTargetUnitBJ="創建特效(綁定單位)"
AddSpecialEffectTargetUnitBJ="創建並綁定特效到 ",~Attachment Point," 對 ",~單位," ,使用模型: ",~Model File
AddSpecialEffectTargetUnitBJHint=

DestroyEffectBJ="刪除特效"
DestroyEffectBJ="刪除 ",~Special Effect
DestroyEffectBJHint=

YDWETimerDestroyEffect="計時器系統-刪除特效[YDWE]""
YDWETimerDestroyEffect="在 ",~時間," 秒後刪除 ",~特效
YDWETimerDestroyEffectHint="啟動中心計時器，在指定時間之後刪除特效。"
// Image actions
CreateImageBJ="創建"
CreateImageBJ="使用圖像: ",~Image," 大小: ",~Size," 創建點: ",~指定點," Z軸偏移: ",~Z," 圖像類型: ",~Type
CreateImageBJHint="使用'圖像 - 設置永久渲染狀態'才能顯示圖像. 創建點作為圖像的左下角位置. 該功能存在Bug,會在圖像上和右面多出256象素. 所以需要支持Alpha通道的圖像且上和右面最後一行像素為透明才能完美顯示."

DestroyImage="刪除"
DestroyImage="刪除 ",~圖像
DestroyImageHint=

ShowImage="顯示/隱藏 [R]"
ShowImage="設置 ",~Image," ",~Show/Hide
ShowImageHint=

ShowImageBJ="顯示/隱藏圖像"
ShowImageBJ=~Show/Hide," ",~Image
ShowImageBJHint=

SetImageConstantHeight="設置圖像高度"
SetImageConstantHeight="設置 ",~Image," ",~Enable/Disable," Z軸顯示,並設置高度為 ",~Height
SetImageConstantHeightHint="實際顯示高度為圖像高度+Z軸偏移. 只有允許Z軸顯示時才有效."

SetImagePosition="改變圖像位置(指定坐標) [R]"
SetImagePosition="改變 ",~Image," 的位置為(",~X,",",~Y,"),Z軸偏移為 ",~Z
SetImagePositionHint="指圖像的左下角位置."

SetImagePositionBJ="改變圖像位置(指定點)"
SetImagePositionBJ="改變 ",~Image," 的位置為 ",~Position," ,Z軸偏移為 ",~Z
SetImagePositionBJHint="指圖像的左下角位置."

SetImageColor="改變圖像顏色 [R]"
SetImageColor="設置 ",~Image," 的顏色值為(",~Red,",",~Green,",",~Blue,") Alpha值為 ",~Alpha
SetImageColorHint="顏色格式為(紅,綠,藍). Alpha值為0是不可見的. 顏色值和Alpha值取值範圍0-255."

SetImageColorBJ="改變圖像顏色"
SetImageColorBJ="設置 ",~Image," 的顏色值為(",~Red,"%, ",~Green,"%, ",~Blue,"%) 透明度為 ",~Transparency,"%"
SetImageColorBJHint="顏色格式為(紅,綠,藍). 透明度100%是不可見的."

SetImageRender="設置圖像渲染狀態"
SetImageRender="設置 ",~Image," : ",~Enable/Disable," 顯示狀態"
SetImageRenderHint="未發現有任何作用."

SetImageRenderAlways="設置圖像永久渲染狀態"
SetImageRenderAlways="設置 ",~Image," : ",~Enable/Disable," 永久顯示狀態"
SetImageRenderAlwaysHint="要顯示圖像則必須開啟該項."

SetImageAboveWater="圖像水面顯示狀態"
SetImageAboveWater="設置 ",~Image," : ",~Enable/Disable," 水面顯示, ",~Enable/Disable," 水的Alpha通道"
SetImageAboveWaterHint="前者設置圖像在水面或是水底顯示. 後者設置圖像是否受水的Alpha通道影響. "

SetImageType="改變圖像類型"
SetImageType="改變 ",~Image," 類型為 ",~Type
SetImageTypeHint=
// Player actions
SetPlayerState="設置屬性"
SetPlayerState="設置 ",~Player," 的 ",~Property," 為 ",~Value
SetPlayerStateHint=

AdjustPlayerStateBJ="增加屬性"
AdjustPlayerStateBJ="增加 ",~Value," ",~Player," 的 ",~Property
AdjustPlayerStateBJHint="使用負數來減少."

SetPlayerFlag="開啟/關閉 玩家參數 [R]"
SetPlayerFlag="設置 ",~Player," 屬性: ",~Player Flag," ",~On/Off
SetPlayerFlagHint="開啟玩家12的'給與獎勵'表示殺死玩家12單位會獲得金錢獎勵."

SetPlayerFlagBJ="開啟/關閉 玩家參數"
SetPlayerFlagBJ="設置 ",~Player Flag," ",~On/Off," 對 ",~Player
SetPlayerFlagBJHint=""開啟玩家12的'給與獎勵'表示殺死玩家12單位會獲得金錢獎勵."

SetPlayerTaxRate="設置稅率 [R]"
SetPlayerTaxRate="設置 ",~Player," 交納給 ",~Player," 的 ",~Resource," 所得稅為 ",~Rate," %"
SetPlayerTaxRateHint="繳納所得稅所損失的資源可以通過'玩家得分'的'稅務損失的黃金/木材'來獲取. 所得稅最高為100%. 且玩家1對玩家2和玩家3都交納80%所得稅.則玩家1採集黃金時將給玩家2 8黃金,玩家3 2黃金."

SetPlayerTaxRateBJ="設置稅率"
SetPlayerTaxRateBJ="設置 ",~Rate," %的 ",~Resource," 所得稅, ",~Player," 交納給 ",~Player
SetPlayerTaxRateBJHint="繳納所得稅所損失的資源可以通過'玩家得分'的'稅務損失的黃金/木材'來獲取. 所得稅最高為100%. 且玩家1對玩家2和玩家3都交納80%所得稅.則玩家1採集黃金時將給玩家2 8黃金,玩家3 2黃金."

SetPlayerTeam="設置玩家隊伍"
SetPlayerTeam="設置 ",~Player," 的隊伍為 ",~隊伍ID
SetPlayerTeamHint=

EnableCreepSleepBJ="允許/禁止 中立生物睡眠"
EnableCreepSleepBJ=~Enable/Disable," 中立生物睡眠"
EnableCreepSleepBJHint="隻影響夜晚的睡眠. 不影響催眠魔法."

SetPlayerAllianceStateBJ="設置聯盟狀態"
SetPlayerAllianceStateBJ="命令 ",~Player," 設置對 ",~Player," 的聯盟狀態為 ",~Alliance Setting
SetPlayerAllianceStateBJHint=

SetPlayerAlliance="設置聯盟狀態(指定項目) [R]"
SetPlayerAlliance="命令 ",~Player," 對 ",~Player," 設置 ",~Alliance Type," ",~On/Off
SetPlayerAllianceHint="注意:可以對玩家自己設置聯盟狀態. 可用來實現一些特殊效果."

SetPlayerAllianceBJ="設置聯盟狀態(指定項目)"
SetPlayerAllianceBJ="命令 ",~Player," 設置 ",~Alliance Type," ",~On/Off," 對 ",~Player
SetPlayerAllianceBJHint=

SetPlayerAbilityAvailable="允許/禁用 技能 [R]"
SetPlayerAbilityAvailable="設置 ",~Player," 的 ",~技能," 為 ",~Enable/Disable
SetPlayerAbilityAvailableHint="設置玩家能否使用該技能."

SetPlayerAbilityAvailableBJ="允許/禁用 技能"
SetPlayerAbilityAvailableBJ=~Enable/Disable," ",~技能," 對 ",~Player
SetPlayerAbilityAvailableBJHint="設置玩家能否使用該技能."

SetPlayerUnitAvailableBJ="設置單位可用性"
SetPlayerUnitAvailableBJ="設置 ",~單位類型," ",~Available/Unavailable," 對 ",~Player
SetPlayerUnitAvailableBJHint="設置玩家能否建造該單位."

SetPlayerUnitMaxAllowed="限制單位可建造數量"
SetPlayerUnitMaxAllowed="限制 ",~單位類型," 的可建造數量為 ",~Limit," 對 ",~Player
SetPlayerUnitMaxAllowedHint="-1為無限制,0為不能生產."

SetPlayerMaxHeroesAllowed="限制英雄數量"
SetPlayerMaxHeroesAllowed="限制英雄數量為 ",~Limit," 對 ",~Player
SetPlayerMaxHeroesAllowedHint="-1為無限制,0為不能生產."

SetPlayerTechResearchedSwap="設置科技等級"
SetPlayerTechResearchedSwap="設置 ",~科技," 的等級為 ",~Level," 對 ",~Player
SetPlayerTechResearchedSwapHint="科技等級不能倒退."

SetPlayerTechMaxAllowedSwap="設置最大科技等級"
SetPlayerTechMaxAllowedSwap="設置 ",~科技," 的等級為 ",~Level," 對 ",~Player
SetPlayerTechMaxAllowedSwapHint="科技等級不能倒退."

AddPlayerTechResearched="增加科技等級"
AddPlayerTechResearched="增加 ",~玩家," 的 ",~科技," 科技 ",~整數 ," 級"
AddPlayerTechResearchedHint="科技等級不能倒退。"

//SetPlayerTechResearched
//SetPlayerTechMaxAllowed

SetPlayerColor="改變玩家顏色 [R]"
SetPlayerColor="將 ",~Player," 的玩家顏色改為 ",~Color
SetPlayerColorHint="不改變現有單位的顏色."

SetPlayerColorBJ="改變玩家顏色"
SetPlayerColorBJ="將 ",~Player," 的玩家顏色改為 ",~Color," ,並 ",~Changing/Retaining color," 玩家單位顏色"
SetPlayerColorBJHint=

SetPlayerHandicap="設置生命上限 [R]"
SetPlayerHandicap="設置 ",~Player," 的生命障礙為正常的 ",~Percent,"倍"
SetPlayerHandicapHint="生命上限影響玩家擁有單位的生命最大值. 生命之書並不受生命上限限制,所以對英雄血量可能會有偏差."

SetPlayerHandicapBJ="設置生命上限"
SetPlayerHandicapBJ="設置 ",~Player," 的生命障礙為正常的 ",~Percent,"%"
SetPlayerHandicapBJHint="生命上限影響玩家擁有單位的生命最大值. 生命之書並不受生命上限限制,所以對英雄血量可能會有偏差."

SetPlayerOnScoreScreen="顯示/隱藏計分屏顯示 [R]"
SetPlayerOnScoreScreen="設置 ",~Player," ",~Show/Hide," 在計分屏的顯示."
SetPlayerOnScoreScreenHint=

SetPlayerOnScoreScreenBJ="顯示/隱藏計分屏顯示"
SetPlayerOnScoreScreenBJ=~Show/Hide," ",~Player," 在計分屏的顯示."
SetPlayerOnScoreScreenBJHint=

SetPlayerName="更改名字"
SetPlayerName="更改 ",~Player," 的名字為 ",~文字
SetPlayerNameHint=

RemovePlayer="踢除玩家"
RemovePlayer="踢除 ",~Player," ，玩家的遊戲結果為 ",~文字
RemovePlayerHint=

YDWEDisplayChat="模擬玩家聊天 [JAPI]"
YDWEDisplayChat="模擬 ",~Player," 在 ",~頻道," 發言: ",~文字
YDWEDisplayChatHint=

// Player Group actions
ForForceMultiple="選取玩家組內玩家做動作(多個動作)"
ForForceMultiple="選取 ",~玩家組," 內所有玩家做動作"
ForForceMultipleHint="玩家組動作中可使用'選取玩家'來獲取對應的玩家. 等待不能在組動作中運行."

ForForce="選取玩家組內玩家做動作"
ForForce="選取 ",~玩家組," 內所有玩家 ",~做動作
ForForceHint="玩家組動作中可使用'選取玩家'來獲取對應的玩家. 等待不能在組動作中運行."

ForceAddPlayer="添加玩家 [R]"
ForceAddPlayer=" ",~玩家組," 添加 ",~玩家
ForceAddPlayerHint="並不影響玩家本身."

ForceAddPlayerSimple="添加玩家"
ForceAddPlayerSimple="添加 ",~Player," 到 ",~玩家組
ForceAddPlayerSimpleHint="並不影響玩家本身."

ForceRemovePlayer="移除玩家 [R]"
ForceRemovePlayer="從 ",~玩家組," 中移除 ",~玩家
ForceRemovePlayerHint="並不影響玩家本身."

ForceRemovePlayerSimple="移除玩家"
ForceRemovePlayerSimple="將 ",~Player," 從 ",~玩家組," 移除"
ForceRemovePlayerSimpleHint="並不影響玩家本身."

ForceClear="清空玩家組"
ForceClear="清空 ",~玩家組," 內所有玩家"
ForceClearHint="並不影響玩家本身."

SetForceAllianceStateBJ="設置聯盟"
SetForceAllianceStateBJ="命令 ",~Player," 設置對 ",~Player," 的聯盟狀態為 ",~Alliance Setting
SetForceAllianceStateBJHint=

DestroyForce="刪除玩家組 [R]"
DestroyForce="刪除 ",~玩家組
DestroyForceHint="注意: 不要刪除系統預置的玩家組."
// Item actions
CreateItemLoc="創建"
CreateItemLoc="創建 ",~物品," 在 ",~指定點
CreateItemLocHint=

CreateItem="創建"
CreateItem="新建 ",~物品," 在(",~X,",",~Y,")"
CreateItemHint=

RemoveItem="刪除"
RemoveItem="刪除 ",~物品
RemoveItemHint=

YDWETimerRemoveItem="計時器系統-刪除物品[YDWE]""
YDWETimerRemoveItem="在 ",~時間," 秒後刪除 ",~物品
YDWETimerRemoveItemHint="啟動中心計時器，在指定時間之後刪除物品。"

YDWEItemAbilityStorage="物品屬性系統-添加技能給物品[YDWE]""
YDWEItemAbilityStorage="為 ",~物品類型," 添加 ",~技能
YDWEItemAbilityStorageHint="將技能添加給物品，英雄獲得物品後，會獲得額外的技能；這些技能會出現在單位身上，因此盡量不要添加帶有圖標的技能。"

SetItemVisible="顯示/隱藏 [R]"
SetItemVisible="設置 ",~物品," 的狀態為: ",~Show/Hide
SetItemVisibleHint="只對在地面的物品有效,不會影響在物品欄中的物品. 單位通過觸發得到一個隱藏物品時,會自動顯示該物品."

SetItemVisibleBJ="顯示/隱藏"
SetItemVisibleBJ=~Show/Hide," ",~物品
SetItemVisibleBJHint="只對在地面的物品有效,不會影響在物品欄中的物品. 單位通過觸發得到一個隱藏物品時,會自動顯示該物品."

SetItemPosition="移動物品到坐標(立即)(指定坐標) [R]"
SetItemPosition="移動 ",~物品," 到(",~X,",",~Y,")"
SetItemPositionHint=

SetItemPositionLoc="移動物品到指定點(立即)(指定點)"
SetItemPositionLoc="移動 ",~物品," 到 ",~指定點
SetItemPositionLocHint=

SetItemLifeBJ="設置物品生命值"
SetItemLifeBJ="設置 ",~物品," 的生命值為 ",~Value
SetItemLifeBJHint=

SetItemCharges="設置物品使用次數"
SetItemCharges="設置 ",~物品," 的使用次數為 ",~Charges
SetItemChargesHint="設置為0可以使物品能無限次使用."

SetItemInvulnerableBJ="設置物品無敵/可攻擊"
SetItemInvulnerableBJ="設置 ",~物品," ",~Invulnerable/Vulnerable
SetItemInvulnerableBJHint=

SetItemPawnable="設置物品可否抵押"
SetItemPawnable="設置 ",~物品," ",~Pawnable/Unpawnable
SetItemPawnableHint="不可抵押物品不能被賣到商店."

SetItemDroppableBJ="設置物品可否丟棄"
SetItemDroppableBJ="設置",~物品," ",~Droppable/Undroppable
SetItemDroppableBJHint="不可掉落物品在被撿起之後就不能移動和丟棄.(但可通過觸發實現)"

SetItemDropOnDeathBJ="設置物品死亡是否掉落"
SetItemDropOnDeathBJ="設置 ",~物品," ",~Drop from/Stay with," 在持有者死亡時"
SetItemDropOnDeathBJHint=

SetItemDropID="設置重生神符的產生單位類型"
SetItemDropID="設置 ",~物品," 產生 ",~單位類型
SetItemDropIDHint="設置重生神符對應的單位類型後，當英雄吃了重生神符，則會產生指定類型的單位。"

SetItemPlayerBJ="改變物品所屬玩家"
SetItemPlayerBJ="改變 ",~物品," 的所屬玩家為: ",~Player," 並 ",~Change/Retain Color
SetItemPlayerBJHint="不是所有物品都能改變顏色. 所屬玩家與持有者無關,默認為中立被動玩家."

SetItemUserData="設置物品自定義值"
SetItemUserData="設置 ",~物品," 的自定義值為 ",~Index
SetItemUserDataHint="物品自定義值只用於觸發器. 可以用來為物品綁定一個整型數據."

EnumItemsInRectBJMultiple="選取矩形區域內物品做動作(多個動作)"
EnumItemsInRectBJMultiple="選取 ",~矩形區域," 內所有物品做動作"
EnumItemsInRectBJMultipleHint="組動作中可使用'選取物品'來獲取對應的物品. 區域內每個物品都會運行一次動作(包括隱藏物品,不包括物品欄中的物品). 等待不能在組動作中運行."

EnumItemsInRectBJ="選取矩形區域內物品做動作"
EnumItemsInRectBJ="選取 ",~矩形區域," 內所有物品 ",~做動作
EnumItemsInRectBJHint="組動作中可使用'選取物品'來獲取對應的物品. 區域內每個物品都會運行一次動作(包括隱藏物品,不包括單位身上的物品). 等待不能在組動作中運行."


// Itempool actions
YDWECreateItemPool="創建物品池 [YDWE]"
YDWECreateItemPool="新建一個物品池"
YDWECreateItemPoolHint="新建一個物品池，該物品池可以被<最後創建的物品池>獲得。"

ItemPoolAddItemType="添加物品類型 [R]"
ItemPoolAddItemType="在 ",~物品池," 中添加一個 ",~物品," 比重為 ",~數值
ItemPoolAddItemTypeHint="比重越高被選擇的機率越大."

ItemPoolRemoveItemType="刪除物品類型 [R]"
ItemPoolRemoveItemType="從 ",~物品池," 中刪除 ",~物品
ItemPoolRemoveItemTypeHint=

PlaceRandomItem="選擇放置物品 [R]"
PlaceRandomItem="從 ",~物品池," 中任意選擇一個物品並放置到( ",~X," , ",~Y," )點"
PlaceRandomItemHint=

YDWEPlaceRandomItem="選擇放置物品 [YDWE]"
YDWEPlaceRandomItem="從 ",~物品池," 中選擇一個物品並放置到點( ",~X," , ",~Y," ) "
YDWEPlaceRandomItemHint="該物品可以被<最後從物品池中取出的物品>獲取。"

DestroyItemPool="刪除物品池 [R]"
DestroyItemPool="刪除 ",~物品池
DestroyItemPoolHint=

// Selection actions
ClearSelectionForPlayer="清空選擇(指定玩家)"
ClearSelectionForPlayer="清空 ",~Player," 的選擇"
ClearSelectionForPlayerHint="使玩家取消選擇所有已選單位."

SelectGroupForPlayerBJ="選擇單位組(指定玩家)"
SelectGroupForPlayerBJ="選擇 ",~單位組," 對 ",~Player
SelectGroupForPlayerBJHint="使玩家取消選擇所有單位,並選擇單位組中最多12個單位."

SelectUnitForPlayerSingle="選擇單位(指定玩家)"
SelectUnitForPlayerSingle="選擇 ",~單位," 對 ",~Player
SelectUnitForPlayerSingleHint="使玩家取消選擇所有單位,並選擇該單位."

SelectUnitAddForPlayer="添加選擇單位(指定玩家)"
SelectUnitAddForPlayer="添加選擇 ",~單位," 對 ",~Player
SelectUnitAddForPlayerHint="使玩家添加選擇該單位."

SelectUnitRemoveForPlayer="取消選擇單位(指定玩家)"
SelectUnitRemoveForPlayer="取消選擇 ",~單位," 對 ",~Player
SelectUnitRemoveForPlayerHint="使玩家取消選擇該單位."

ClearSelection="清空選擇(所有玩家)"
ClearSelection="清空所有玩家的選擇"
ClearSelectionHint="使玩家取消選擇所有已選單位."

SelectGroupBJ="選擇單位組(所有玩家)"
SelectGroupBJ="命令所有玩家選擇 ",~單位組
SelectGroupBJHint="使所有玩家取消選擇所有單位,並選擇單位組中最多12個單位."

SelectUnitSingle="選擇單位(所有玩家)"
SelectUnitSingle="命令所有玩家選擇 ",~單位
SelectUnitSingleHint="使玩家取消選擇所有已選單位,並選擇該單位."
//SelectUnit

SelectUnitAdd="添加選擇單位(所有玩家)"
SelectUnitAdd="命令所有玩家添加選擇 ",~單位
SelectUnitAddHint=

SelectUnitRemove="取消選擇單位(所有玩家)"
SelectUnitRemove="命令所有玩家取消選擇 ",~單位
SelectUnitRemoveHint=
// Hashtable actions
InitHashtableBJ="<1.24> 新建哈希表"
InitHashtableBJ="創建一個新的哈希表"
InitHashtableBJHint="您可以使用哈希表來儲存臨時數據"

InitHashtable="<1.24> 新建哈希表 [C]"
InitHashtable="創建一個新的哈希表"
InitHashtableHint="您可以使用哈希表來儲存臨時數據"

SaveRealBJ="<1.24> 保存實數"
SaveRealBJ="保存實數 ",~Value," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable," 之內"
SaveRealBJHint="使用 '哈希表 - 從哈希表提取實數' 可以取出保存的值"

SaveReal="<1.24> 保存實數 [C]"
SaveReal="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存實數 ",~Value
SaveRealHint="使用 '哈希表 - 從哈希表提取實數' 可以取出保存的值"

SaveIntegerBJ="<1.24> 保存整數"
SaveIntegerBJ="保存整數 ",~Value," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable," 之內"
SaveIntegerBJHint="使用 '哈希表 - 從哈希表提取整數' 可以取出保存的值"

SaveInteger="<1.24> 保存整數 [C]"
SaveInteger="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存整數 ",~Value
SaveIntegerHint="使用 '哈希表 - 從哈希表提取整數' 可以取出保存的值"

SaveBooleanBJ="<1.24> 保存布爾"
SaveBooleanBJ="保存布爾 ",~Value," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable," 之內"
SaveBooleanBJHint="使用 '哈希表 - 從哈希表提取布爾' 可以取出保存的值"

SaveBoolean="<1.24> 保存布爾 [C]"
SaveBoolean="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存布爾 ",~Value
SaveBooleanHint="使用 '哈希表 - 從哈希表提取布爾' 可以取出保存的值"

SaveStringBJ="<1.24> 保存字符串"
SaveStringBJ="保存字符串 ",~Value," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveStringBJHint="使用 '哈希表 - 從哈希表提取字符串' 可以取出保存的值"

SaveStr="<1.24> 保存字符串 [C]"
SaveStr="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存字符串 ",~Value
SaveStrHint="使用 '哈希表 - 從哈希表提取字符串' 可以取出保存的值"

SaveAgentHandle="<1.24> 保存實體對象 [C]"
SaveAgentHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存對象 ",~Value
SaveAgentHandleHint="實體對象即一切需要計算變量連接數的對象"

SavePlayerHandleBJ="<1.24> 保存玩家"
SavePlayerHandleBJ="保存玩家 ",~Player," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SavePlayerHandleBJHint="使用 '哈希表 - 從哈希表提取玩家' 可以取出保存的值"

SavePlayerHandle="<1.24> 保存玩家 [C]"
SavePlayerHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存玩家 ",~Value
SavePlayerHandleHint="使用 '哈希表 - 從哈希表提取玩家' 可以取出保存的值"

SaveWidgetHandleBJ="<1.24> 保存物體"
SaveWidgetHandleBJ="保存物體 ",~Widget," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveWidgetHandleBJHint="使用 '哈希表 - 從哈希表提取物體' 可以取出保存的值"

SaveWidgetHandle="<1.24> 保存物體 [C]"
SaveWidgetHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存物體 ",~Value
SaveWidgetHandleHint="使用 '哈希表 - 從哈希表提取物體' 可以取出保存的值"

SaveDestructableHandleBJ="<1.24> 保存可破壞物"
SaveDestructableHandleBJ="保存可破壞物 ",~Destructable," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveDestructableHandleBJHint="使用 '哈希表 - 從哈希表提取可破壞物' 可以取出保存的值"

SaveDestructableHandle="<1.24> 保存可破壞物 [C]"
SaveDestructableHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存可破壞物 ",~Value
SaveDestructableHandleHint="使用 '哈希表 - 從哈希表提取可破壞物' 可以取出保存的值"

SaveItemHandleBJ="<1.24> 保存物品"
SaveItemHandleBJ="保存物品 ",~Item," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveItemHandleBJHint="使用 '哈希表 - 從哈希表提取物品' 可以取出保存的值"

SaveItemHandle="<1.24> 保存物品 [C]"
SaveItemHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存物品 ",~Value
SaveItemHandleHint="使用 '哈希表 - 從哈希表提取物品' 可以取出保存的值"

SaveUnitHandleBJ="<1.24> 保存單位"
SaveUnitHandleBJ="保存單位 ",~Unit," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveUnitHandleBJHint="使用 '哈希表 - 從哈希表提取單位' 可以取出保存的值"

SaveUnitHandle="<1.24> 保存單位 [C]"
SaveUnitHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存單位 ",~Value
SaveUnitHandleHint="使用 '哈希表 - 從哈希表提取單位' 可以取出保存的值"

SaveAbilityHandleBJ="<1.24> 保存技能"
SaveAbilityHandleBJ="保存技能 ",~Ability," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveAbilityHandleBJHint="使用 '哈希表 - 從哈希表提取技能' 可以取出保存的值"

SaveAbilityHandle="<1.24> 保存技能 [C]"
SaveAbilityHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存技能 ",~Value
SaveAbilityHandleHint="使用 '哈希表 - 從哈希表提取技能' 可以取出保存的值"

YDWESaveAbilityHandleBJ="<1.24> 保存技能"
YDWESaveAbilityHandleBJ="保存技能 ",~Ability," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
YDWESaveAbilityHandleBJHint="使用 '哈希表 - 從哈希表提取技能' 可以取出保存的值"

YDWESaveAbilityHandle="<1.24> 保存技能 [C]"
YDWESaveAbilityHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存技能 ",~Value
YDWESaveAbilityHandleHint="使用 '哈希表 - 從哈希表提取技能' 可以取出保存的值"

SaveTimerHandleBJ="<1.24> 保存計時器"
SaveTimerHandleBJ="保存計時器 ",~Timer," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveTimerHandleBJHint="使用 '哈希表 - 從哈希表提取計時器' 可以取出保存的值"

SaveTimerHandle="<1.24> 保存計時器 [C]"
SaveTimerHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存計時器 ",~Value
SaveTimerHandleHint="使用 '哈希表 - 從哈希表提取計時器' 可以取出保存的值"

//SaveTriggerRegionHandleBJ="<1.24> 保存觸發區域(不規則)"
//SaveTriggerRegionHandleBJ="保存觸發區域(不規則) ",~Region," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
//SaveTriggerRegionHandleBJHint="使用 '哈希表 - 從哈希表提取觸發區域(不規則)' 可以取出保存的值"

//SaveTriggerRegionHandle="<1.24> 保存觸發區域(不規則) [C]"
//SaveTriggerRegionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存觸發區域(不規則) ",~Value
//SaveTriggerRegionHandleHint="使用 '哈希表 - 從哈希表提取觸發區域(不規則)' 可以取出保存的值"

SaveTriggerHandleBJ="<1.24> 保存觸發器"
SaveTriggerHandleBJ="保存觸發器 ",~Trigger," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveTriggerHandleBJHint="使用 '哈希表 - 從哈希表提取觸發器' 可以取出保存的值"

SaveTriggerHandle="<1.24> 保存觸發器 [C]"
SaveTriggerHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存觸發器 ",~Value
SaveTriggerHandleHint="使用 '哈希表 - 從哈希表提取觸發器' 可以取出保存的值"

SaveTriggerConditionHandleBJ="<1.24> 保存觸發條件"
SaveTriggerConditionHandleBJ="保存觸發條件 ",~Triggercondition," 在子索引 ",~Value," of ",~Value," 位於 ",~Hashtable,"  之內"
SaveTriggerConditionHandleBJHint="使用 '哈希表 - 從哈希表提取觸發條件' 可以取出保存的值"

SaveTriggerConditionHandle="<1.24> 保存觸發條件 [C]"
SaveTriggerConditionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存觸發條件 ",~Value
SaveTriggerConditionHandleHint="使用 '哈希表 - 從哈希表提取觸發條件' 可以取出保存的值"

SaveTriggerActionHandleBJ="<1.24> 保存觸發動作"
SaveTriggerActionHandleBJ="保存觸發動作 ",~Triggeraction," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveTriggerActionHandleBJHint="使用 '哈希表 - 從哈希表提取觸發動作' 可以取出保存的值"

SaveTriggerActionHandle="<1.24> 保存觸發動作 [C]"
SaveTriggerActionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存觸發動作 ",~Value
SaveTriggerActionHandleHint="使用 '哈希表 - 從哈希表提取觸發動作' 可以取出保存的值"

SaveTriggerEventHandleBJ="<1.24> 保存觸發事件"
SaveTriggerEventHandleBJ="保存觸發事件 ",~Event," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveTriggerEventHandleBJHint="使用 '哈希表 - 從哈希表提取觸發事件' 可以取出保存的值"

SaveTriggerEventHandle="<1.24> 保存觸發事件 [C]"
SaveTriggerEventHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存觸發事件 ",~Value
SaveTriggerEventHandleHint="使用 '哈希表 - 從哈希表提取觸發事件' 可以取出保存的值"

SaveForceHandleBJ="<1.24> 保存玩家組"
SaveForceHandleBJ="保存玩家組 ",~Force," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveForceHandleBJHint="使用 '哈希表 - 從哈希表提取玩家組' 可以取出保存的值"

SaveForceHandle="<1.24> 保存玩家組 [C]"
SaveForceHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存玩家組 ",~Value
SaveForceHandleHint="使用 '哈希表 - 從哈希表提取玩家組' 可以取出保存的值"

SaveGroupHandleBJ="<1.24> 保存單位組"
SaveGroupHandleBJ="保存單位組",~Group," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveGroupHandleBJHint="使用 '哈希表 - 從哈希表提取單位組' 可以取出保存的值"

SaveGroupHandle="<1.24> 保存單位組 [C]"
SaveGroupHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存單位組 ",~Value
SaveGroupHandleHint="使用 '哈希表 - 從哈希表提取單位組' 可以取出保存的值"

SaveLocationHandleBJ="<1.24> 保存點"
SaveLocationHandleBJ="保存點 ",~Location," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveLocationHandleBJHint="使用 '哈希表 - 從哈希表提取點' 可以取出保存的值"

SaveLocationHandle="<1.24> 保存點 [C]"
SaveLocationHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存點 ",~Value
SaveLocationHandleHint="使用 '哈希表 - 從哈希表提取點' 可以取出保存的值"

SaveRegionHandleBJ="<1.24> 保存區域(不規則)"
SaveRegionHandleBJ="保存區域(不規則) ",~Region," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveRegionHandleBJHint="使用 '哈希表 - 從哈希表提取區域(不規則)' 可以取出保存的值"

SaveRegionHandle="<1.24> 保存區域(不規則) [C]"
SaveRegionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存區域(不規則) ",~Value
SaveRegionHandleHint="使用 '哈希表 - 從哈希表提取區域(不規則)' 可以取出保存的值"

SaveRectHandleBJ="<1.24> 保存區域(矩型)"
SaveRectHandleBJ="保存區域(矩型) ",~Rect," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveRectHandleBJHint="使用 '哈希表 - 從哈希表提取區域(矩型)' 可以取出保存的值"

SaveRectHandle="<1.24> 保存區域(矩型) [C]"
SaveRectHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存區域(矩型) ",~Value
SaveRectHandleHint="使用 '哈希表 - 從哈希表提取區域(矩型)' 可以取出保存的值"

SaveBooleanExprHandleBJ="<1.24> 保存布爾表達式"
SaveBooleanExprHandleBJ="保存布爾表達式 ",~Boolexpr," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveBooleanExprHandleBJHint="使用 '哈希表 - 從哈希表提取布爾表達式' 可以取出保存的值"

SaveBooleanExprHandle="<1.24> 保存布爾表達式 [C]"
SaveBooleanExprHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存布爾表達式 ",~Value
SaveBooleanExprHandleHint="使用 '哈希表 - 從哈希表提取布爾表達式' 可以取出保存的值"

//SaveConditionFuncHandleBJ="<1.24> 保存條件表達式(Condition)"
//SaveConditionFuncHandleBJ="保存條件表達式(Condition) ",~Conditionfunc," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
//SaveConditionFuncHandleBJHint="使用 '哈希表 - 從哈希表提取條件表達式(Condition)' 可以取出保存的值"


//SaveFilterFuncHandleBJ="<1.24> 保存條件表達式(Filter)"
//SaveFilterFuncHandleBJ="保存條件表達式(Filter) ",~Filterfunc," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
//SaveFilterFuncHandleBJHint="使用 '哈希表 - 從哈希表提取條件表達式(Filter)' 可以取出保存的值"

SaveSoundHandleBJ="<1.24> 保存音效"
SaveSoundHandleBJ="保存音效 ",~Sound," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveSoundHandleBJHint="使用 '哈希表 - 從哈希表提取音效' 可以取出保存的值"

SaveSoundHandle="<1.24> 保存音效 [C]"
SaveSoundHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存音效 ",~Value
SaveSoundHandleHint="使用 '哈希表 - 從哈希表提取音效' 可以取出保存的值"

//SaveRaceHandleBJ="<1.24> 保存種族"
//SaveRaceHandleBJ="保存種族 ",~Race," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
//SaveRaceHandleBJHint="使用 '哈希表 - 從哈希表提取種族' 可以取出保存的值"

SaveEffectHandleBJ="<1.24> 保存特效"
SaveEffectHandleBJ="保存特效",~Effect," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveEffectHandleBJHint="使用 '哈希表 - 從哈希表提取特效' 可以取出保存的值"

SaveEffectHandle="<1.24> 保存特效 [C]"
SaveEffectHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存特效 ",~Value
SaveEffectHandleHint="使用 '哈希表 - 從哈希表提取特效' 可以取出保存的值"

SaveUnitPoolHandleBJ="<1.24> 保存單位池"
SaveUnitPoolHandleBJ="保存單位池 ",~Unitpool," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveUnitPoolHandleBJHint="使用 '哈希表 - 從哈希表提取單位池' 可以取出保存的值"

SaveUnitPoolHandle="<1.24> 保存單位池 [C]"
SaveUnitPoolHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存單位池 ",~Value
SaveUnitPoolHandleHint="使用 '哈希表 - 從哈希表提取單位池' 可以取出保存的值"

SaveItemPoolHandleBJ="<1.24> 保存物品池"
SaveItemPoolHandleBJ="保存物品池 ",~Itempool," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveItemPoolHandleBJHint="使用 '哈希表 - 從哈希表提取物品池' 可以取出保存的值"

SaveItemPoolHandle="<1.24> 保存物品池 [C]"
SaveItemPoolHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存物品池 ",~Value
SaveItemPoolHandleHint="使用 '哈希表 - 從哈希表提取物品池' 可以取出保存的值"

SaveQuestHandleBJ="<1.24> 保存任務"
SaveQuestHandleBJ="保存任務 ",~Quest," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveQuestHandleBJHint="使用 '哈希表 - 從哈希表提取任務' 可以取出保存的值"

SaveQuestHandle="<1.24> 保存任務 [C]"
SaveQuestHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存任務 ",~Value
SaveQuestHandleHint="使用 '哈希表 - 從哈希表提取任務' 可以取出保存的值"

SaveQuestItemHandleBJ="<1.24> 保存任務要求"
SaveQuestItemHandleBJ="保存任務要求 ",~Questitem," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveQuestItemHandleBJHint="使用 '哈希表 - 從哈希表提取任務要求' 可以取出保存的值"

SaveQuestItemHandle="<1.24> 保存任務要求 [C]"
SaveQuestItemHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存任務要求 ",~Value
SaveQuestItemHandleHint="使用 '哈希表 - 從哈希表提取任務要求' 可以取出保存的值"

SaveDefeatConditionHandleBJ="<1.24> 保存失敗條件"
SaveDefeatConditionHandleBJ="保存失敗條件 ",~Defeatcondition," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveDefeatConditionHandleBJHint="使用 '哈希表 - 從哈希表提取失敗條件' 可以取出保存的值"

SaveDefeatConditionHandle="<1.24> 保存失敗條件 [C]"
SaveDefeatConditionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存失敗條件 ",~Value
SaveDefeatConditionHandleHint="使用 '哈希表 - 從哈希表提取失敗條件' 可以取出保存的值"

SaveTimerDialogHandleBJ="<1.24> 保存計時器窗口"
SaveTimerDialogHandleBJ="保存計時器窗口 ",~Timerdialog," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveTimerDialogHandleBJHint="使用 '哈希表 - 從哈希表提取計時器窗口' 可以取出保存的值"

SaveTimerDialogHandle="<1.24> 保存計時器窗口 [C]"
SaveTimerDialogHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存計時器窗口 ",~Value
SaveTimerDialogHandleHint="使用 '哈希表 - 從哈希表提取計時器窗口' 可以取出保存的值"

SaveLeaderboardHandleBJ="<1.24> 保存排行榜"
SaveLeaderboardHandleBJ="保存排行榜 ",~Leaderboard," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveLeaderboardHandleBJHint="使用 '哈希表 - 從哈希表提取排行榜' 可以取出保存的值"

SaveLeaderboardHandle="<1.24> 保存排行榜 [C]"
SaveLeaderboardHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存排行榜 ",~Value
SaveLeaderboardHandleHint="使用 '哈希表 - 從哈希表提取排行榜' 可以取出保存的值"

SaveMultiboardHandleBJ="<1.24> 保存多面板"
SaveMultiboardHandleBJ="保存多面板 ",~Multiboard," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveMultiboardHandleBJHint="使用 '哈希表 - 從哈希表提取多面板' 可以取出保存的值"

SaveMultiboardHandle="<1.24> 保存多面板 [C]"
SaveMultiboardHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存多面板 ",~Value
SaveMultiboardHandleHint="使用 '哈希表 - 從哈希表提取多面板' 可以取出保存的值"

SaveMultiboardItemHandleBJ="<1.24> 保存多面板項目"
SaveMultiboardItemHandleBJ="保存多面板項目 ",~Multiboarditem," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveMultiboardItemHandleBJHint="使用 '哈希表 - 從哈希表提取多面板項目' 可以取出保存的值"

SaveMultiboardItemHandle="<1.24> 保存多面板項目 [C]"
SaveMultiboardItemHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存多面板項目 ",~Value
SaveMultiboardItemHandleHint="使用 '哈希表 - 從哈希表提取多面板項目' 可以取出保存的值"

SaveTrackableHandleBJ="<1.24> 保存可追蹤物"
SaveTrackableHandleBJ="保存可追蹤物 ",~Trackable," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveTrackableHandleBJHint="使用 '哈希表 - 從哈希表提取可追蹤物' 可以取出保存的值"

SaveTrackableHandle="<1.24> 保存可追蹤物 [C]"
SaveTrackableHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存可追蹤物 ",~Value
SaveTrackableHandleHint="使用 '哈希表 - 從哈希表提取可追蹤物' 可以取出保存的值"

SaveGameCacheHandleBJ="<1.24> 保存遊戲緩存"
SaveGameCacheHandleBJ="保存遊戲緩存 ",~Gamecache," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveGameCacheHandleBJHint="使用 '哈希表 - 從哈希表提取遊戲緩存' 可以取出保存的值"

SaveGameCacheHandle="<1.24> 保存遊戲緩存 [C]"
SaveGameCacheHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存遊戲緩存 ",~Value
SaveGameCacheHandleHint="使用 '哈希表 - 從哈希表提取遊戲緩存' 可以取出保存的值"

SaveDialogHandleBJ="<1.24> 保存對話框"
SaveDialogHandleBJ="保存對話框 ",~Dialog," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveDialogHandleBJHint="使用 '哈希表 - 從哈希表提取對話框' 可以取出保存的值"

SaveDialogHandle="<1.24> 保存對話框 [C]"
SaveDialogHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存對話框 ",~Value
SaveDialogHandleHint="使用 '哈希表 - 從哈希表提取對話框' 可以取出保存的值"

SaveButtonHandleBJ="<1.24> 保存對話框按鈕"
SaveButtonHandleBJ="保存對話框按鈕 ",~Button," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveButtonHandleBJHint="使用 '哈希表 - 從哈希表提取對話框按鈕' 可以取出保存的值"

SaveButtonHandle="<1.24> 保存對話框按鈕 [C]"
SaveButtonHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存對話框按鈕 ",~Value
SaveButtonHandleHint="使用 '哈希表 - 從哈希表提取對話框按鈕' 可以取出保存的值"

//SaveVersionHandleBJ="<1.24> 保存遊戲版本"
//SaveVersionHandleBJ="保存遊戲版本 ",~Version," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
//SaveVersionHandleBJHint="使用 '哈希表 - 從哈希表提取遊戲版本' 可以取出保存的值"

//SaveVersionHandle="<1.24> 保存遊戲版本 [C]"
//SaveVersionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存遊戲版本 ",~Value
//SaveVersionHandleHint="使用 '哈希表 - 從哈希表提取遊戲版本' 可以取出保存的值"

//SaveItemTypeHandleBJ="<1.24> 保存物品類別"
//SaveItemTypeHandleBJ="保存物品類別 ",~Itemtype," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
//SaveItemTypeHandleBJHint="使用 '哈希表 - 從哈希表提取物品類別' 可以取出保存的值"

SaveTextTagHandleBJ="<1.24> 保存漂浮文字"
SaveTextTagHandleBJ="保存漂浮文字 ",~Texttag," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveTextTagHandleBJHint="使用 '哈希表 - 從哈希表提取漂浮文字' 可以取出保存的值"

SaveTextTagHandle="<1.24> 保存漂浮文字 [C]"
SaveTextTagHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存漂浮文字 ",~Value
SaveTextTagHandleHint="使用 '哈希表 - 從哈希表提取漂浮文字' 可以取出保存的值"

SaveLightningHandleBJ="<1.24> 保存閃電效果"
SaveLightningHandleBJ="保存閃電效果 ",~Lightning," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveLightningHandleBJHint="使用 '哈希表 - 從哈希表提取閃電效果' 可以取出保存的值"

SaveLightningHandle="<1.24> 保存閃電效果 [C]"
SaveLightningHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存閃電效果 ",~Value
SaveLightningHandleHint="使用 '哈希表 - 從哈希表提取閃電效果' 可以取出保存的值"

SaveImageHandleBJ="<1.24> 保存圖像"
SaveImageHandleBJ="保存圖像 ",~Image," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveImageHandleBJHint="使用 '哈希表 - 從哈希表提取圖像' 可以取出保存的值"

SaveImageHandle="<1.24> 保存圖像 [C]"
SaveImageHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存圖像 ",~Value
SaveImageHandleHint="使用 '哈希表 - 從哈希表提取圖像' 可以取出保存的值"

SaveUbersplatHandleBJ="<1.24> 保存地面紋理變化"
SaveUbersplatHandleBJ="保存地面紋理變化 ",~Ubersplat," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveUbersplatHandleBJHint="使用 '哈希表 - 從哈希表提取地面紋理變化' 可以取出保存的值"

SaveUbersplatHandle="<1.24> 保存地面紋理變化 [C]"
SaveUbersplatHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存地面紋理變化 ",~Value
SaveUbersplatHandleHint="使用 '哈希表 - 從哈希表提取地面紋理變化' 可以取出保存的值"

SaveFogStateHandleBJ="<1.24> 保存迷霧狀態"
SaveFogStateHandleBJ="保存迷霧狀態 ",~Fogstate," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveFogStateHandleBJHint="使用 '哈希表 - 從哈希表提取迷霧狀態' 可以取出保存的值"

SaveFogStateHandle="<1.24> 保存迷霧狀態 [C]"
SaveFogStateHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存迷霧狀態 ",~Value
SaveFogStateHandleHint="使用 '哈希表 - 從哈希表提取迷霧狀態' 可以取出保存的值"

SaveFogModifierHandleBJ="<1.24> 保存可見度修正器"
SaveFogModifierHandleBJ="保存可見度修正器 ",~Fogmodifier," 在子索引 ",~Value," 主索引 ",~Value," 位於 ",~Hashtable,"  之內"
SaveFogModifierHandleBJHint="使用 '哈希表 - 從哈希表提取可見度修正器' 可以取出保存的值"

SaveFogModifierHandle="<1.24> 保存可見度修正器 [C]"
SaveFogModifierHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存可見度修正器 ",~Value
SaveFogModifierHandleHint="使用 '哈希表 - 從哈希表提取可見度修正器' 可以取出保存的值"

SaveHashtableHandle="<1.24> 保存哈希表 [C]"
SaveHashtableHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 中保存哈希表 ",~Value
SaveHashtableHandleHint="使用 '哈希表 - 從哈希表提取哈希表' 可以取出保存的值"

RemoveSavedInteger="<1.24> 清除整數 [C]"
RemoveSavedInteger="清除位於哈希表 ",~hashtable," 主索引 ",~Value," 子索引 ",~Value," 中保存的整數"
RemoveSavedIntegerHint="可以清除單項數據"

RemoveSavedReal="<1.24> 清除實數 [C]"
RemoveSavedReal="清除位於哈希表 ",~hashtable," 主索引 ",~Value," 子索引 ",~Value," 中保存的實數"
RemoveSavedRealHint="可以清除單項數據"

RemoveSavedString="<1.24> 清除字符串 [C]"
RemoveSavedString="清除位於哈希表 ",~hashtable," 主索引 ",~Value," 子索引 ",~Value," 中保存的字符串"
RemoveSavedStringHint="可以清除單項數據"

RemoveSavedBoolean="<1.24> 清除布爾 [C]"
RemoveSavedBoolean="清除位於哈希表 ",~hashtable," 主索引 ",~Value," 子索引 ",~Value," 中保存的布爾"
RemoveSavedBooleanHint="可以清除單項數據"

RemoveSavedHandle="<1.24> 清除Handle [C]"
RemoveSavedHandle="清除位於哈希表 ",~hashtable," 主索引 ",~Value," 子索引 ",~Value," 中保存的Handle"
RemoveSavedHandleHint="可以清除單項數據"

FlushParentHashtableBJ="<1.24> 清空哈希表"
FlushParentHashtableBJ="<1.24> 清空 ",~Hashtable
FlushParentHashtableBJHint="清空哈希表所有數據"

FlushParentHashtable="<1.24> 清空哈希表 [C]"
FlushParentHashtable="清空 ",~Hashtable
FlushParentHashtableHint="清空哈希表所有數據"

FlushChildHashtableBJ="<1.24> 清空哈希表主索引"
FlushChildHashtableBJ="<1.24> 清空 ",~Value," 位於 ",~Hashtable,"  之內"
FlushChildHashtableBJHint="清空哈希表主索引下的所有數據"

FlushChildHashtable="<1.24> 清空哈希表主索引 [C]"
FlushChildHashtable="清空 ",~Hashtable," 中位於主索引 ",~Value,"  之內的所有數據"
FlushChildHashtableHint="清空哈希表主索引下的所有數據"
// Hero actions
SelectHeroSkill="學習技能"
SelectHeroSkill="命令 ",~Hero," 學習技能 ",~Skill
SelectHeroSkillHint="只有當英雄有剩餘技能點時有效."

SetHeroLevelNT="提升等級 [R]"
SetHeroLevelNT="提升 ",~Hero," 的英雄等級到 ",~Level," , ",~Show/Hide," 升級動畫"
SetHeroLevelNTHint="只能提升等級. 英雄經驗將重置為該等級的初始值."

UnitStripHeroLevel="降低等級 [R]"
UnitStripHeroLevel="降低 ",~Hero," ",~Level," 個等級"
UnitStripHeroLevelHint="只能降低等級. 英雄經驗將重置為該等級的初始值."

SetHeroLevel="設置等級"
SetHeroLevel="設置 ",~Hero," 的英雄等級為 ",~Level," , ",~Show/Hide," 升級動畫"
SetHeroLevelHint="如果等級有變動,英雄經驗將重置為該等級的初始值."

SetHeroXP="設置經驗值"
SetHeroXP="設置 ",~Hero," 的經驗值為 ",~Quantity," , ",~Show/Hide," 升級動畫"
SetHeroXPHint="經驗值不能倒退."

AddHeroXP="增加經驗值 [R]"
AddHeroXP="增加 ",~Hero," ",~Quantity," 點經驗值, ",~Show/Hide," 升級動畫"
AddHeroXPHint="經驗值不能倒退."

AddHeroXPSwapped="增加經驗值"
AddHeroXPSwapped="增加 ",~Quantity," 經驗值給 ",~Hero," , ",~Show/Hide," 升級動畫"
AddHeroXPSwappedHint="經驗值不能倒退."

SuspendHeroXP="允許/禁止經驗獲取 [R]"
SuspendHeroXP=~Enable/Disable," ",~Hero," 的經驗獲取"
SuspendHeroXPHint=

SuspendHeroXPBJ="允許/禁止經驗獲取"
SuspendHeroXPBJ=~Enable/Disable," ",~Hero," 的經驗獲取"
SuspendHeroXPBJHint=

SetPlayerHandicapXP="設置經驗獲得率 [R]"
SetPlayerHandicapXP="設置 ",~Player," 的經驗獲得率為正常的 ",~Value," 倍"
SetPlayerHandicapXPHint=

SetPlayerHandicapXPBJ="設置經驗獲得率"
SetPlayerHandicapXPBJ="設置 ",~Player," 的經驗獲得率為 ",~Percent,"%"
SetPlayerHandicapXPBJHint=

ReviveHero="立即復活(指定坐標) [R]"
ReviveHero="立即復活 ",~英雄," 在(",~X,",",~Y,"), ",~Show/Hide," 復活動畫"
ReviveHeroHint="如果英雄正在祭壇復活,則會退回部分花費(默認為100%)."

ReviveHeroLoc="立即復活(指定點)"
ReviveHeroLoc="立即復活 ",~英雄," 在 ",~指定點," , ",~Show/Hide," 復活動畫"
ReviveHeroLocHint="如果英雄正在祭壇復活,則會退回部分花費(默認為100%)."

SetHeroStr="設置英雄力量 [R]"
SetHeroStr="設置 ",~英雄," 的力量為 ",~Value," ,(",~Permanent,"永久獎勵)"
SetHeroStrHint="永久獎勵貌似無效項,不需要理會."

SetHeroAgi="設置英雄敏捷 [R]"
SetHeroAgi="設置 ",~英雄," 的敏捷為 ",~Value," ,(",~Permanent,"永久獎勵)"
SetHeroAgiHint="永久獎勵貌似無效項,不需要理會."

SetHeroInt="設置英雄智力 [R]"
SetHeroInt="設置 ",~英雄," 的智力為 ",~Value," ,(",~Permanent,"永久獎勵)"
SetHeroIntHint="永久獎勵貌似無效項,不需要理會."

ModifyHeroStat="修改英雄屬性"
ModifyHeroStat="修改 ",~Attribute," 對 ",~英雄," : ",~Modify," ",~Value," 點"
ModifyHeroStatHint=

UnitModifySkillPoints="添加剩餘技能點 [R]"
UnitModifySkillPoints="增加 ",~英雄," ",~Value," 點剩餘技能點"
UnitModifySkillPointsHint=

ModifyHeroSkillPoints="修改剩餘技能點"
ModifyHeroSkillPoints="修改 ",~英雄," 的剩餘技能點: ",~Modify," ",~Value," 點"
ModifyHeroSkillPointsHint=

SetReservedLocalHeroButtons="保留英雄圖標"
SetReservedLocalHeroButtons="為玩家保留 ",~Number," 個左上角英雄圖標."
SetReservedLocalHeroButtonsHint="因為共享單位而被控制的其他玩家英雄的圖標將在保留位置之後開始顯示."

UnitAddItem="給予物品 [R]"
UnitAddItem="給予 ",~單位," ",~物品
UnitAddItemHint=

UnitAddItemSwapped="給予物品"
UnitAddItemSwapped="把 ",~物品," 給 ",~單位
UnitAddItemSwappedHint=

UnitAddItemByIdSwapped="創建物品給英雄"
UnitAddItemByIdSwapped="創建 ",~物品類型," 給 ",~單位
UnitAddItemByIdSwappedHint=

UnitAddItemToSlotById="新建物品到指定物品欄 [R]"
UnitAddItemToSlotById="給予 ",~單位," ",~物品類型," 並放在物品欄# ",~數值
UnitAddItemToSlotByIdHint="注意: 物品欄編號從0-5,而不是1-6. 該動作創建的物品不被'最後創建的物品'所記錄."

UnitRemoveItemSwapped="丟棄物品(指定物品)"
UnitRemoveItemSwapped="丟棄 ",~物品," ,從 ",~單位," 身上"
UnitRemoveItemSwappedHint="物品將被丟棄在英雄腳下."

UnitRemoveItemFromSlotSwapped="丟棄物品(指定物品欄)"
UnitRemoveItemFromSlotSwapped="丟棄物品欄中第 ",~Index," 格的物品,從 ",~單位," 身上"
UnitRemoveItemFromSlotSwappedHint="如果物品存在則會被丟棄在英雄腳下."

UnitUseItem="使用物品(無目標)"
UnitUseItem="命令 ",~單位," 使用 ",~物品
UnitUseItemHint=

UnitUseItemPoint="使用物品(指定坐標)"
UnitUseItemPoint="命令 ",~單位," 使用 ",~物品," ,目標坐標:(",~X,",",~Y,")"
UnitUseItemPointHint=

UnitUseItemPointLoc="使用物品(指定點)"
UnitUseItemPointLoc="命令 ",~單位," 使用 ",~物品," ,目標點: ",~指定點
UnitUseItemPointLocHint=

UnitUseItemTarget="使用物品(對單位)"
UnitUseItemTarget="命令 ",~單位," 使用 ",~物品," ,目標: ",~單位
UnitUseItemTargetHint=

UnitUseItemDestructable="使用物品(對可破壞物)"
UnitUseItemDestructable="命令 ",~單位," 使用 ",~物品," ,目標: ",~可破壞物
UnitUseItemDestructableHint=
// Game actions

BJDebugMsg="顯示Debug消息 [C]"
BJDebugMsg="顯示Debug信息: ",~文字
BJDebugMsgHint="對玩家發送持續60秒的信息. 一般用於地圖調試."

DisplayTextToPlayer="對玩家顯示文本消息(自動限時) [R]"
DisplayTextToPlayer="對 ",~玩家," 在屏幕位移(",~X,",",~Y,")處顯示文本: ",~文字
DisplayTextToPlayerHint="顯示時間取決於文字長度. 位移的取值在0-1之間. 可使用'本地玩家'實現對所有玩家發送消息."

DisplayTimedTextToPlayer="對玩家顯示文本消息(指定時間) [R]"
DisplayTimedTextToPlayer="對 ",~玩家," 在屏幕位移(",~X,",",~Y,")處顯示 ",~時間," 秒的文本信息: ",~文字
DisplayTimedTextToPlayerHint="位移的取值在0-1之間. 可使用'本地玩家[R]'實現對所有玩家發送消息."

DisplayTextToForce="對玩家組顯示文本消息(自動限時)"
DisplayTextToForce="對 ",~玩家組," 發送文本信息: ",~文字
DisplayTextToForceHint="顯示時間取決於文字長度."

DisplayTimedTextToForce="對玩家組顯示文本消息(指定時間)"
DisplayTimedTextToForce="對 ",~玩家組," 發送顯示 ",~Time," 秒的文本信息: ",~文字
DisplayTimedTextToForceHint=

ClearTextMessages="清空文本信息(所有玩家) [R]"
ClearTextMessages="清空玩家屏幕上的文本信息"
ClearTextMessagesHint=

ClearTextMessagesBJ="清空文本信息(指定玩家組)"
ClearTextMessagesBJ="清空 ",~玩家組," 屏幕上的文本信息"
ClearTextMessagesBJHint=

PauseGame="暫停/恢復遊戲 [R]"
PauseGame=~暫停/恢復," 遊戲"
PauseGameHint=

PauseGameOn="暫停遊戲"
PauseGameOn="暫停遊戲"
PauseGameOnHint=

PauseGameOff="恢復遊戲"
PauseGameOff="恢復遊戲"
PauseGameOffHint=

SetGameSpeed="設定遊戲速度"
SetGameSpeed="設定遊戲速度為 ",~Speed
SetGameSpeedHint="你可以通過'遊戲 - 鎖定遊戲速度'動作來鎖定遊戲速度."

LockGameSpeedBJ="鎖定遊戲速度"
LockGameSpeedBJ="鎖定遊戲速度"
LockGameSpeedBJHint="使用該動作後無法改變遊戲速度."

UnlockGameSpeedBJ="解除鎖定遊戲速度"
UnlockGameSpeedBJ="解除鎖定遊戲速度"
UnlockGameSpeedBJHint="解除'遊戲 - 鎖定遊戲速度'對遊戲速度的鎖定."

SetMapFlag="設置地圖參數"
SetMapFlag="設置 ",~Map Flag," 為 ",~On/Off
SetMapFlagHint=

SetGameDifficulty="設置遊戲難度 [R]"
SetGameDifficulty="設置當前遊戲難度為 ",~GameDifficulty
SetGameDifficultyHint="遊戲難度只是作為運行AI的一個參考值,沒有AI的地圖該功能無用."

//SetFloatGameState
//SetTimeOfDayScale
//SuspendTimeOfDay

SetTimeOfDay="設置遊戲時間"
SetTimeOfDay="設置遊戲時間為 ",~Time
SetTimeOfDayHint="遊戲時間採用24小時制."

SetTimeOfDayScale="設置晝夜時間流逝速度 [R]"
SetTimeOfDayScale="設置晝夜時間流逝速度為默認值的 ",~Value,"倍"
SetTimeOfDayScaleHint="設置100%來恢復正常值. 該值並不影響遊戲速度."

SetTimeOfDayScalePercentBJ="設置晝夜時間流逝速度"
SetTimeOfDayScalePercentBJ="設置晝夜時間流逝速度為默認值的 ",~Percent,"%"
SetTimeOfDayScalePercentBJHint="設置100%來恢復正常值. 該值並不影響遊戲速度."

UseTimeOfDayBJ="開啟/關閉 晝夜交替"
UseTimeOfDayBJ=~On/Off," 晝夜交替"
UseTimeOfDayBJHint=

DoNotSaveReplay="關閉遊戲錄像功能 [R]"
DoNotSaveReplay="關閉遊戲錄像功能"
DoNotSaveReplayHint="遊戲結束時不保存遊戲錄像."

Cheat="輸入作弊碼 [R]"
Cheat="輸入作弊碼: ",~String
CheatHint="作弊碼只在單機有效."

ShareEverythingWithTeam="共享視野和完全控制權"
ShareEverythingWithTeam="設置 ",~Player," 對盟友共享視野和完全控制權"
ShareEverythingWithTeamHint="當玩家互相為盟友時才有效. 同時玩家也會獲得其盟友的單位控制權."

MakeUnitsPassiveForPlayer="設置玩家單位為中立受害單位"
MakeUnitsPassiveForPlayer="改變 ",~Player," 所有單位為中立受害單位"
MakeUnitsPassiveForPlayerHint="默認狀態中立受害受所有玩家欺凌而不抵抗."


CustomVictoryBJ="遊戲勝利"
CustomVictoryBJ="設置 ",~Player," 勝利(",~Show/Skip," 勝利對話框, ",~Show/Skip," 計分屏)"
CustomVictoryBJHint=

CustomDefeatBJ="遊戲失敗"
CustomDefeatBJ="設置 ",~Player," 失敗並顯示失敗信息: ",~文字
CustomDefeatBJHint=

SetNextLevelBJ="設置下一關卡"
SetNextLevelBJ="設置下一關卡為 ",~Level
SetNextLevelBJHint="設置遊戲結束後的下一關卡."

ChangeLevel="切換關卡 [R]"
ChangeLevel="切換到關卡: ",~Filename," (",~Show/Skip," 計分屏)"
ChangeLevelHint=


SaveGame="保存進度 [R]"
SaveGame="保存遊戲進度為: ",~Filename
SaveGameHint=

LoadGameBJ="讀取進度"
LoadGameBJ="讀取遊戲進度 ",~Filename," (",~Show/Skip," 計分屏)"
LoadGameBJHint=

SaveAndLoadGameBJ="保存並讀取進度"
SaveAndLoadGameBJ="保存遊戲進度為: ",~Filename," 並讀取進度: ",~Filename," (",~Show/Skip," 計分屏)"
SaveAndLoadGameBJHint=

SaveAndChangeLevelBJ="保存並切換關卡"
SaveAndChangeLevelBJ="保存遊戲進度為: ",~Filename," 並切換到關卡: ",~Filename," (",~Show/Skip," 計分屏)"
SaveAndChangeLevelBJHint=

RenameSaveDirectoryBJ="重命名存檔文件夾"
RenameSaveDirectoryBJ="更改 ",~源文件夾," 的名字為 ",~目標文件夾
RenameSaveDirectoryBJHint=

RemoveSaveDirectoryBJ="刪除存檔文件夾"
RemoveSaveDirectoryBJ="刪除 ",~文件夾
RemoveSaveDirectoryBJHint="文件夾內的內容都會被刪除."

CopySaveGameBJ="複製存檔文件"
CopySaveGameBJ="複製 ",~源文件," 並保存為 ",~目標文件
CopySaveGameBJHint="該動作只在響應'保存/讀取進度'時有效,每個事件中最多能用16次."

SetCampaignMenuRaceBJ="設置戰役背景"
SetCampaignMenuRaceBJ="設置戰役背景為 ",~Campaign
SetCampaignMenuRaceBJHint=

SetMissionAvailableBJ="允許/禁止 關卡"
SetMissionAvailableBJ=~Enable/Disable," ",~Mission
SetMissionAvailableBJHint=

SetCampaignAvailableBJ="允許/禁止 戰役"
SetCampaignAvailableBJ=~Enable/Disable,"  ",~Campaign
SetCampaignAvailableBJHint=

SetCinematicAvailableBJ="允許/禁止 開場電影"
SetCinematicAvailableBJ=~Enable/Disable," ",~Cinematic
SetCinematicAvailableBJHint=

ShowCustomCampaignButton="顯示/隱藏 自定義戰役按鈕"
ShowCustomCampaignButton=~Show/Hide," 自定義戰役按鈕 #",~Number
ShowCustomCampaignButtonHint=

DisableRestartMission="禁用 重新開始任務按鈕"
DisableRestartMission="設置 重新開始任務按鈕可以點擊為 ",~
DisableRestartMissionHint="當單人遊戲時，可以設置重新開始任務按鈕能否允許點擊。"

SetAllyColorFilterState="設置聯盟顏色顯示"
SetAllyColorFilterState="設置聯盟顏色顯示狀態為 ",~State
SetAllyColorFilterStateHint="0為不開啟. 1為小地圖顯示. 2為小地圖和遊戲都顯示. 相當於遊戲中Alt+A功能."

SetCreepCampFilterState="設置小地圖中立生物顯示"
SetCreepCampFilterState="小地圖 "~Show/Hide," 中立生物"
SetCreepCampFilterStateHint="相當於遊戲中Alt+R功能."

EnableMinimapFilterButtons="允許/禁用小地圖按鈕"
EnableMinimapFilterButtons=~Enable/Disable," 聯盟顏色顯示按鈕, ",~Enable/Disable," 中立生物顯示按鈕"
EnableMinimapFilterButtonsHint=

EnableSelect="允許/禁用選擇"
EnableSelect=~Enable/Disable," 選擇和取消選擇功能 (",~Enable/Disable," 顯示選擇圈)"
EnableSelectHint="禁用選擇後仍可以通過觸發來選擇物體. 只有允許選擇功能時才會顯示選擇圈."

EnableDragSelect="允許/禁用框選"
EnableDragSelect=~Enable/Disable," 框選功能 (",~Enable/Disable," 顯示選擇框)"
EnableDragSelectHint=

EnablePreSelect="允許/禁用預選"
EnablePreSelect=~Enable/Disable," 預選功能 (",~Enable/Disable," 顯示預選圈,生命槽,物體信息)"
EnablePreSelectHint=

ForceUIKeyBJ="強制按鍵"
ForceUIKeyBJ="命令 ",~Player," 按下 ",~Key," 鍵"
ForceUIKeyBJHint=

ForceUICancelBJ="強制按Esc鍵"
ForceUICancelBJ="命令 ",~Player," 按下Esc鍵"
ForceUICancelBJHint=


//PreloadStart
//PreloadRefresh
//PreloadEndEx
//PreloadGenClear
//PreloadGenStart
//PreloadGenEnd

Preload="預載文件"
Preload="預載 ",~文件
PreloadHint="可以事先載入文件並調入到遊戲內存,以加快遊戲的速度."

PreloadEnd="開始預載"
PreloadEnd="開始預載, 超時設置 ",~Time," 秒"
PreloadEndHint="將文件調入到遊戲內存中."

Preloader="批量預載"
Preloader="預載所有在 ",~文件," 中列出的文件"
PreloaderHint=

// Game Cache actions

InitGameCacheBJ="創建遊戲緩存"
InitGameCacheBJ="創建遊戲緩存,使用文件名: ",~Filename
InitGameCacheBJHint=

SaveGameCacheBJ="本地保存遊戲緩存"
SaveGameCacheBJ="保存 ",~Game Cache," 到本地硬盤"
SaveGameCacheBJHint="只對單機遊戲有效,保存緩存數據到本地硬盤,主要用來實現戰役關卡間的數據傳遞."

StoreUnitBJ="記錄單位"
StoreUnitBJ="記錄 ",~單位," ,使用名稱: ",~文字," 類別名: ",~Category," 緩存: ",~Game Cache
StoreUnitBJHint="使用'遊戲緩存 - 讀取單位'來讀取該數值. 名稱和類別名不能包含空格."

StoreReal="記錄實數"
StoreReal="緩存: ",~Game Cache,"  類別名: ",~Category," 使用名稱: ",~文字," 記錄: ",~實數
StoreRealHint="使用'遊戲緩存 - 讀取實數'來讀取該數值. 名稱和類別名不能包含空格."

StoreInteger="記錄整數"
StoreInteger="緩存: ",~Game Cache,"  類別名: ",~Category," 使用名稱: ",~文字," 記錄: ",~整數
StoreIntegerHint="使用'遊戲緩存 - 讀取整數'來讀取該數值. 名稱和類別名不能包含空格."

StoreBoolean="記錄布爾值"
StoreBoolean="緩存: ",~Game Cache,"  類別名: ",~Category," 使用名稱: ",~文字," 記錄: ",~布爾值
StoreBooleanHint="使用'遊戲緩存 - 讀取布爾值'來讀取該值. 名稱和類別名不能包含空格."

StoreString="記錄字符串"
StoreString="緩存: ",~Game Cache,"  類別名: ",~Category," 使用名稱: ",~文字," 記錄: ",~字符串
StoreStringHint="使用'遊戲緩存 - 讀取字符串'來讀取該值. 名稱和類別名不能包含空格."

RestoreUnitLocFacingAngleBJ="讀取單位(面向角度)"
RestoreUnitLocFacingAngleBJ="從緩存讀取單位, 名稱: ",~文字," 類別名: ",~Category," 緩存: ",~Game Cache," ,所屬玩家: ",~Player," 創建點: ",~點," 面向角度: ",~Angle
RestoreUnitLocFacingAngleBJHint="使用'最後讀取的單位'來獲取該單位. 如果不存在該緩存數據,則'最後讀取的單位'將被設為null."

RestoreUnitLocFacingPointBJ="讀取單位(面向點)"
RestoreUnitLocFacingPointBJ="從緩存讀取單位, 名稱: ",~文字," 類別名: ",~Category," 緩存: ",~Game Cache," ,所屬玩家: ",~Player," 創建點: ",~點," 面向: ",~指定點
RestoreUnitLocFacingPointBJHint="使用'最後讀取的單位'來獲取該單位. 如果不存在該緩存數據,則'最後讀取的單位'將被設為null."

ReloadGameCachesFromDisk="讀取本地緩存數據"
ReloadGameCachesFromDisk="從本地硬盤讀取緩存數據"
ReloadGameCachesFromDiskHint="只對單機遊戲有效,從本地硬盤讀取緩存數據,主要用來實現戰役關卡間的數據傳遞."

FlushGameCacheBJ="刪除緩存"
FlushGameCacheBJ="刪除 ",~GameCache
FlushGameCacheBJHint="刪除並清空該緩存的所有數據."

FlushStoredMission="刪除類別"
FlushStoredMission="刪除緩存 ",~GameCache," 中 ",~Category," 類別"
FlushStoredMissionHint="清空該類別下的所有緩存數據."



// Melee Game actions
MeleeStartingVisibility="使用對戰晝夜設置"
MeleeStartingVisibility="使用對戰晝夜設置"
MeleeStartingVisibilityHint=

MeleeStartingHeroLimit="英雄限制"
MeleeStartingHeroLimit="使用對戰英雄設置"
MeleeStartingHeroLimitHint="每個對戰英雄只能建造1個. 最大英雄數量為3."

MeleeGrantHeroItems="英雄初始物品"
MeleeGrantHeroItems="給首發英雄一個回城卷軸"
MeleeGrantHeroItemsHint=

MeleeStartingResources="設置初始資源"
MeleeStartingResources="設置初始資源"
MeleeStartingResourcesHint=

MeleeClearExcessUnits="刪除多餘單位"
MeleeClearExcessUnits="刪除已使用開始點附近的中立生物"
MeleeClearExcessUnitsHint=

MeleeStartingUnits="創建初始單位"
MeleeStartingUnits="創建對戰初始單位"
MeleeStartingUnitsHint=

MeleeStartingAI="運行AI"
MeleeStartingAI="對電腦玩家運行對戰AI腳本"
MeleeStartingAIHint="動作運行之前玩家要有初始單位和資源."

MeleeInitVictoryDefeat="強制勝利/失敗條件"
MeleeInitVictoryDefeat="強制使用對戰勝利/失敗條件"
MeleeInitVictoryDefeatHint="動作運行之前玩家要有單位."

MeleeStartingUnitsForPlayer="創建初始單位(指定玩家)"
MeleeStartingUnitsForPlayer="創建 ",~Race," 的對戰初始單位給 ",~Player," 在 ",~指定點," (",~Include/Exclude," 英雄)"
MeleeStartingUnitsForPlayerHint=

// Neutral Building actions
AddResourceAmountBJ="增加黃金儲量"
AddResourceAmountBJ="增加 ",~Quantity," 黃金儲量給 ",~金礦
AddResourceAmountBJHint="使用負數來減少黃金儲量."

SetResourceAmount="設置黃金儲量"
SetResourceAmount="設置 ",~金礦," 的黃金儲量為 ",~Quantity
SetResourceAmountHint=

BlightGoldMineForPlayer="創建不死族金礦(立即)"
BlightGoldMineForPlayer="將 ",~金礦," 變為 ",~Player," 的不死族金礦"
BlightGoldMineForPlayerHint="金礦的儲金量不會改變."

WaygateActivateBJ="啟用/禁用 傳送門"
WaygateActivateBJ=~Enable/Disable," ",~傳送門
WaygateActivateBJHint=

WaygateSetDestination="設置傳送門目的坐標 [R]"
WaygateSetDestination="設置 ",~傳送門," 的目的地為(",~X,",",~Y,")"
WaygateSetDestinationHint=

WaygateSetDestinationLocBJ="設置傳送門目的點"
WaygateSetDestinationLocBJ="設置 ",~傳送門," 的目的地為 ",~Target
WaygateSetDestinationLocBJHint=

SetAltMinimapIcon="設置小地圖特殊標誌"
SetAltMinimapIcon="設置小地圖特殊標誌為 ",~Image
SetAltMinimapIconHint="必須使用16x16的圖像."

UnitSetUsesAltIconBJ="開啟/關閉 小地圖特殊標誌"
UnitSetUsesAltIconBJ=~On/Off," ",~單位," 的小地圖特殊標誌"
UnitSetUsesAltIconBJHint="使用'中立建築 - 設置小地圖特殊標誌'動作來設置顯示的標誌. 默認為中立建築標誌."

AddItemToStockBJ="添加物品(指定市場)"
AddItemToStockBJ="添加 ",~物品類型," 到 ",~Marketplace," 並設置庫存量: ",~Count," 最大庫存量: ",~Max
AddItemToStockBJHint="隻影響有'出售物品'技能的單位."

AddItemToAllStock="添加物品(所有市場)"
AddItemToAllStock="添加 ",~物品類型," 到所有市場並設置庫存量: ",~Count," 最大庫存量: ",~Max
AddItemToAllStockHint="影響所有擁有'出售物品'技能的單位."

AddUnitToStockBJ="添加單位(指定市場)"
AddUnitToStockBJ="添加 ",~單位類型," 到 ",~Marketplace," 並設置庫存量: ",~Count," 最大庫存量: ",~Max
AddUnitToStockBJHint="隻影響有'出售單位'技能的單位."

AddUnitToAllStock="添加單位(所有市場)"
AddUnitToAllStock="添加 ",~單位類型," 到所有市場並設置庫存量: ",~Count," 最大庫存量: ",~Max
AddUnitToAllStockHint="影響所有擁有'出售單位'技能的單位."

RemoveItemFromStockBJ="刪除物品(指定市場)"
RemoveItemFromStockBJ="刪除 ",~物品類型," 從 ",~Marketplace
RemoveItemFromStockBJHint="隻影響有'出售物品'技能的單位"

RemoveItemFromAllStock="刪除物品(所有市場)"
RemoveItemFromAllStock="刪除 ",~物品類型," 從所有市場"
RemoveItemFromAllStockHint="影響所有擁有'出售物品'技能的單位."

RemoveUnitFromStockBJ="刪除單位(指定市場)"
RemoveUnitFromStockBJ="刪除 ",~單位類型," 從 ",~Marketplace
RemoveUnitFromStockBJHint="隻影響有'出售單位'技能的單位."

RemoveUnitFromAllStock="刪除單位(所有市場)"
RemoveUnitFromAllStock="刪除 ",~單位類型," 從所有市場"
RemoveUnitFromAllStockHint="影響所有擁有'出售單位'技能的單位."

SetItemTypeSlots="限制物品種類(指定市場)"
SetItemTypeSlots="限制 ",~Marketplace," 的可出售物品種類數為 ",~Quantity
SetItemTypeSlotsHint="隻影響有'出售物品'技能的單位."

SetAllItemTypeSlots="限制物品種類(所有市場)"
SetAllItemTypeSlots="限制所有市場的可出售物品種類數為 ",~Quantity
SetAllItemTypeSlotsHint="影響所有擁有'出售物品'技能的單位."

SetUnitTypeSlots="限制單位種類(指定市場)"
SetUnitTypeSlots="限制 ",~Marketplace," 的可出售單位種類數為 ",~Quantity
SetUnitTypeSlotsHint="隻影響有'出售單位'技能的單位."

SetAllUnitTypeSlots="限制單位種類(所有市場)"
SetAllUnitTypeSlots="限制所有市場的可出售單位種類數為 ",~Quantity
SetAllUnitTypeSlotsHint="影響所有擁有'出售單位'技能的單位."


// Obsolete actions
//AddPerfLogLabel="** AddPerfLogLabel **"
//AddPerfLogLabel="** AddPerfLogLabel(",~Label,") **"
//AddPerfLogLabelHint="** This is for debugging purposes only - remove before ship. **"

//Cheat="** Cheat **"
//Cheat="** Cheat(",~Label,") **"
//CheatHint="** This is for debugging purposes only - remove before ship. **"

YDWEMemoryLeakHelperMapIsOpenMemoryLeakHelper="自動排泄系統-開啟系統自動排泄功能<Mr.Malte製作>"
YDWEMemoryLeakHelperMapIsOpenMemoryLeakHelper="設置系統自動排泄功能開啟 ",~false
YDWEMemoryLeakHelperMapIsOpenMemoryLeakHelperHint="自動排泄系統從收集到的反饋來看不是很理想，請盡量不要使用它。"

YDWEMemoryLeakHelperDisplayLeaks="自動排泄系統-顯示泄露<Mr.Malte製作>"
YDWEMemoryLeakHelperDisplayLeaks="顯示點、單位組和特效泄露的數目"
YDWEMemoryLeakHelperDisplayLeaksHint="自動排泄系統從收集到的反饋來看不是很理想，請盡量不要使用它。"

YDWEMemoryLeakHelperProtectLastCaughtHandle="自動排泄系統-保護最後生成的句柄<Mr.Malte製作>"
YDWEMemoryLeakHelperProtectLastCaughtHandle="保護最後生成的點、單位組和特效句柄，使其不被系統自動清除"
YDWEMemoryLeakHelperProtectLastCaughtHandleHint="自動排泄系統從收集到的反饋來看不是很理想，請盡量不要使用它。"

YDWEMemoryLeakHelperProtectLocation="自動排泄系統-保護-點<Mr.Malte製作>"
YDWEMemoryLeakHelperProtectLocation="保護點 ",~點,"，使其不被系統自動清除"
YDWEMemoryLeakHelperProtectLocationHint="自動排泄系統從收集到的反饋來看不是很理想，請盡量不要使用它。"

YDWEMemoryLeakHelperProtectGroup="自動排泄系統-保護-單位組<Mr.Malte製作>"
YDWEMemoryLeakHelperProtectGroup="保護單位組 ",~單位組,"，使其不被系統自動清除"
YDWEMemoryLeakHelperProtectGroupHint="自動排泄系統從收集到的反饋來看不是很理想，請盡量不要使用它。"

YDWEMemoryLeakHelperProtectEffect="自動排泄系統-保護-特效<Mr.Malte製作>"
YDWEMemoryLeakHelperProtectEffect="保護特效 ",~特效,"，使其不被系統自動清除"
YDWEMemoryLeakHelperProtectEffectHint="自動排泄系統從收集到的反饋來看不是很理想，請盡量不要使用它。"

StoreRealBJ="記錄實數"
StoreRealBJ="記錄 ",~實數," ,使用名稱: ",~文字," 類別名: ",~Category," 緩存: ",~Game Cache
StoreRealBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"

StoreIntegerBJ="記錄整數"
StoreIntegerBJ="記錄 ",~整數," ,使用名稱: ",~文字," 類別名: ",~Category," 緩存: ",~Game Cache
StoreIntegerBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"

StoreBooleanBJ="記錄布爾值"
StoreBooleanBJ="記錄 ",~布爾值," ,使用名稱: ",~文字," 類別名: ",~Category," 緩存: ",~Game Cache
StoreBooleanBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"

StoreStringBJ="記錄字符串"
StoreStringBJ="記錄 ",~字符串," ,使用名稱: ",~文字," 類別名: ",~Category," 緩存: ",~Game Cache
StoreStringBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"

FlushGameCache="刪除緩存 [C]"
FlushGameCache="刪除 ",~GameCache
FlushGameCacheHint="刪除並清空該緩存的所有數據.和原版UI完全一致，但卻不能兼容原版UI，它的存在完全是在添亂啊"

FlushStoredMissionBJ="刪除類別"
FlushStoredMissionBJ="刪除類別 ",~Category," 在緩存 ",~GameCache," 中"
FlushStoredMissionBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"












//***************************************************************************
[TriggerCallStrings]

// YD Beyond Fate






















//returns id string
YDWEI2UnitId="轉換整數為單位Id [YDWE]"
YDWEI2UnitId="轉換 ",~整數," 為單位Id"
YDWEI2UnitIdHint="將一個整數轉換成單位ID，如輸入1751543663，將轉成步兵的ID。"

YDWEI2ItemId="轉換整數為物品Id [YDWE]"
YDWEI2ItemId="轉換 ",~整數," 為物品Id"
YDWEI2ItemIdHint="將一個整數轉換成物品ID，如輸入1936749416，將轉成魔法護盾的ID。"

YDWES2Id="轉換字符串為Id [YDWE]"
YDWES2Id="需要轉換成ID的字符串為：",~字符竄
YDWES2IdHint="將一個字符串轉換成單位、物品等目標的ID；如spsh轉換後為'spsh'，屆時可以通過聊天輸入字符串來創建單位或物品。"

YDWES2UnitId="轉換字符串為單位Id [YDWE]"
YDWES2UnitId="需要轉換成單位Id的字符竄為：",~字符竄
YDWES2UnitIdHint="將一個字符竄轉換成單位ID，如輸入hfoo，將轉成步兵的ID。"

YDWES2ItemId="轉換字符串為物品Id [YDWE]"
YDWES2ItemId="需要轉換成物品Id的字符串為：",~字符竄
YDWES2ItemIdHint="將一個字符串轉換成物品ID，如輸入spsh，將轉成魔法護盾的ID。"

// returns Map x y
YDWECoordinateX="修正X坐標 [YDWE]"
YDWECoordinateX="需要修正的X坐標為：",~實數
YDWECoordinateXHint="設修正X坐標，強制它大於地圖邊界最小值，小於地圖邊界最大值，避免彈出遊戲錯誤。"

YDWECoordinateY="修正Y坐標 [YDWE]"
YDWECoordinateY="需要修正的Y坐標為：",~實數
YDWECoordinateYHint="設修正Y坐標，強制它大於地圖邊界最小值，小於地圖邊界最大值，避免彈出遊戲錯誤。"

// returns distance
YDWEDistanceBetweenUnits="兩個單位之間的距離 [YDWE]"
YDWEDistanceBetweenUnits="從",~單位,"到",~單位,"的距離"
YDWEDistanceBetweenUnitsHint="獲取兩個單位之間的距離。"

// returns angle
YDWEAngleBetweenUnits="兩個單位之間的角度 [YDWE]"
YDWEAngleBetweenUnits="從",~單位,"到",~單位,"的角度"
YDWEAngleBetweenUnitsHint="獲取兩個單位之間的角度。"

// returns armor
YDWEGetUnitArmor="獲取單位護甲<Rising_Dusk製作>"
YDWEGetUnitArmor="獲取 ",~單位," 的護甲值，關聯技能為 ",~輔助技能
YDWEGetUnitArmorHint="可以獲取單位的護甲值；需要保證混亂攻擊對所有護甲均為100%傷害。關聯技能的設置請參考example文件夾下的輔助地圖。"

// returns ElapsedTime
YDWE_TP_GetElapsedTime="獲取中心計時器逝去時間<Fetrix_sai製作>"
YDWE_TP_GetElapsedTime="獲取運行索引為 ",~計時器運行索引," 的計時器逝去時間"
YDWE_TP_GetElapsedTimeHint=""

// returns RemainingTime
YDWE_TP_GetRemainingTime="獲取中心計時器剩餘時間<Fetrix_sai製作>"
YDWE_TP_GetRemainingTime="獲取運行索引為 ",~計時器運行索引," 的計時器剩餘時間"
YDWE_TP_GetRemainingTimeHint=""

// returns Timeout
YDWE_TP_GetTimeout="獲取中心計時器刷新週期<Fetrix_sai製作>"
YDWE_TP_GetTimeout="獲取運行索引為 ",~計時器運行索引," 的計時器刷新週期"
YDWE_TP_GetTimeoutHint=""

//夜天UI
  ="自定義代碼 [C]"
  ="代碼: ",~Jass代碼
  Hint="輸入一行Jass代碼"

YDWEIsTriggerEventId="判斷觸發的事件 [YDWE]"
YDWEIsTriggerEventId="當前觸發的事件為 ",~事件
YDWEIsTriggerEventIdHint="任意單位事件 等於 玩家單位事件，指定單位事件 等於 單位事件"

 UnitAddAbility="添加技能 [C]"
 UnitAddAbility="為 ",~單位," 添加 ",~技能
 UnitAddAbilityHint="添加成功返回true."

 UnitRemoveAbility="刪除技能 [C]"
 UnitRemoveAbility="為 ",~單位," 刪除 ",~技能
 UnitRemoveAbilityHint="刪除成功返回true."

// returns boolean

YDWEGetLocalVariableBoolean="局部變量"
YDWEGetLocalVariableBoolean="local_",~bl
YDWEGetLocalVariableBooleanHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableBooleanArray="局部變量數組"
YDWEGetLocalVariableBooleanArray="local_",~bl,"[",~index,"]"
YDWEGetLocalVariableBooleanArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetBooleanByInteger="獲取 真值 (整數路徑)"
YDWEGetBooleanByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取真值"
YDWEGetBooleanByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取真值數據。"

YDWEGetBooleanByString="獲取 真值 (字符串路徑)"
YDWEGetBooleanByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取真值"
YDWEGetBooleanByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取真值數據。"

YDWEIsItemSwitch="單位切換背包[YDWE]"
YDWEIsItemSwitch=~單位," 正在切換背包"
YDWEIsItemSwitchHint="判斷單位是否在切換背包，避免單位切換背包時觸發獲得和掉落物品事件。"

YDWEPlatformIsInPlatform="地圖在11平台上 [JAPI]"
YDWEPlatformIsInPlatform="目前地圖正在11平台上運行"
YDWEPlatformIsInPlatformHint="判斷地圖是否在11平台上；此功能可以根據地圖所在平台做出差異化操作。特別注意：此操作內含有等待。"

//YDWEPlatformIsInRoom="地圖在特殊房間中 [JAPI]"
//YDWEPlatformIsInRoom="目前地圖在11平台的特殊房間中"
//YDWEPlatformIsInRoomHint="判斷地圖是否在11平台的特殊房間中；此功能是為了一些測試地圖準備，讓地圖只能在某個房間建立。特別注意：此操作內含有等待。"

IsDestructableAliveBJ="可破壞物存活"
IsDestructableAliveBJ=~可破壞物," 是存活的"
IsDestructableAliveBJHint=""

IsDestructableDeadBJ="可破壞物死亡"
IsDestructableDeadBJ=~可破壞物," 是死亡的"
IsDestructableDeadBJHint=""

IsDestructableInvulnerableBJ="物件無敵"
IsDestructableInvulnerableBJ=~物件," 是無敵的"
IsDestructableInvulnerableBJHint=

IsPointBlighted="坐標點被荒蕪地表覆蓋 [R]"
IsPointBlighted="坐標點(",~X,",",~Y,")被荒蕪地表覆蓋"
IsPointBlightedHint=

IsPointBlightedBJ="點被荒蕪地表覆蓋"
IsPointBlightedBJ=~指定點," 被荒蕪地表覆蓋"
IsPointBlightedBJHint=

IsTerrainPathable="地形通行狀態關閉(指定坐標) [R]"
IsTerrainPathable="坐標(",~X,",",~Y,")處的 ",~Pathing Type," 通行狀態為關閉"
IsTerrainPathableHint="指定類型單位不能通行即通行狀態為關閉. 如該點不能造建築就是'建造'通行狀態為關閉. 可使用'環境 - 設置地形通行狀態'來改變通行狀態."

IsTerrainPathableBJ="地形通行狀態關閉(指定點)"
IsTerrainPathableBJ=~指定點," 處的 ",~Pathing Type," 通行狀態為關閉"
IsTerrainPathableBJHint="指定類型單位不能通行即通行狀態為關閉. 如該點不能造建築就是'建造'通行狀態為關閉. 可使用'環境 - 設置地形通行狀態'來改變通行狀態."

IsMapFlagSet="地圖參數設置"
IsMapFlagSet=~Map Flag," 已設置"
IsMapFlagSetHint=

IsCustomCampaignButtonVisibile="自定義戰役按鈕可見"
IsCustomCampaignButtonVisibile="自定義戰役按鈕# ",~Number," 可見"
IsCustomCampaignButtonVisibileHint=

GetCreepCampFilterState="小地圖中立生物顯示開啟"
GetCreepCampFilterState="小地圖中立生物顯示開啟"
GetCreepCampFilterStateHint=

SaveGameExists="遊戲存檔存在"
SaveGameExists=~存檔文件," 已存在"
SaveGameExistsHint=

IsNoVictoryCheat="無法勝利 [R]"
IsNoVictoryCheat="玩家開啟作弊模式: 無法勝利"
IsNoVictoryCheatHint="單機作弊碼開啟的模式."

IsNoDefeatCheat="無法失敗 [R]"
IsNoDefeatCheat="玩家開啟作弊模式: 無法失敗"
IsNoDefeatCheatHint="單機作弊碼開啟的模式."

GetStoredBoolean="讀取布爾值[R]"
GetStoredBoolean="從",~Game Cache,"中讀取布爾值,類別: ",~Category,",名稱: ",~文字
GetStoredBooleanHint="如果該值不存在則返回false."

HaveStoredValue="緩存項存在"
HaveStoredValue="名稱為 "~文字," 的 ",~Type," 類緩存項被保存在類別: ",~Category," 緩存: ",~Game Cache
HaveStoredValueHint=

HaveSavedValue="<1.24> 哈希項存在"
HaveSavedValue="子索引為 ",~Value," 的 ",~Type," 類數據被保存在主索引為 ",~Value," 的 ",~Hashtable," 中"
HaveSavedValueHint=

UnitHasItem="持有物品"
UnitHasItem=~Hero," 擁有 ",~物品
UnitHasItemHint=

UnitHasItemOfTypeBJ="持有物品(指定類型)"
UnitHasItemOfTypeBJ=~Hero," 擁有 ",~物品類型
UnitHasItemOfTypeBJHint=

IsSuspendedXP="經驗不可獲得"
IsSuspendedXP=~Hero," 不可獲得經驗"
IsSuspendedXPHint="可使用'英雄 - 允許/禁止經驗獲取'來設置該項."

CheckItemStatus="物品狀態檢查"
CheckItemStatus=~物品," 是 ",~Status," 的"
CheckItemStatusHint=

CheckItemcodeStatus="物品類型狀態檢查"
CheckItemcodeStatus=~物品類型," 是 ",~Status," 的"
CheckItemcodeStatusHint=

IsItemVisible="物品可見 [R]"
IsItemVisible=~物品," 是可見的"
IsItemVisibleHint="物品不被隱藏且不被單位持有時即為可見的."

IsItemHiddenBJ="物品隱藏"
IsItemHiddenBJ=~物品," 是隱藏的"
IsItemHiddenBJHint="單位持有的物品也被認為是隱藏的. 建議使用物品可見=False來作判斷."

IsItemOwned="物品被持有"
IsItemOwned=~物品," 是被持有的"
IsItemOwnedHint="在物品欄中的物品都是被持有的. 就算單位正處於死亡狀態."

IsItemPowerup="物品是拾取時自動使用的 [R]"
IsItemPowerup=~物品," 是拾取時自動使用類物品"
IsItemPowerupHint=

IsItemSellable="物品可被市場隨機出售 [R]"
IsItemSellable=~物品," 可被市場隨機出售"
IsItemSellableHint=

IsItemPawnable="物品可被抵押 [R]"
IsItemPawnable=~物品," 可被抵押"
IsItemPawnableHint=

RectContainsItem="物品在矩形區域"
RectContainsItem=~物品," 在 ",~矩形區域
RectContainsItemHint="單位持有的物品不會被計算在內."

IsItemInvulnerable="物品無敵"
IsItemInvulnerable=~物品," 是無敵的"
IsItemInvulnerableHint=

LeaderboardHasPlayerItemBJ="玩家在排行榜"
LeaderboardHasPlayerItemBJ=~Leaderboard," 中包含 ",~Player
LeaderboardHasPlayerItemBJHint=

IsMultiboardDisplayed="多面板顯示"
IsMultiboardDisplayed=~Multiboard," 是顯示的"
IsMultiboardDisplayedHint=

IsMultiboardMinimized="多面板最小化"
IsMultiboardMinimized=~Multiboard," 是最小化的"
IsMultiboardMinimizedHint=

WaygateIsActiveBJ="傳送門激活"
WaygateIsActiveBJ=~傳送門," 處於激活狀態"
WaygateIsActiveBJHint=

IsPlayerFlagSetBJ="玩家參數開啟"
IsPlayerFlagSetBJ=~Player Flag," 為允許,對 ",~Player
IsPlayerFlagSetBJHint=

IsPlayerAlly="是玩家的盟友"
IsPlayerAlly=~Player," 是 ",~Player," 的盟友"
IsPlayerAllyHint="包括中立狀態. 單向判斷玩家A對玩家B聯盟不侵犯,即表示玩家A是玩家B的盟友."

IsPlayerEnemy="是玩家的敵人"
IsPlayerEnemy=~Player," 是 ",~Player," 的敵人"
IsPlayerEnemyHint="不包括中立狀態. 單向判斷玩家A對玩家B敵對侵犯,即表示玩家A是玩家B的盟友."

IsPlayerObserver="玩家是裁判或觀察者 [R]"
IsPlayerObserver=~Player,"是裁判或觀察者"
IsPlayerObserverHint=

IsPlayerRacePrefSet="玩家的種族選擇"
IsPlayerRacePrefSet=~Player," 選擇了 ",~RacePreference
IsPlayerRacePrefSetHint=

GetPlayerAlliance="聯盟狀態設置"
GetPlayerAlliance=~Player," 對 ",~Player," 開啟 ",~Alliance Type
GetPlayerAllianceHint=

IsPlayerInForce="在玩家組"
IsPlayerInForce=~Player," 在 ",~玩家組," 中"
IsPlayerInForceHint=

IsQuestItemCompleted="任務項目完成"
IsQuestItemCompleted=~Quest Requirement," 已完成"
IsQuestItemCompletedHint=

IsQuestEnabled="任務激活"
IsQuestEnabled=~Quest," 已激活"
IsQuestEnabledHint=

IsQuestCompleted="任務完成"
IsQuestCompleted=~Quest," 已完成"
IsQuestCompletedHint=

IsQuestFailed="任務失敗"
IsQuestFailed=~Quest," 失敗"
IsQuestFailedHint=

IsQuestDiscovered="任務被發現"
IsQuestDiscovered=~Quest," 已被發現"
IsQuestDiscoveredHint=

IsQuestRequired="是主要任務"
IsQuestRequired=~Quest," 是主要任務"
IsQuestRequiredHint=

RectContainsLoc="包含點"
RectContainsLoc=~矩形區域," 內包含 ",~點
RectContainsLocHint=

IsPointInRegion="包含坐標"
IsPointInRegion=~不規則區域," 內包含坐標(",~X,",",~Y,")"
IsPointInRegionHint=TC_REGION

IsLocationInRegion="包含點"
IsLocationInRegion=~不規則區域," 內包含點: ",~點
IsLocationInRegionHint=TC_REGION

IsTriggerEnabled="觸發開啟"
IsTriggerEnabled=~觸發," 處於開啟狀態"
IsTriggerEnabledHint=

TriggerEvaluate="觸發條件成立"
TriggerEvaluate=~觸發," 的條件成立"
TriggerEvaluateHint=

IsTriggerQueuedBJ="觸發在隊列中"
IsTriggerQueuedBJ=~觸發," 在隊列中"
IsTriggerQueuedBJHint="可使用'觸發器 - 添加到隊列'和'觸發器 - 移出隊列'動作來操作觸發隊列."

IsTriggerQueueEmptyBJ="觸發隊列為空"
IsTriggerQueueEmptyBJ="觸發隊列為空"
IsTriggerQueueEmptyBJHint="可使用'觸發器 - 添加到隊列'和'觸發器 - 移出隊列'動作來操作觸發隊列."

IsUnit="單位檢查"
IsUnit=~單位," 與 ",~單位,"相同"
IsUnitHint="用來判斷兩個單位是否相等。"

IsUnitDetected="被檢測到"
IsUnitDetected=~單位," 處在 ",~玩家," 的真實視野範圍內"
IsUnitDetectedHint="用來判斷單位在這個玩家反隱形範圍內，注：不包含該玩家同盟的反隱範圍。"

IsUnitType="單位類別檢查"
IsUnitType=~單位," 是 ",~Type
IsUnitTypeHint=

IsUnitRace="單位種族檢查"
IsUnitRace=~單位," 是 ",~Race
IsUnitRaceHint=

IsUnitIdType="單位類別檢查(指定單位類型)"
IsUnitIdType=~單位類型," 是 ",~Type
IsUnitIdTypeHint=

IsHeroUnitId="單位類型是英雄單位"
IsHeroUnitId=~UnitType," 是英雄單位"

IsUnitInGroup="在單位組"
IsUnitInGroup=~單位," 在 ",~單位組," 中"
IsUnitInGroupHint=

IsUnitInRange="在指定單位範圍內 [R]"
IsUnitInRange=~單位," 在距離 ",~指定單位," ",~範圍," 範圍內"
IsUnitInRangeHint=

IsUnitInRangeXY="在指定坐標範圍內 [R]"
IsUnitInRangeXY=~單位," 在距離坐標(",~X,",",~Y,") ",~範圍," 範圍內"
IsUnitInRangeXYHint=

IsUnitInRangeLoc="在指定點範圍內 [R]"
IsUnitInRangeLoc=~單位," 在距離 ",~指定點," ",~範圍," 範圍內"
IsUnitInRangeLocHint=

RectContainsUnit="在矩形區域內"
RectContainsUnit=~矩形區域," 內存在 ",~單位
RectContainsUnitHint=

IsUnitInRegion="在不規則區域內 [R]"
IsUnitInRegion=~不規則區域," 內存在 ",~單位
IsUnitInRegionHint=

IsUnitAliveBJ="單位存活"
IsUnitAliveBJ=~單位," 是存活的"
IsUnitAliveBJHint="實際上該函數是判斷單位血量是否>0."

IsUnitDeadBJ="單位死亡"
IsUnitDeadBJ=~單位," 處於死亡狀態"
IsUnitDeadBJHint="實際上該函數是判斷單位血量是否<=0."

IsUnitPausedBJ="單位暫停"
IsUnitPausedBJ=~單位," 處於暫停狀態"
IsUnitPausedBJHint=

IsUnitHiddenBJ="單位隱藏"
IsUnitHiddenBJ=~單位," 處於隱藏狀態"
IsUnitHiddenBJHint="可通過'單位 - 隱藏'動作來析藏單位. 運輸機,靈魂之球,祭壇中的單位都被認為是隱藏狀態."

IsUnitIllusionBJ="單位是鏡像"
IsUnitIllusionBJ=~單位," 是鏡像單位"
IsUnitIllusionBJHint=

UnitCanSleepPerm="允許控制睡眠狀態"
UnitCanSleepPerm="允許控制 "~單位," 的睡眠狀態"
UnitCanSleepPermHint="即該單位擁有'一直睡眠'技能."

UnitCanSleepBJ="允許夜晚睡眠"
UnitCanSleepBJ=~單位," 會在夜晚進入睡眠"
UnitCanSleepBJHint="中立生物才會睡眠."

UnitIsSleepingBJ="正在睡眠"
UnitIsSleepingBJ=~單位," 正在睡眠"
UnitIsSleepingBJHint="中立生物才會睡眠. 不包括催眠魔法."

DoesUnitGenerateAlarms="開啟警報"
DoesUnitGenerateAlarms=~單位," 處於開啟警報狀態"
DoesUnitGenerateAlarmsHint=

IsUnitLoadedBJ="被裝載"
IsUnitLoadedBJ=~單位," 被裝載中"
IsUnitLoadedBJHint="被飛艇,船等有運輸功能的單位裝載."

IsUnitInTransportBJ="被指定單位裝載"
IsUnitInTransportBJ=~單位," 被 ",~運輸機," 裝載中"
IsUnitInTransportBJHint=

IsUnitSelected="被玩家選擇"
IsUnitSelected=~單位," 被 ",~Player," 選擇"
IsUnitSelectedHint=

IsUnitAlly="是玩家的同盟單位"
IsUnitAlly=~單位," 是 ",~Player," 的同盟單位"
IsUnitAllyHint="包括中立狀態. 單向判斷玩家對單位是否為不侵犯狀態."

IsUnitEnemy="是玩家的敵對單位"
IsUnitEnemy=~單位," 是 ",~Player," 的敵對單位"
IsUnitEnemyHint="不包括中立狀態. 單向判斷玩家對單位是否為敵對侵犯."

IsUnitOwnedByPlayer="是玩家的單位"
IsUnitOwnedByPlayer=~單位," 屬於 ",~Player
IsUnitOwnedByPlayerHint="判斷單位是否屬於這個玩家。"

IsUnitInForce="是玩家組裡玩家的單位"
IsUnitInForce=~單位," 屬於 ",~玩家組," 裡的玩家"
IsUnitInForceHint="判斷單位是否屬於這個玩家組裡的玩家。"

UnitHasBuffBJ="擁有魔法傚果"
UnitHasBuffBJ=~單位," 擁有 ",~魔法傚果
UnitHasBuffBJHint=

IsUnitGroupEmptyBJ="單位組為空"
IsUnitGroupEmptyBJ=~單位組," 為空"
IsUnitGroupEmptyBJHint=

IsUnitGroupInRectBJ="單位組中單位在矩形區域內"
IsUnitGroupInRectBJ=~單位組," 中所有單位在 ",~矩形區域," 內"
IsUnitGroupInRectBJHint=

IsUnitGroupDeadBJ="單位組中所有單位死亡"
IsUnitGroupDeadBJ=~單位組," 中所有單位死亡"
IsUnitGroupDeadBJHint=

IsFogEnabled="戰爭迷霧開啟"
IsFogEnabled="戰爭迷霧開啟"
IsFogEnabledHint=

IsFogMaskEnabled="黑色陰影開啟"
IsFogMaskEnabled="黑色陰影開啟"
IsFogMaskEnabledHint=

IsUnitVisible="單位可見"
IsUnitVisible=~單位," 對 ",~Player," 可見"
IsUnitVisibleHint=

IsUnitInvisible="單位不可見"
IsUnitInvisible=~單位," 對 ",~Player," 不可見"
IsUnitInvisibleHint=

IsUnitFogged="單位在迷霧中"
IsUnitFogged=~單位," 在 ",~Player," 的迷霧範圍內"
IsUnitFoggedHint="黑色陰影內的單位不被計算在內."

IsUnitMasked="單位在黑色陰影中"
IsUnitMasked=~單位," 在 ",~Player," 的黑色陰影內"
IsUnitMaskedHint=

IsLocationVisibleToPlayer="點可見"
IsLocationVisibleToPlayer=~指定點,"對 ",~Player," 可見"
IsLocationVisibleToPlayerHint=

IsVisibleToPlayer="坐標可見"
IsVisibleToPlayer="坐標(",~x,",",~y,") 對 ",~玩家," 可見"
IsVisibleToPlayerHint=""

IsLocationFoggedToPlayer="點在迷霧中"
IsLocationFoggedToPlayer=~指定點," 在 ",~Player," 的迷霧範圍內"
IsLocationFoggedToPlayerHint="黑色陰影內的點不被計算在內."

IsFoggedToPlayer="坐標在迷霧中"
IsFoggedToPlayer="坐標(",~x,",",~y,") 在 ",~玩家," 的迷霧範圍內"
IsFoggedToPlayerHint="黑色陰影內的坐標不被計算在內。"

IsLocationMaskedToPlayer="點在黑色陰影中"
IsLocationMaskedToPlayer=~指定點," 在 ",~Player," 的黑色陰影內"
IsLocationMaskedToPlayerHint=

IsMaskedToPlayer="坐標在黑色陰影中"
IsMaskedToPlayer="坐標(",~x,",",~y,") 在 ",~玩家," 的黑色陰影內"
IsMaskedToPlayerHint=""

OperatorDegreeAdd="加 < ﹢ >"
OperatorDegreeAdd=~角度," + ",~角度
OperatorDegreeAddHint=

OperatorDegreeSubtract="減 < ﹣ >"
OperatorDegreeSubtract=~角度," - ",~角度
OperatorDegreeSubtractHint=

OperatorDegreeMultiply="乘 < × >"
OperatorDegreeMultiply=~角度," × ",~實數
OperatorDegreeMultiplyHint=

OperatorDegreeDivide="除 < ÷ >"
OperatorDegreeDivide=~角度," ÷ ",~實數
OperatorDegreeDivideHint=

OperatorRadianAdd="加 < ﹢ >"
OperatorRadianAdd=~弧度," ﹢ ",~弧度
OperatorRadianAddHint=

OperatorRadianSubtract="減 < ﹣ >"
OperatorRadianSubtract=~弧度," ﹣ ",~弧度
OperatorRadianSubtractHint=

OperatorRadianMultiply="乘 < × >"
OperatorRadianMultiply=~弧度," × ",~實數
OperatorRadianMultiplyHint=

OperatorRadianDivide="除 < ÷ >"
OperatorRadianDivide=~弧度," ÷ ",~實數
OperatorRadianDivideHint=

// returns integer
OperatorInt="算術運算"
OperatorInt=~數值," ",~運算符," ",~數值
OperatorIntHint=

GetForLoopIndexA="循環整數A"
GetForLoopIndexA="循環整數A"
GetForLoopIndexAHint=

GetForLoopIndexB="循環整數B"
GetForLoopIndexB="循環整數B"
GetForLoopIndexBHint=

StringLength="字符串長度"
StringLength=~String,的長度
StringLengthHint=

 ="其它格式整數 [R]"
 ="其它格式整數: ",~整數
 Hint="可以在這使用如0x1ab3和'A001'之類的整數形式,或是直接寫算術表達式. "

R2I="轉換實數為整數"
R2I="轉換 ",~Real," 為整數"
R2RHint="捨棄小數部分."

S2I="轉換字符串為整數"
S2I="轉換 ",~String," 為整數"
S2IHint=

StringHash="獲取字符串的哈希值"
StringHash="(",~String,")的哈希值"
StringHashHint="獲取一個對應該字符串的密鑰，不同的字符串的密鑰基本不可能相同，也很難找到兩個不同的字符串他們有著相同的密鑰。可以用於製作密碼等功能。"

YDWE_PreloadSL_Get="獲取存檔數據"
YDWE_PreloadSL_Get="從",~玩家,"獲取 ※",~數據注釋,"，","從","當","前","存","檔","[",~數據項索引,"]","上","獲","取"
YDWE_PreloadSL_GetHint="從玩家本地存檔上獲取數據，需要填入正確的數據項索引，標籤即該項數據的注釋。"

YDWERecordGetI="獲取存檔數據 [JAPI]"
YDWERecordGetI="從",~玩家,"的服務器存檔中讀出〖",~數據名,"〗"
YDWERecordGetIHint="從玩家服務器存檔上獲取數據，需要填入正確的數據名。"

YDWEGetLocalVariableInteger="局部變量"
YDWEGetLocalVariableInteger="local_",~i
YDWEGetLocalVariableIntegerHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableIntegerArray="局部變量數組"
YDWEGetLocalVariableIntegerArray="local_",~i,"[",~index,"]"
YDWEGetLocalVariableIntegerArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGeneralBounsSystemUnitGetBonus="萬能屬性系統-獲取屬性<茄子製作>"
YDWEGeneralBounsSystemUnitGetBonus="獲取 ",~單位," 附加 ",~屬性
YDWEGeneralBounsSystemUnitGetBonusHint=

GetHandleIdBJ="<1.24> 獲取對象的h2i值"
GetHandleIdBJ="轉換 ",~Handle," 為整數"
GetHandleIdBJHint="創建一個對應該handle的臨時密鑰,可以在哈希表中作為索引號使用.當該handle被徹底銷毀時,密鑰會被回收."

GetHandleId="<1.24> 獲取對象的h2i值 [C]"
GetHandleId="轉換 ",~Handle," 為整數"
GetHandleIdHint="創建一個對應該handle的臨時密鑰,可以在哈希表中作為索引號使用.當該handle被徹底銷毀時,密鑰會被回收."

StringHashBJ="<1.24> 獲取字符串的哈希值"
StringHashBJ="轉換 ",~String," 為整數"
StringHashBJHint="創建一個對應該字符串的永久密鑰,可以在哈希表中作為索引號使用"

YDWE_TP_NewTimerPeriodic="新中心計時器-開啟新的運行索引<Fetrix_sai製作>"
YDWE_TP_NewTimerPeriodic="開啟中心計時器一個新的運行索引，時間間隔為 ",~時間," 秒，是否循環 ",~真值,"，運行觸發器 ",~觸發器
YDWE_TP_NewTimerPeriodicHint="當中心計時器運行某個觸發器時，會生成一個運行索引；本條API會按設置的參數來運行觸發器，並返回一個運行索引。"

YDWE_TP_GetExpiredTimerIndex="新中心計時器-獲取當前到期計時器運行索引<Fetrix_sai製作>"
YDWE_TP_GetExpiredTimerIndex="獲取當前到期計時器運行索引"
YDWE_TP_GetExpiredTimerIndexHint="當中心計時器運行某個觸發器時，會生成一個運行索引；可以通過本條API來獲取當前到期的計時器運行索引。"

YDWEGetGameCurrentTime="計時器系統-獲取遊戲當前時間"
YDWEGetGameCurrentTime="獲取遊戲當前時間"
YDWEGetGameCurrentTimeHint="獲得從遊戲開始到目前流逝的時間，以秒為單位。"

YDWETimerSystemGetRunIndex="計時器系統-獲取中心計時器當前執行索引"
YDWETimerSystemGetRunIndex="獲取中心計時器當前執行索引"
YDWETimerSystemGetRunIndexHint="獲得中心計時器運行觸發器或函數目前為止的執行次數。"

YDWEGetUnitItemSoftId="物品在物品欄中的位置[YDWE]"
YDWEGetUnitItemSoftId="獲取 ",~單位," 物品欄中 ",~物品," 的位置"
YDWEGetUnitItemSoftIdHint="返回物品所在單位物品欄中的位置，為1-6之間的某個值；若單位身上不存在該物品，則返回0。"

YDWEConverUnitcodeToInt="顯示單位類型為整數[YDWE]"
YDWEConverUnitcodeToInt="顯示<",~單位類型,">為整數"
YDWEConverUnitcodeToIntHint="單位類型本身是個整數，因此無需轉換；該功能主要用於存儲系統的路徑設置中。"

YDWEConverItemcodeToInt="顯示物品類型為整數[YDWE]"
YDWEConverItemcodeToInt="顯示<",~物品類型,">為整數"
YDWEConverItemcodeToIntHint="物品類型本身是個整數，因此無需轉換；該功能主要用於存儲系統的路徑設置中。"

YDWEConverAbilcodeToInt="顯示技能類型為整數[YDWE]"
YDWEConverAbilcodeToInt="顯示<",~技能類型,">為整數"
YDWEConverAbilcodeToIntHint="技能類型本身是個整數，因此無需轉換；該功能主要用於存儲系統的路徑設置中。"

YDWEConverOrdercodeToInt="顯示命令ID為整數[YDWE]"
YDWEConverOrdercodeToInt="顯示<",~命令ID,">為整數"
YDWEConverOrdercodeToIntHint="命令ID本身是個整數，因此無需轉換；該功能主要用於存儲系統的路徑設置中。"

YDWEGetIntegerByInteger="獲取 整數 (整數路徑)"
YDWEGetIntegerByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取整數"
YDWEGetIntegerByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取整數數據。"

YDWEGetIntegerByString="獲取 整數 (字符串路徑)"
YDWEGetIntegerByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取整數"
YDWEGetIntegerByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取整數數據。"

YDWEGetUnitGoldCost="獲取 黃金消耗 (單位類型)"
YDWEGetUnitGoldCost="獲取 ",~單位," 建造時消耗的黃金"
YDWEGetUnitGoldCostHint="本觸發只能獲取普通單位建造時消耗的黃金，若填入英雄單位，將會獲得固定值425"

YDWEGetUnitWoodCost="獲取 木頭消耗 (單位類型)"
YDWEGetUnitWoodCost="獲取 ",~單位," 建造時消耗的木頭"
YDWEGetUnitWoodCostHint="本觸發只能獲取普通單位建造時消耗的木頭，若填入英雄單位，將會獲得固定值100"

YDWEGetUnitBuildTime="獲取 建造時間 (單位類型)"
YDWEGetUnitBuildTime="獲取 ",~單位," 建造時需要的時間"
YDWEGetUnitBuildTimeHint="本觸發只能獲取普通單位建造時需要的時間，若填入英雄單位，將會獲得固定值55"

YDWEGetUnitFoodUsed="獲取 消耗人口 (單位)"
YDWEGetUnitFoodUsed="獲取 ",~單位," 建造時消耗的人口"
YDWEGetUnitFoodUsedHint="本觸發只能獲取普通單位建造時消耗的人口，若填入英雄單位，將會獲得固定值5"

YDWEGetUnitFoodMade="獲取 提供人口 (單位)"
YDWEGetUnitFoodMade="獲取 ",~單位," 建造後提供的人口"
YDWEGetUnitFoodMadeHint="本觸發只能獲取普通單位建造後提供的人口，若填入英雄單位，將會獲得固定值0"

GetElevatorHeight="升降機高度"
GetElevatorHeight=~升降機," 的高度"
GetElevatorHeightHint="可以使用'可破壞物 - 設置升降機高度'來設置升降機高度."

GetTerrainCliffLevel="地形懸崖高度(指定坐標) [R]"
GetTerrainCliffLevel="坐標(",~X,",",~Y,")處的地形懸崖高度"
GetTerrainCliffLevelHint="懸崖高度:深水區為0, 淺水區為1, 平原為2, 之後每層+1."

GetTerrainCliffLevelBJ="地形懸崖高度(指定點)"
GetTerrainCliffLevelBJ=~指定點," 處的地形懸崖高度"
GetTerrainCliffLevelBJHint="懸崖高度:深水區為0, 淺水區為1, 平原為2, 之後每層+1."

GetTerrainVariance="地形樣式(指定坐標) [R]"
GetTerrainVariance="坐標(",~X,",",~Y,")處的地形樣式"
GetTerrainVarianceHint=

GetTerrainVarianceBJ="地形樣式(指定點)"
GetTerrainVarianceBJ=~指定點," 處的地形樣式"
GetTerrainVarianceBJHint=

GetLearnedSkillLevel="學習技能等級"
GetLearnedSkillLevel="學習技能等級"
GetLearnedSkillLevelHint="響應'學習技能'單位事件,指代被學習技能的等級. 注意,該值為學習後的等級."

GetPlayers="玩家數量"
GetPlayers="玩家數量"
GetPlayersHint="地圖編輯器中開啟的玩家數量(1-12)."

GetTeams="隊伍數量"
GetTeams="隊伍數量"
GetTeamsHint=

GetAllyColorFilterState="聯盟顏色顯示設置"
GetAllyColorFilterState="聯盟顏色顯示設置"
GetAllyColorFilterStateHint="0為不開啟. 1為小地圖顯示. 2為小地圖和遊戲都顯示."

GetTournamentFinishNowRule="比賽結束規則"
GetTournamentFinishNowRule="比賽結束規則"
GetTournamentFinishNowRuleHint="1表示遊戲開始時間已經超過限定時,無法以平局結束. 其他值表示遊戲還在初期階段,此時退出遊戲將以平局結束.."

GetTournamentScore="對戰比賽得分"
GetTournamentScore=~Player," 的當前對戰比賽得分"
GetTournamentScoreHint="對戰遊戲時如果遊戲時間過長,系統將以該值來決定勝負."

GetStoredInteger="緩存讀取整數 [C]"
GetStoredInteger="從",~Game Cache,"中讀取整數值,類別: ",~Category,",名稱: ",~文字
GetStoredIntegerHint="如果該值不存在則返回0."

GetHeroLevel="英雄等級"
GetHeroLevel=~英雄," 的英雄等級"
GetHeroLevelHint=

GetHeroXP="英雄經驗值"
GetHeroXP=~英雄," 的經驗值"
GetHeroXPHint=

GetHeroStr="英雄力量 [R]"
GetHeroStr=~英雄," 的力量值(",~Include/Exclude," 加成)"
GetHeroStrHint=

GetHeroAgi="英雄敏捷 [R]"
GetHeroAgi=~英雄," 的敏捷值(",~Include/Exclude," 加成)"
GetHeroAgiHint=

GetHeroInt="英雄智力 [R]"
GetHeroInt=~英雄," 的智力值(",~Include/Exclude," 加成)"
GetHeroIntHint=

GetHeroStatBJ="英雄屬性"
GetHeroStatBJ=~Attribute," 對 ",~英雄," (",~Include/Exclude," 加成)"
GetHeroStatBJHint=

GetHeroSkillPoints="未分配技能點數"
GetHeroSkillPoints=~英雄," 的未分配技能點數"
GetHeroSkillPointsHint=

GetInventoryIndexOfItemTypeBJ="物品在物品欄的序號 [C]"
GetInventoryIndexOfItemTypeBJ=~單位," 所持有的 ",~物品類型," 的物品欄序號"
GetInventoryIndexOfItemTypeBJHint="如果單位沒有該類型的物品則返回0"

GetItemLevel="物品等級"
GetItemLevel=~物品," 的物品等級"
GetItemLevelHint=

GetItemCharges="使用次數"
GetItemCharges=~物品," 的使用次數"
GetItemChargesHint="無限使用物品將返回0."

GetItemUserData="物品自定義值"
GetItemUserData=~物品," 的自定義值"
GetItemUserDataHint="可以使用'物品 - 設置自定義值'來設置該值."

LeaderboardGetPlayerIndexBJ="排行榜位置"
LeaderboardGetPlayerIndexBJ=~Player," 在 ",~Leaderboard," 的排名"
LeaderboardGetPlayerIndexBJHint=

LeaderboardGetItemCount="行數"
LeaderboardGetItemCount=~Leaderboard," 的行數"
LeaderboardGetItemCountHint=

GetRandomInt="隨機整數"
GetRandomInt="隨機整數,最小值: ",~Minimum," 最大值: ",~Maximum
GetRandomIntHint=

IMinBJ="取較小值"
IMinBJ="取(",~整數1,", ",~整數2,")中較小值"
IMinBJHint=

IMaxBJ="取較大值"
IMaxBJ="取(",~整數1,", ",~整數2,")中較大值"
IMaxBJHint=

IAbsBJ="絕對值"
IAbsBJ=~整數," 的絕對值"
IAbsBJHint=

ISignBJ="符號標誌"
ISignBJ=~整數," 的符號標誌"
ISignBJHint="負數為-1. 非負數為1."

ModuloInteger="模"
ModuloInteger=~被除數," mod ",~除數
ModuloIntegerHint="取模計算,例: 13 mod 5 = 3."

MultiboardGetRowCount="行數"
MultiboardGetRowCount=~Multiboard," 的行數"
MultiboardGetRowCountHint=

MultiboardGetColumnCount="列數"
MultiboardGetColumnCount=~Multiboard," 的列數"
MultiboardGetColumnCountHint=

GetResourceAmount="儲金量"
GetResourceAmount=~金礦," 的儲金量"
GetResourceAmountHint="只對金礦有效."

GetPlayerState="玩家屬性"
GetPlayerState=~Player," ",~Property
GetPlayerStateHint=

GetPlayerTaxRate="玩家稅率 [R]"
GetPlayerTaxRate=~Player," 需要交納給 ",~Player," 的 ",~Resource," 所得稅
GetPlayerTaxRateHint="所得稅取值範圍0-100."

GetPlayerTaxRateBJ="玩家稅率"
GetPlayerTaxRateBJ=~Resource," 所得稅, ",~Player," 交納給 ",~Player
GetPlayerTaxRateBJHint="所得稅取值範圍0-100."

GetPlayerScore="玩家得分"
GetPlayerScore=~Player," ",~Score
GetPlayerScoreHint=

GetConvertedPlayerId="玩家索引"
GetConvertedPlayerId=~Player," 的玩家索引號"
GetConvertedPlayerIdHint="玩家索引取值1-16."

GetPlayerId="玩家索引 [R]"
GetPlayerId=~Player," 的玩家索引號"
GetPlayerIdHint="玩家索引取值0-15，玩家一的索引號為0"

GetPlayerStructureCount="建築數量"
GetPlayerStructureCount=~Player," 擁有的建築數量(",~Include/Exclude," 未完成的)"
GetPlayerStructureCountHint=

GetPlayerUnitCount="非建築單位數量"
GetPlayerUnitCount=~Player," 擁有的非建築單位數量(",~Include/Exclude," 未完成的)"
GetPlayerUnitCountHint=

GetPlayerTechCountSimple="當前科技等級"
GetPlayerTechCountSimple=~科技," 的當前等級對 ",~Player
GetPlayerTechCountSimpleHint=

GetPlayerTechMaxAllowedSwap="最大科技等級"
GetPlayerTechMaxAllowedSwap=~科技," 的最大等級對 ",~Player
GetPlayerTechMaxAllowedSwapHint=

GetPlayerTeam="玩家隊伍"
GetPlayerTeam=~Player," 所屬隊伍編號"
GetPlayerTeamHint=

CountPlayersInForceBJ="玩家組中玩家數量"
CountPlayersInForceBJ=~玩家組," 中的玩家數量"
CountPlayersInForceBJHint=

CountUnitsInGroup="單位組中單位數量"
CountUnitsInGroup=~單位組," 中的單位數量"
CountUnitsInGroupHint=

CountLivingPlayerUnitsOfTypeId="玩家擁有單位數量"
CountLivingPlayerUnitsOfTypeId=~單位類型," 的數量對 ",~Player
CountLivingPlayerUnitsOfTypeIdHint=

GetUnitFoodUsed="單位使用人口數量"
GetUnitFoodUsed=~單位," 使用的人口數量"
GetUnitFoodUsedHint=

GetUnitFoodMade="單位提供人口數量"
GetUnitFoodMade=~單位," 提供的人口數量"
GetUnitFoodMadeHint=

GetFoodUsed="單位使用人口數量(指定單位類型)"
GetFoodUsed=~單位類型," 使用的人口數量"
GetFoodUsedHint=

GetFoodMade="單位提供人口數量(指定單位類型)"
GetFoodMade=~單位類型," 提供的人口數量"
GetFoodMadeHint=

GetUnitPointValue="單位附加值"
GetUnitPointValue=~單位," 的附加值"
GetUnitPointValueHint="單位附加值不可改變. 可以做一些特殊用途. 比如TD地圖中的建築販賣價格."

GetUnitPointValueByType="單位附加值(指定單位類型)"
GetUnitPointValueByType=~單位類型," 的附加值"
GetUnitPointValueByTypeHint=單位附加值不可改變. 可以做一些特殊用途. 比如TD地圖中的建築販賣價格.

GetUnitUserData="單位自定義值"
GetUnitUserData=~單位," 的自定義值"
GetUnitUserDataHint="可使用'單位 - 設置自定義值'來設置該值."

GetUnitLevel="單位等級"
GetUnitLevel=~單位," 的等級"
GetUnitLevelHint="對於英雄則會返回其英雄等級."

GetUnitAbilityLevel="單位技能等級 [R]"
GetUnitAbilityLevel=~單位," 的 ",~技能," 技能等級"
GetUnitAbilityLevelHint="如果單位沒有該技能,則返回0."

GetUnitAbilityLevelSwapped="單位技能等級"
GetUnitAbilityLevelSwapped=~技能," 的等級對 ",~單位
GetUnitAbilityLevelSwappedHint="如果單位沒有該技能,則返回0."

UnitInventoryCount="持有物品數量"
UnitInventoryCount=~單位," 所持有的物品數量"
UnitInventoryCountHint=

UnitInventorySizeBJ="物品欄格數"
UnitInventorySizeBJ=~單位," 的物品欄格數"
UnitInventorySizeBJHint=

UnitCountBuffsEx="擁有Buff數量 [R]"
UnitCountBuffsEx=~單位," 的附帶Buff數量,(",~Include/Exclude," 正面Buff, ",~Include/Exclude," 負面Buff",~Include/Exclude," 魔法Buff, ",~Include/Exclude," 物理Buff",~Include/Exclude," 生命週期, ",~Include/Exclude," 光環效果",~Include/Exclude," 不可驅散Buff)"
UnitCountBuffsExHint=

UnitCountBuffsExBJ="擁有Buff數量"
UnitCountBuffsExBJ=~Buff Type," ",~Buff Resist," Buff數量在 ",~單位," 身上(",~Include/Exclude," 生命週期, ",~Include/Exclude," 光環)"
UnitCountBuffsExBJHint=

GetTriggerEvalCount="觸發條件判斷次數"
GetTriggerEvalCount=~Trigger," 的觸發條件判斷次數"
GetTriggerEvalCountHint=

GetTriggerExecCount="觸發動作運行次數"
GetTriggerExecCount=~Trigger," 的觸發動作運行次數"
GetTriggerExecCountHint=

QueuedTriggerCountBJ="隊列中觸發數量"
QueuedTriggerCountBJ="觸發隊列中的觸發數量"
QueuedTriggerCountBJHint="可使用'觸發器 - 添加到隊列'和'觸發器 - 移出隊列'動作來操作觸發隊列."


// returns real
OperatorReal="算術運算"
OperatorReal=~Value," ",~Operator," ",~Value
OperatorRealHint=

   ="自定義代碼 [C]"
   ="代碼: ",~Jass代碼
   Hint="輸入一行Jass代碼"

YDWEGetLocalVariableReal="局部變量"
YDWEGetLocalVariableReal="local_",~R
YDWEGetLocalVariableRealHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableRealArray="局部變量數組"
YDWEGetLocalVariableRealArray="local_",~R,"[",~index,"]"
YDWEGetLocalVariableRealArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetRealByInteger="獲取 實數 (整數路徑)"
YDWEGetRealByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取實數"
YDWEGetRealByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取實數數據。"

YDWEGetRealByString="獲取 實數 (字符串路徑)"
YDWEGetRealByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取實數"
YDWEGetRealByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取實數數據。"

GetLocationX="點的X軸坐標"
GetLocationX=~點," 的X軸坐標"
GetLocationXHint=

GetLocationY="點的Y軸坐標"
GetLocationY=~點," 的Y軸坐標"
GetLocationYHint=

GetLocationZ="點的Z軸高度 [R]"
GetLocationZ=~點," 的Z軸高度"
GetLocationZHint=

CameraSetupGetField="鏡頭屬性(指定鏡頭) [R]"
CameraSetupGetField=~鏡頭," 的 ",~Camera Field
CameraSetupGetFieldHint=

CameraSetupGetFieldSwap="鏡頭屬性(指定鏡頭)"
CameraSetupGetFieldSwap=~Camera Field," 對 ",~鏡頭
CameraSetupGetFieldSwapHint=

GetCameraField="鏡頭屬性(當前鏡頭)"
GetCameraField="當前鏡頭的 ",~Camera Field
GetCameraFieldHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraTargetPositionX="當前鏡頭目標X坐標"
GetCameraTargetPositionX="當前鏡頭目標X坐標"
GetCameraTargetPositionXHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraTargetPositionY="當前鏡頭目標Y坐標"
GetCameraTargetPositionY="當前鏡頭目標Y坐標"
GetCameraTargetPositionYHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraTargetPositionZ="當前鏡頭目標Z坐標"
GetCameraTargetPositionZ="當前鏡頭目標Z坐標"
GetCameraTargetPositionZHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraEyePositionX="當前鏡頭源X坐標"
GetCameraEyePositionX="當前鏡頭源X坐標"
GetCameraEyePositionXHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraEyePositionY="當前鏡頭源Y坐標"
GetCameraEyePositionY="當前鏡頭源Y坐標"
GetCameraEyePositionYHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraEyePositionZ="當前鏡頭源Z坐標"
GetCameraEyePositionZ="當前鏡頭源Z坐標"
GetCameraEyePositionZHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraBoundMinX="當前可用鏡頭區域最小X坐標 [R]"
GetCameraBoundMinX="當前可用鏡頭區域最小X坐標"
GetCameraBoundMinXHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraBoundMinY="當前可用鏡頭區域最小Y坐標 [R]"
GetCameraBoundMinY="當前可用鏡頭區域最小Y坐標"
GetCameraBoundMinYHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraBoundMaxX="當前可用鏡頭區域最大X坐標 [R]"
GetCameraBoundMaxX="當前可用鏡頭區域最大X坐標"
GetCameraBoundMaxXHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraBoundMaxY="當前可用鏡頭區域最大Y坐標 [R]"
GetCameraBoundMaxY="當前可用鏡頭區域最大Y坐標"
GetCameraBoundMaxYHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetLastTransmissionDurationBJ="最後發言長度"
GetLastTransmissionDurationBJ="最後發言長度"
GetLastTransmissionDurationBJHint="最後一次使用'電影 - 播送單位消息'動作的單位發言時間."

I2R="轉換整數為實數"
I2R="轉換 ",~Integer," 為實數"
I2RHint=

S2R="轉換字符串為實數"
S2R="轉換 ",~String," 為實數"
S2RHint=

Deg2Rad="轉換角度為弧度"
Deg2Rad="轉換角度 ",~Degrees," 為弧度"
Deg2RadHint=

Rad2Deg="轉換弧度為角度"
Rad2Deg="轉換弧度 ",~Radians," 為角度"
Rad2DegHint=

YDWEDeg2R="轉換角度為實數"
YDWEDeg2R="轉換角度 ",~Degrees," 為實數"
YDWEDeg2RHint=

YDWERad2R="轉換弧度為實數"
YDWERad2R="轉換弧度 ",~Radians," 為實數"
YDWERad2RHint=

YDWER2Deg="轉換實數為角度"
YDWER2Deg="轉換實數 ",~Real," 為角度"
YDWER2DegHint=

YDWER2Rad="轉換實數為弧度"
YDWER2Rad="轉換實數 ",~Real," 為弧度"
YDWER2RadHint=

TimerGetElapsed="逝去時間"
TimerGetElapsed=~計時器," 的逝去時間"
TimerGetElapsedHint=

TimerGetRemaining="剩餘時間"
TimerGetRemaining=~計時器," 的剩餘時間"
TimerGetRemainingHint=

TimerGetTimeout="設置時間"
TimerGetTimeout=~計時器," 設置的時間"
TimerGetTimeoutHint=

GetDestructableLife="生命值"
GetDestructableLife=~可破壞物," 的當前生命值"
GetDestructableLifeHint=

GetDestructableMaxLife="最大生命值"
GetDestructableMaxLife=~可破壞物," 的最大生命值"
GetDestructableMaxLifeHint=

GetDestructableOccluderHeight="閉塞高度"
GetDestructableOccluderHeight=~可破壞物," 的閉塞高度"
GetDestructableOccluderHeightHint=

GetDestructableX="可破壞物所在X軸坐標 [R]"
GetDestructableX=~可破壞物," 所在X軸坐標"
GetDestructableXHint=

GetDestructableY="可破壞物所在Y軸坐標 [R]"
GetDestructableY=~可破壞物," 所在Y軸坐標"
GetDestructableYHint

YDWEIsEventPhysicalDamage="是物理傷害 [JAPI]"
YDWEIsEventPhysicalDamage="單位所受傷害是物理傷害"
YDWEIsEventPhysicalDamageHint="響應'受到傷害'單位事件,不能用在等待之後"

YDWEIsEventAttackDamage="是攻擊傷害 [JAPI]"
YDWEIsEventAttackDamage="單位所受傷害是攻擊傷害"
YDWEIsEventAttackDamageHint="響應'受到傷害'單位事件,不能用在等待之後"

YDWEIsEventRangedDamage="是遠程傷害 [JAPI]"
YDWEIsEventRangedDamage="單位所受傷害是遠程傷害"
YDWEIsEventRangedDamageHint="響應'受到傷害'單位事件,不能用在等待之後"

YDWEIsEventDamageType="傷害類型 [JAPI]"
YDWEIsEventDamageType="單位所受傷害的傷害類型是 ",~傷害類型
YDWEIsEventDamageTypeHint="響應'受到傷害'單位事件,不能用在等待之後"

YDWEIsEventWeaponType="武器類型 [JAPI]"
YDWEIsEventWeaponType="單位所受傷害的武器類型是 ",~武器類型
YDWEIsEventWeaponTypeHint="響應'受到傷害'單位事件,不能用在等待之後"

YDWEIsEventAttackType="攻擊類型 [JAPI]"
YDWEIsEventAttackType="單位所受傷害的攻擊類型是 ",~攻擊類型
YDWEIsEventAttackTypeHint="響應'受到傷害'單位事件,不能用在等待之後"

GetEventDamage="傷害值"
GetEventDamage="單位所受傷害"
GetEventDamageHint="響應'受到傷害'單位事件,指代單位所受傷害."

GetOrderPointX="命令發布點X坐標 [R]"
GetOrderPointX="命令發布點X坐標"
GetOrderPointXHint="用坐標代替點可以省去創建、刪除點的麻煩."

GetOrderPointY="命令發布點Y坐標 [R]"
GetOrderPointY="命令發布點Y坐標"
GetOrderPointYHint="用坐標代替點可以省去創建、刪除點的麻煩."

GetSpellTargetX="技能施放點X坐標"
GetSpellTargetX="獲取技能目標點的X坐標"
GetSpellTargetXHint="這是1.24的函數，但已加入函數庫，在1.20也可以使用。"

GetSpellTargetY="技能施放點Y坐標"
GetSpellTargetY="獲取技能目標點的Y坐標"
GetSpellTargetYHint="這是1.24的函數，但已加入函數庫，在1.20也可以使用。"

GetTournamentFinishSoonTimeRemaining="比賽剩餘時間"
GetTournamentFinishSoonTimeRemaining="比賽剩餘時間"
GetTournamentFinishSoonTimeRemainingHint="響應'比賽事件'遊戲將要結束. 單位為秒."

GetTimeOfDay="遊戲時間"
GetTimeOfDay="遊戲時間"
GetTimeOfDayHint="遊戲中的晝夜時間."

GetTimeOfDayScalePercentBJ="晝夜時間流逝速度"
GetTimeOfDayScalePercentBJ="晝夜時間流逝速度"
GetTimeOfDayScalePercentBJHint="百分比數值, 100為默認值."

GetStoredReal="緩存讀取實數 [C]"
GetStoredReal="從 ",~Game Cache," 中讀取實數,類別: ",~Category," 名稱: ",~文字
GetStoredRealHint="如果該值不存在則返回0."

GetItemLifeBJ="生命值"
GetItemLifeBJ=~物品," 的當前生命值"
GetItemLifeBJHint=

GetItemX="物品的X軸坐標 [R]"
GetItemX=~物品," 的X軸坐標"
GetItemXHint=

GetItemY="物品的Y軸坐標 [R]"
GetItemY=~物品," 的Y軸坐標"
GetItemYHint=

GetLightningColorRBJ="紅顏色值"
GetLightningColorRBJ=~Lightning," 的紅顏色值"
GetLightningColorRBJHint="取值範圍0-1. 可使用'閃電效果 - 改變顏色'動作來改變顏色值."

GetLightningColorGBJ="綠顏色值"
GetLightningColorGBJ=~Lightning," 的綠顏色值"
GetLightningColorGBJHint="取值範圍0-1. 可使用'閃電效果 - 改變顏色'動作來改變顏色值."

GetLightningColorBBJ="藍顏色值"
GetLightningColorBBJ=~Lightning," 的藍顏色值"
GetLightningColorBBJHint="取值範圍0-1. 可使用'閃電效果 - 改變顏色'動作來改變顏色值."

GetLightningColorABJ="Alpha通道值"
GetLightningColorABJ=~Lightning," 的Alpha通道值"
GetLightningColorABJHint="取值範圍0-1. Alpha通道值為0是完全透明的. 可使用'閃電效果 - 改變顏色'動作來改變Alpha通道值."

GetRandomReal="隨機實數"
GetRandomReal="隨機實數,最小值: ",~Minimum," 最大值: ",~Maximum
GetRandomRealHint=

GetRandomDirectionDeg="隨機角度"
GetRandomDirectionDeg="隨機角度"
GetRandomDirectionDegHint="0-360的隨機角度."

GetRandomPercentageBJ="隨機百分數"
GetRandomPercentageBJ="隨機百分數"
GetRandomPercentageBJHint="0-100的隨機實數."

DistanceBetweenPoints="兩點間距"
DistanceBetweenPoints=~點," 和 ",~點," 之間的距離"
DistanceBetweenPointsHint=

AngleBetweenPoints="兩點間方向"
AngleBetweenPoints=~點," 到 ",~點," 的角度"
AngleBetweenPointsHint="取值-180 - 180."

RMinBJ="取較小值"
RMinBJ="取(",~實數1,", ",~實數2,")中較小值"
RMinBJHint=

RMaxBJ="取較大值"
RMaxBJ="取(",~實數1,", ",~實數2,")中較大值"
RMaxBJHint=

RAbsBJ="絕對值"
RAbsBJ=~實數," 的絕對值"
RAbsBJHint=

RSignBJ="符號標誌"
RSignBJ=~實數," 的符號標誌"
RSignBJHint="負數為-1. 非負數為1."

ModuloReal="模"
ModuloReal=~被除數," mod ",~除數
ModuloRealHint="取模計算,例: 9.0 mod 2.5 = 1.5."

Pow="冪運算"
Pow=~實數," 的 ",~實數," 次冪"
PowHint=

SquareRoot="平方根"
SquareRoot=~實數," 的平方根"
SquareRootHint=

Sin="正弦(弧度) [R]"
Sin="Sin(",~Angle,")"
SinHint="採用弧度制計算. "

SinBJ="正弦(角度)"
SinBJ="Sin(",~Angle,")"
SinBJHint="採用角度制計算."

Cos="餘弦(弧度) [R]"
Cos="Cos(",~Angle,")"
CosHint="採用弧度制計算. "

CosBJ="餘弦(角度)"
CosBJ="Cos(",~Angle,")"
CosBJHint="採用角度制計算."

Tan="正切(弧度) [R]"
Tan="Tan(",~Angle,")"
TanHint="採用弧度制計算. "

TanBJ="正切(角度)"
TanBJ="Tan(",~Angle,")"
TanBJHint="採用角度制計算."

Asin="反正弦(弧度) [R]"
Asin="Asin(",~數值,")"
AsinHint="採用弧度制計算. 返回弧度取值-π/2 — π/2. "

AsinBJ="反正弦(角度)"
AsinBJ="Asin(",~數值,")"
AsinBJHint="採用角度制計算. 返回角度取值-90 — 90."

Acos="反餘弦(弧度) [R]"
Acos="Acos(",~數值,")"
AcosHint="採用弧度制計算. 返回弧度取值0 — π. "

AcosBJ="反餘弦(角度)"
AcosBJ="Acos(",~數值,")"
AcosBJHint="採用角度制計算. 返回角度取值0 — 180."

Atan="反正切(弧度) [R]"
Atan="Atan(",~數值,")"
AtanHint="採用弧度制計算. 返回弧度取值-π/2 — π/2. "

AtanBJ="反正切(角度)"
AtanBJ="Atan(",~數值,")"
AtanBJHint="採用角度制計算. 返回角度取值-90 — 90."

Atan2="反正切(Y:X)(弧度) [R]"
Atan2="Atan(",~Y," : ",~X,")"
Atan2Hint="採用弧度制計算. 返回弧度取值-π/2 — π/2. "

Atan2BJ="反正切(角度)(Y:X)"
Atan2BJ="Atan(",~Y," : ",~X,")"
Atan2BJHint="採用角度制計算. 返回角度取值-90 — 90."

YDWELogarithmLg="對數函數(10為底)<c kuhn製作>"
YDWELogarithmLg="Lg(",~x,")"
YDWELogarithmLgHint="10^n=x，那麼lg(x)=n，如lg(100)=2；鳴謝zyl910"

YDWELogarithmLn="對數函數(e為底)<c kuhn製作>"
YDWELogarithmLn="Ln(",~x,")"
YDWELogarithmLnHint="e^n=x，那麼ln(x)=n，e即自然對數，約等於2.718281828；鳴謝zyl910"

YDWELogarithmLog="對數函數(任意底)<c kuhn製作>"
YDWELogarithmLog="Log(",~a,")(",~b,")"
YDWELogarithmLogHint="a^n=b，那麼log(a)(b)=n，如log(2)(4)=2；鳴謝zyl910"

GetPlayerHandicapXPBJ="經驗增長率"
GetPlayerHandicapXPBJ=~Player," 的經驗增長率"
GetPlayerHandicapXPBJHint="百分比數值, 默認值為100."

GetPlayerHandicapBJ="生命障礙"
GetPlayerHandicapBJ=~Player," 的生命障礙"
GetPlayerHandicapBJHint="百分比數值, 默認值為100."

GetRectCenterX="中心X坐標"
GetRectCenterX=~矩形區域," 的中心X坐標"
GetRectCenterXHint=

GetRectCenterY="中心Y坐標"
GetRectCenterY=~矩形區域," 的中心Y坐標"
GetRectCenterYHint=

GetRectMinX="左下角X坐標"
GetRectMinX=~矩形區域," 的左下角X坐標"
GetRectMinXHint=

GetRectMinY="左下角Y坐標"
GetRectMinY=~矩形區域," 的左下角Y坐標"
GetRectMinYHint=

GetRectMaxX="右上角X坐標"
GetRectMaxX=~矩形區域," 的右上角X坐標"
GetRectMaxXHint=

GetRectMaxY="右上角Y坐標"
GetRectMaxY=~矩形區域," 的右上角Y坐標"
GetRectMaxYHint=

GetRectWidthBJ="寬度"
GetRectWidthBJ=~矩形區域," 的寬度"
GetRectWidthBJHint=

GetRectHeightBJ="高度"
GetRectHeightBJ=~矩形區域," 的高度"
GetRectHeightBJHint=

GetSoundDurationBJ="音效長度"
GetSoundDurationBJ=~音效," 的長度"
GetSoundDurationBJHint="單位為秒."

GetSoundFileDurationBJ="音樂長度"
GetSoundFileDurationBJ=~音樂," 的長度"
GetSoundFileDurationBJHint="單位為秒."

WaygateGetDestinationX="傳送門目的地X坐標"
WaygateGetDestinationX=~傳送門," 的目的地X坐標"
WaygateGetDestinationXHint=""

WaygateGetDestinationY="傳送門目的地Y坐標"
WaygateGetDestinationY=~傳送門," 的目的地Y坐標"
WaygateGetDestinationYHint=""

GetUnitState="屬性 [R]"
GetUnitState=~單位," 的 ",~Property
GetUnitStateHint=

GetUnitStateSwap="屬性"
GetUnitStateSwap=~Property," 對於 ",~單位
GetUnitStateSwapHint=

GetUnitLifePercent="生命百分比"
GetUnitLifePercent=~單位," 的生命百分比"
GetUnitLifePercentHint=

GetUnitManaPercent="魔法百分比"
GetUnitManaPercent=~單位," 的魔法百分比"
GetUnitManaPercentHint=

GetUnitX="單位所在X軸坐標 [R]"
GetUnitX=~單位," 所在X軸坐標"
GetUnitXHint=

GetUnitY="單位所在Y軸坐標 [R]"
GetUnitY=~單位," 所在Y軸坐標"
GetUnitYHint=

GetUnitFacing="面向角度"
GetUnitFacing=~單位," 的面向角度"
GetUnitFacingHint="採用角度制. 0度為正東方向, 90度為正北方向."

GetUnitMoveSpeed="當前移動速度"
GetUnitMoveSpeed=~單位," 的當前移動速度"
GetUnitMoveSpeedHint=

GetUnitDefaultMoveSpeed="默認移動速度"
GetUnitDefaultMoveSpeed=~單位," 的默認移動速度"
GetUnitDefaultMoveSpeedHint=

GetUnitAcquireRange="當前主動攻擊範圍"
GetUnitAcquireRange=~單位," 的當前主動攻擊範圍"
GetUnitAcquireRangeHint=

GetUnitDefaultAcquireRange="默認主動攻擊範圍"
GetUnitDefaultAcquireRange=~單位," 的默認主動攻擊範圍"
GetUnitDefaultAcquireRangeHint=

GetUnitTurnSpeed="當前轉身速度"
GetUnitTurnSpeed=~單位," 的當前轉身速度"
GetUnitTurnSpeedHint="轉身速度表示單位改變面向方向時的速度. 數值越小表示轉身越慢."

GetUnitDefaultTurnSpeed="默認轉身速度"
GetUnitDefaultTurnSpeed=~單位," 的默認轉身速度"
GetUnitDefaultTurnSpeedHint="轉身速度表示單位改變面向方向時的速度. 數值越小表示轉身越慢."

GetUnitPropWindow="當前轉向角度(弧度制) [R]"
GetUnitPropWindow=~單位," 的當前轉向角度(弧度制)"
GetUnitPropWindowHint="單位轉身時的轉向角度. 數值越大轉向幅度越大. "

GetUnitPropWindowBJ="當前轉向角度(角度制)"
GetUnitPropWindowBJ=~單位," 的當前轉向角度"
GetUnitPropWindowBJHint="單位轉身時的轉向角度. 數值越大轉向幅度越大."

GetUnitDefaultPropWindowBJ="默認轉向角度"
GetUnitDefaultPropWindowBJ=~單位," 的默認轉向角度"
GetUnitDefaultPropWindowBJHint="單位轉身時的轉向角度. 數值越大轉向幅度越大."

GetUnitFlyHeight="當前飛行高度"
GetUnitFlyHeight=~單位," 的當前飛行高度"
GetUnitFlyHeightHint="飛行單位可以直接改變飛行高度. 其他單位通過添加/刪除 替換為飛行單位的變身技能(如烏鴉形態)之後,也能改變飛行高度."

GetUnitDefaultFlyHeight="默認飛行高度"
GetUnitDefaultFlyHeight=~單位," 的默認飛行高度"
GetUnitDefaultFlyHeightHint="飛行單位可以直接改變飛行高度. 其他單位通過添加/刪除 替換為飛行單位的變身技能(如烏鴉形態)之後,也能改變飛行高度."

YDWEGetUnitAbilityState="技能屬性 [JAPI]"
YDWEGetUnitAbilityState=~單位," 的 ",~技能," 的 ",~狀態
YDWEGetUnitAbilityStateHint=""

YDWEGetUnitAbilityDataInteger="技能數據 (整數) [JAPI]"
YDWEGetUnitAbilityDataInteger=~單位," 的 ",~技能," 第 ",~等級," 級的 ",~數據
YDWEGetUnitAbilityDataIntegerHint=""

YDWEGetUnitAbilityDataReal="技能數據 (實數) [JAPI]"
YDWEGetUnitAbilityDataReal=~單位," 的 ",~技能," 第 ",~等級," 級的 ",~數據
YDWEGetUnitAbilityDataRealHint="數據A~數據I也就是物體編輯器裡按Ctrl+D後看到的DataA~DataI"

YDWEGetUnitAbilityDataString="技能數據 (字符串) [JAPI]"
YDWEGetUnitAbilityDataString=~單位," 的 ",~技能," 第 ",~等級," 級的 ",~數據
YDWEGetUnitAbilityDataStringHint=""

















// returns hashtable
LoadIntegerBJ="<1.24> 從哈希表提取整數"
LoadIntegerBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取整數"
LoadIntegerBJHint="如果不存在則返回0"

LoadInteger="<1.24> 從哈希表提取整數 [C]"
LoadInteger="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取整數"
LoadIntegerHint="如果不存在則返回0"

LoadRealBJ="<1.24> 從哈希表提取實數"
LoadRealBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取實數"
LoadRealBJHint="如果不存在則返回0.00"

LoadReal="<1.24> 從哈希表提取實數 [C]"
LoadReal="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取實數"
LoadRealHint="如果不存在則返回0.00"

LoadStringBJ="<1.24> 從哈希表提取字符串"
LoadStringBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取字符串"
LoadStringBJHint="如果不存在則返回空字符串"

LoadStr="<1.24> 從哈希表提取字符串 [C]"
LoadStr="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取字符串"
LoadStrHint="如果不存在則返回空"

LoadBooleanBJ="<1.24> 從哈希表提取布爾"
LoadBooleanBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取布爾"
LoadBooleanBJHint="如果不存在則返回False"

LoadBoolean="<1.24> 從哈希表提取布爾 [C]"
LoadBoolean="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取布爾"
LoadBooleanHint="如果不存在則返回False"

LoadPlayerHandleBJ="<1.24> 從哈希表提取玩家"
LoadPlayerHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取玩家"
LoadPlayerHandleBJHint="如果不存在則返回空"

LoadPlayerHandle="<1.24> 從哈希表提取玩家 [C]"
LoadPlayerHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取玩家"
LoadPlayerHandleHint="如果不存在則返回空"

LoadWidgetHandleBJ="<1.24> 從哈希表提取物體"
LoadWidgetHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取物體"
LoadWidgetHandleBJHint="如果不存在則返回空"

LoadWidgetHandle="<1.24> 從哈希表提取物體 [C]"
LoadWidgetHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取物體"
LoadWidgetHandleHint="如果不存在則返回空"

LoadDestructableHandleBJ="<1.24> 從哈希表提取可破壞物"
LoadDestructableHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取可破壞物"
LoadDestructableHandleBJHint="如果不存在則返回空"

LoadDestructableHandle="<1.24> 從哈希表提取可破壞物 [C]"
LoadDestructableHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取可破壞物"
LoadDestructableHandleHint="如果不存在則返回空"

LoadItemHandleBJ="<1.24> 從哈希表提取物品"
LoadItemHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取物品"
LoadItemHandleBJHint="如果不存在則返回空"

LoadItemHandle="<1.24> 從哈希表提取物品 [C]"
LoadItemHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取物品"
LoadItemHandleHint="如果不存在則返回空"

LoadUnitHandleBJ="<1.24> 從哈希表提取單位"
LoadUnitHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取單位"
LoadUnitHandleBJHint="如果不存在則返回空"

LoadUnitHandle="<1.24> 從哈希表提取單位 [C]"
LoadUnitHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取單位"
LoadUnitHandleHint="如果不存在則返回空"

LoadAbilityHandleBJ="<1.24> 從哈希表提取技能"
LoadAbilityHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取技能"
LoadAbilityHandleBJHint="如果不存在則返回空"

LoadAbilityHandle="<1.24> 從哈希表提取技能 [C]"
LoadAbilityHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取技能"
LoadAbilityHandleHint="如果不存在則返回空"

YDWELoadAbilityHandleBJ="<1.24> 從哈希表提取技能"
YDWELoadAbilityHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取技能"
YDWELoadAbilityHandleBJHint="如果不存在則返回空"

YDWELoadAbilityHandle="<1.24> 從哈希表提取技能 [C]"
YDWELoadAbilityHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取技能"
YDWELoadAbilityHandleHint="如果不存在則返回空"

LoadTimerHandleBJ="<1.24> 從哈希表提取計時器"
LoadTimerHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取計時器"
LoadTimerHandleBJHint="如果不存在則返回空"

LoadTimerHandle="<1.24> 從哈希表提取計時器 [C]"
LoadTimerHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取計時器"
LoadTimerHandleHint="如果不存在則返回空"

///LoadTriggerRegionHandleBJ="<1.24> 從哈希表提取 Region Handle"
///LoadTriggerRegionHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取"
///LoadTriggerRegionHandleBJHint="如果不存在則返回空"

LoadTriggerHandleBJ="<1.24> 從哈希表提取觸發器"
LoadTriggerHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取觸發器"
LoadTriggerHandleBJHint="如果不存在則返回空"

LoadTriggerHandle="<1.24> 從哈希表提取觸發器 [C]"
LoadTriggerHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取觸發器"
LoadTriggerHandleHint="如果不存在則返回空"

LoadTriggerConditionHandleBJ="<1.24> 從哈希表提取觸發條件"
LoadTriggerConditionHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取觸發條件"
LoadTriggerConditionHandleBJHint="如果不存在則返回空"

LoadTriggerConditionHandle="<1.24> 從哈希表提取觸發條件 [C]"
LoadTriggerConditionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取觸發條件"
LoadTriggerConditionHandleHint="如果不存在則返回空"

LoadTriggerActionHandleBJ="<1.24> 從哈希表提取觸發動作"
LoadTriggerActionHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取觸發動作"
LoadTriggerActionHandleBJHint="如果不存在則返回空"

LoadTriggerActionHandle="<1.24> 從哈希表提取觸發動作 [C]"
LoadTriggerActionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取觸發動作"
LoadTriggerActionHandleHint="如果不存在則返回空"

LoadTriggerEventHandleBJ="<1.24> 從哈希表提取觸發事件"
LoadTriggerEventHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取觸發事件"
LoadTriggerEventHandleBJHint="如果不存在則返回空"

LoadTriggerEventHandle="<1.24> 從哈希表提取觸發事件 [C]"
LoadTriggerEventHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取觸發事件"
LoadTriggerEventHandleHint="如果不存在則返回空"

LoadForceHandleBJ="<1.24> 從哈希表提取玩家組"
LoadForceHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取玩家組"
LoadForceHandleBJHint="如果不存在則返回空"

LoadForceHandle="<1.24> 從哈希表提取玩家組 [C]"
LoadForceHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取玩家組"
LoadForceHandleHint="如果不存在則返回空"

LoadGroupHandleBJ="<1.24> 從哈希表提取單位組"
LoadGroupHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取單位組"
LoadGroupHandleBJHint="如果不存在則返回空"

LoadGroupHandle="<1.24> 從哈希表提取單位組 [C]"
LoadGroupHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取單位組"
LoadGroupHandleHint="如果不存在則返回空"

LoadLocationHandleBJ="<1.24> 從哈希表提取點"
LoadLocationHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取點"
LoadLocationHandleBJHint="如果不存在則返回空"

LoadLocationHandle="<1.24> 從哈希表提取點 [C]"
LoadLocationHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取點"
LoadLocationHandleHint="如果不存在則返回空"

LoadRegionHandleBJ="<1.24> 從哈希表提取區域(不規則)"
LoadRegionHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取區域(不規則)"
LoadRegionHandleBJHint="如果不存在則返回空"

LoadRegionHandle="<1.24> 從哈希表提取區域(不規則) [C]"
LoadRegionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取區域(不規則)"
LoadRegionHandleHint="如果不存在則返回空"

LoadRectHandleBJ="<1.24> 從哈希表提取區域(矩型)"
LoadRectHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取區域(矩型)"
LoadRectHandleBJHint="如果不存在則返回空"

LoadRectHandle="<1.24> 從哈希表提取區域(矩型) [C]"
LoadRectHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取區域(矩型)"
LoadRectHandleHint="如果不存在則返回空"

LoadBooleanExprHandleBJ="<1.24> 從哈希表提取布爾表達式"
LoadBooleanExprHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取布爾表達式"
LoadBooleanExprHandleBJHint="如果不存在則返回空"

LoadBooleanExprHandle="<1.24> 從哈希表提取布爾表達式 [C]"
LoadBooleanExprHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取布爾表達式"
LoadBooleanExprHandleHint="如果不存在則返回空"

//LoadConditionFuncHandleBJ="<1.24> 從哈希表提取 Conditionfunc Handle"
//LoadConditionFuncHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取"
//LoadConditionFuncHandleBJHint="如果不存在則返回空"

//LoadFilterFuncHandleBJ="<1.24> 從哈希表提取 Filterfunc Handle"
//LoadFilterFuncHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取"
//LoadFilterFuncHandleBJHint="如果不存在則返回空"

LoadSoundHandleBJ="<1.24> 從哈希表提取音效"
LoadSoundHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取音效"
LoadSoundHandleBJHint="如果不存在則返回空"

LoadSoundHandle="<1.24> 從哈希表提取音效 [C]"
LoadSoundHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取音效"
LoadSoundHandleHint="如果不存在則返回空"

//LoadRaceHandleBJ="<1.24> 從哈希表提取 Race Handle"
//LoadRaceHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取"
//LoadRaceHandleBJHint="如果不存在則返回空"

LoadEffectHandleBJ="<1.24> 從哈希表提取特效"
LoadEffectHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取特效"
LoadEffectHandleBJHint="如果不存在則返回空"

LoadEffectHandle="<1.24> 從哈希表提取特效 [C]"
LoadEffectHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取特效"
LoadEffectHandleHint="如果不存在則返回空"

LoadUnitPoolHandleBJ="<1.24> 從哈希表提取單位池"
LoadUnitPoolHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取單位池"
LoadUnitPoolHandleBJHint="如果不存在則返回空"

LoadUnitPoolHandle="<1.24> 從哈希表提取單位池 [C]"
LoadUnitPoolHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取單位池"
LoadUnitPoolHandleHint="如果不存在則返回空"

LoadItemPoolHandleBJ="<1.24> 從哈希表提取物品池"
LoadItemPoolHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取物品池"
LoadItemPoolHandleBJHint="如果不存在則返回空"

LoadItemPoolHandle="<1.24> 從哈希表提取物品池 [C]"
LoadItemPoolHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取物品池"
LoadItemPoolHandleHint="如果不存在則返回空"

LoadQuestHandleBJ="<1.24> 從哈希表提取任務"
LoadQuestHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取任務"
LoadQuestHandleBJHint="如果不存在則返回空"

LoadQuestHandle="<1.24> 從哈希表提取任務 [C]"
LoadQuestHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取任務"
LoadQuestHandleHint="如果不存在則返回空"

LoadQuestItemHandleBJ="<1.24> 從哈希表提取任務要求"
LoadQuestItemHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取任務要求"
LoadQuestItemHandleBJHint="如果不存在則返回空"

LoadQuestItemHandle="<1.24> 從哈希表提取任務要求 [C]"
LoadQuestItemHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取任務要求"
LoadQuestItemHandleHint="如果不存在則返回空"

LoadDefeatConditionHandleBJ="<1.24> 從哈希表提取失敗條件"
LoadDefeatConditionHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取失敗條件"
LoadDefeatConditionHandleBJHint="如果不存在則返回空"

LoadDefeatConditionHandle="<1.24> 從哈希表提取失敗條件 [C]"
LoadDefeatConditionHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取失敗條件"
LoadDefeatConditionHandleHint="如果不存在則返回空"

LoadTimerDialogHandleBJ="<1.24> 從哈希表提取計時器窗口"
LoadTimerDialogHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取計時器窗口"
LoadTimerDialogHandleBJHint="如果不存在則返回空"

LoadTimerDialogHandle="<1.24> 從哈希表提取計時器窗口 [C]"
LoadTimerDialogHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取計時器窗口"
LoadTimerDialogHandleHint="如果不存在則返回空"

LoadLeaderboardHandleBJ="<1.24> 從哈希表提取排行榜"
LoadLeaderboardHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取排行榜"
LoadLeaderboardHandleBJHint="如果不存在則返回空"

LoadLeaderboardHandle="<1.24> 從哈希表提取排行榜 [C]"
LoadLeaderboardHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取排行榜"
LoadLeaderboardHandleHint="如果不存在則返回空"

LoadMultiboardHandleBJ="<1.24> 從哈希表提取多面板"
LoadMultiboardHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取多面板"
LoadMultiboardHandleBJHint="如果不存在則返回空"

LoadMultiboardHandle="<1.24> 從哈希表提取多面板 [C]"
LoadMultiboardHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取多面板"
LoadMultiboardHandleHint="如果不存在則返回空"

LoadMultiboardItemHandleBJ="<1.24> 從哈希表提取多面板項目"
LoadMultiboardItemHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取多面板項目"
LoadMultiboardItemHandleBJHint="如果不存在則返回空"

LoadMultiboardItemHandle="<1.24> 從哈希表提取多面板項目 [C]"
LoadMultiboardItemHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取多面板項目"
LoadMultiboardItemHandleHint="如果不存在則返回空"

LoadTrackableHandleBJ="<1.24> 從哈希表提取可追蹤物"
LoadTrackableHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取可追蹤物"
LoadTrackableHandleBJHint="如果不存在則返回空"

LoadTrackableHandle="<1.24> 從哈希表提取可追蹤物 [C]"
LoadTrackableHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取可追蹤物"
LoadTrackableHandleHint="如果不存在則返回空"

LoadDialogHandleBJ="<1.24> 從哈希表提取對話框"
LoadDialogHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取對話框"
LoadDialogHandleBJHint="如果不存在則返回空"

LoadDialogHandle="<1.24> 從哈希表提取對話框 [C]"
LoadDialogHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取對話框"
LoadDialogHandleHint="如果不存在則返回空"

LoadButtonHandleBJ="<1.24> 從哈希表提取對話框按鈕"
LoadButtonHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取對話框按鈕"
LoadButtonHandleBJHint="如果不存在則返回空"

LoadButtonHandle="<1.24> 從哈希表提取對話框按鈕 [C]"
LoadButtonHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取對話框按鈕"
LoadButtonHandleHint="如果不存在則返回空"

//LoadVersionHandleBJ="<1.24> 從哈希表提取 Version Handle"
//LoadVersionHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取"
//LoadVersionHandleBJHint="如果不存在則返回空"

//LoadItemTypeHandleBJ="<1.24> 從哈希表提取 Itemtype Handle"
//LoadItemTypeHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取"
//LoadItemTypeHandleBJHint="如果不存在則返回空"

LoadTextTagHandleBJ="<1.24> 從哈希表提取漂浮文字"
LoadTextTagHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取漂浮文字"
LoadTextTagHandleBJ="如果不存在則返回空"

LoadTextTagHandle="<1.24> 從哈希表提取漂浮文字 [C]"
LoadTextTagHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取漂浮文字"
LoadTextTagHandle="如果不存在則返回空"

LoadLightningHandleBJ="<1.24> 從哈希表提取閃電效果"
LoadLightningHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取閃電效果"
LoadLightningHandleBJHint="如果不存在則返回空"

LoadLightningHandle="<1.24> 從哈希表提取閃電效果 [C]"
LoadLightningHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取閃電效果"
LoadLightningHandleHint="如果不存在則返回空"

LoadImageHandleBJ="<1.24> 從哈希表提取圖象"
LoadImageHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取圖象"
LoadImageHandleBJHint="如果不存在則返回空"

LoadImageHandle="<1.24> 從哈希表提取圖象 [C]"
LoadImageHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取圖象"
LoadImageHandleHint="如果不存在則返回空"

LoadUbersplatHandleBJ="<1.24> 從哈希表提取地面紋理變化"
LoadUbersplatHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取地面紋理變化"
LoadUbersplatHandleBJHint="如果不存在則返回空"

LoadUbersplatHandle="<1.24> 從哈希表提取地面紋理變化 [C]"
LoadUbersplatHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取地面紋理變化"
LoadUbersplatHandleHint="如果不存在則返回空"

LoadFogStateHandleBJ="<1.24> 從哈希表提取迷霧狀態"
LoadFogStateHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取迷霧狀態"
LoadFogStateHandleBJHint="如果不存在則返回空"

LoadFogStateHandle="<1.24> 從哈希表提取迷霧狀態 [C]"
LoadFogStateHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取迷霧狀態"
LoadFogStateHandleHint="如果不存在則返回空"

LoadFogModifierHandleBJ="<1.24> 從哈希表提取可見度修正器"
LoadFogModifierHandleBJ="在子索引 ",~Value," 主索引 ",~Value," 的 ",~Hashtable," 內提取可見度修正器"
LoadFogModifierHandleBJHint="如果不存在則返回空"

LoadFogModifierHandle="<1.24> 從哈希表提取可見度修正器 [C]"
LoadFogModifierHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取可見度修正器"
LoadFogModifierHandleHint="如果不存在則返回空"

LoadHashtableHandle="<1.24> 從哈希表提取哈希表 [C]"
LoadHashtableHandle="在 ",~Hashtable," 的主索引 ",~Value," 子索引 ",~Value," 內提取哈希表"
LoadHashtableHandleHint="如果不存在則返回空"

// returns string

OperatorString="連接字符串"
OperatorString=~字符串1," + ",~字符串2
OperatorStringHint=

    ="自定義代碼 [C]"
    ="代碼: ",~Jass代碼
    Hint="輸入一行Jass代碼"

GetObjectName="物體名稱 [C]"
GetObjectName=~物體ID," 的名稱"
GetObjectNameHint="如'A01Z',物體編輯器中物體的名字"

SubStringBJ="截取字符串"
SubStringBJ="截取 ",~字符串," 的 ",~Start," - ",~End," 字節部分"
SubStringBJHint="例: 截取''Grunts stink''的2 - 4字節部分 = ''run''."

SubString="截取字符串 [R]"
SubString="截取 ",~字符串," 的 ",~Start," - ",~End," 字節部分(不包括首字節)"
SubStringHint="例: 截取''Grunts stink''的2 - 4字節部分 = ''un''."

YDWEGetPlayerColorString="附加上玩家顏色"
YDWEGetPlayerColorString="|c[",~玩家,"]",~Start,"|r"
YDWEGetPlayerColorStringHint=

YDWEId2S="轉換Id為字符串"
YDWEId2S="需要轉換的Id為：",~整數
YDWEId2SHint="將一個單位、物品等目標的Id轉換成字符串；如'spsh'轉換後為spsh。"


I2S="轉換整數為字符串"
I2S="轉換 ",~Integer," 為字符串"
I2SHint=

R2S="轉換實數為字符串"
R2S="轉換 ",~Real," 為字符串"
R2SHint=

YDWE_PreloadSL_GetFile="獲取存檔名(存檔名單)[YDWE]"
YDWE_PreloadSL_GetFile="為",~玩家,"在","『",~目錄名,"』","下","，","獲","取","索","引","為","[",~整數,"]","的","存","檔","名"
YDWE_PreloadSL_GetFileHint="高級功能，獲取指定目錄下某個玩家存檔文件的名字，填寫正確的索引，即可獲得對應存檔名。"

YDWEGetLocalVariableString="局部變量"
YDWEGetLocalVariableString="local_",~str
YDWEGetLocalVariableStringHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableStringArray="局部變量數組"
YDWEGetLocalVariableStringArray="local_",~str,"[",~index,"]"
YDWEGetLocalVariableStringArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetStringByInteger="獲取 字符串 (整數路徑)"
YDWEGetStringByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取字符串"
YDWEGetStringByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取字符串數據。"

YDWEGetStringByString="獲取 字符串 (字符串路徑)"
YDWEGetStringByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取字符串"
YDWEGetStringByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取字符串數據。"

R2SW="格式轉換實數為字符串"
R2SW="轉換 ",~Real," 為字符串,最小寬度: ",~Width," ,小數位數: ",~Precision
R2SWHint="如: 轉換(1.234, 7, 2)後為''   1.23''. 轉換(1.234, 2, 5)後為''1.23400''."

OrderId2StringBJ="轉換命令ID為字符串"
OrderId2StringBJ="轉換 ",~Order," 為命令字符串"
OrderId2StringBJHint="如''harvest'', ''move'', ''smart'', ''attack''都是命令字符串."

UnitId2StringBJ="轉換單位類型為字符串"
UnitId2StringBJ="轉換 ",~單位類型," 為字符串"
UnitId2StringBJHint=

GetLocalizedString="本地字符串 [R]"
GetLocalizedString="本地字符串: ",~文字
GetLocalizedStringHint="獲取ui\framedef\globalstrings.fdf中定義的字符串."

StringIdentity="本地字符串"
StringIdentity="本地字符串: ",~文字
StringIdentityHint="獲取ui\framedef\globalstrings.fdf中定義的字符串."

GetLocalizedHotkey="本地熱鍵 "
GetLocalizedHotkey="本地熱鍵: ",~文字
GetLocalizedHotkeyHint="獲取ui\miscui.txt中定義的熱鍵."

StringCase="大小寫轉換"
StringCase="轉換 ",~字符串," 為 ",~Lower/Upper Case," 形式"
StringCaseHint=

GetDestructableName="物件名字"
GetDestructableName=~物件," 的名字"
GetDestructableNameHint=

GetEventPlayerChatString="輸入的聊天信息"
GetEventPlayerChatString="輸入的聊天信息"
GetEventPlayerChatStringHint=

GetEventPlayerChatStringMatched="匹配的聊天信息"
GetEventPlayerChatStringMatched="匹配的聊天信息"
GetEventPlayerChatStringMatchedHint=

GetSaveBasicFilename="存檔文件名"
GetSaveBasicFilename="存檔文件名"
GetSaveBasicFilenameHint="響應'遊戲 - 保存進度'事件."

GetAbilityName="技能名稱"
GetAbilityName=~技能," 的名稱"
GetAbilityNameHint=

GetAbilityEffectBJ="技能效果路徑名"
GetAbilityEffectBJ=~技能," 的 ",~EffectType," 路徑名(序號: ",~Index,")"
GetAbilityEffectBJHint="返回技能效果的模型路徑,不管該效果是否存在.實際上就是技能編輯器中按Ctrl+D看到的文本內容. 該效果有多個模型時,序號表示取哪一個模型,如果該序號對應的文本內容不存在則返回上一序號."

GetAbilitySoundBJ="技能音效名"
GetAbilitySoundBJ=~技能," 的 ",~SoundType," 名字"
GetAbilitySoundBJHint="同樣,實際上就是技能編輯器中按Ctrl+D看到的文本內容."

GetStoredString="讀取字符串 [C]"
GetStoredString="從 ",~Game Cache," 中讀取字符串,類別: ",~Category," 名稱: ",~文字
GetStoredStringHint="如果該值不存在,則返回空字符串. 注意,空字符串不等於null"

GetHeroProperName="英雄稱謂"
GetHeroProperName=~Hero," 的稱謂"
GetHeroProperNameHint="如聖騎士會返回'無懼的布贊恩'而不是'聖騎士'."

MultiboardGetTitleText="多面板標題"
MultiboardGetTitleText=~Multiboard," 的標題"
MultiboardGetTitleTextHint=

GetPlayerName="玩家名字"
GetPlayerName=~Player," 的名字"
GetPlayerNameHint=

GetTriggerName="觸發名字"
GetTriggerName="當前觸發的名字"
GetTriggerNameHint=

GetUnitName="單位名字"
GetUnitName=~單位," 的名字"
GetUnitNameHint=

GetItemName="物品名字"
GetItemName=~物品," 的名字"
GetItemNameHint=

// returns location

     ="自定義代碼 [C]"
     ="代碼: ",~Jass代碼
     Hint="輸入一行Jass代碼"

GetRectCenter="矩形區域中心"
GetRectCenter=~矩形區域," 的中心點"
GetRectCenterHint="會創建點."

GetRandomLocInRect="矩形區域內隨機點"
GetRandomLocInRect=~矩形區域," 內的隨機點"
GetRandomLocInRectHint="會創建點."

YDWEGetLocalVariableLocation="局部變量"
YDWEGetLocalVariableLocation="local_",~point
YDWEGetLocalVariableLocationHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableLocationArray="局部變量數組"
YDWEGetLocalVariableLocationArray="local_",~point,"[",~index,"]"
YDWEGetLocalVariableLocationArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetLocationByInteger="獲取 點 (整數路徑)"
YDWEGetLocationByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取點"
YDWEGetLocationByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取點數據。"

YDWEGetLocationByString="獲取 點 (字符串路徑)"
YDWEGetLocationByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取點"
YDWEGetLocationByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取點數據。"

OffsetLocation="坐標位移點"
OffsetLocation=~指定點," 坐標位移 (",~X,", ",~Y,")處"
OffsetLocationHint="會創建點."

PolarProjectionBJ="極坐標位移點"
PolarProjectionBJ="從 "~指定點," 開始,距離 ",~Distance," ,方向為 ",~Angle," 度的位移處"
PolarProjectionBJHint="會創建點."

CameraSetupGetDestPositionLoc="鏡頭目標點"
CameraSetupGetDestPositionLoc=~鏡頭," 的目標點"
CameraSetupGetDestPositionLocHint="會創建點."

GetCameraTargetPositionLoc="當前鏡頭目標點"
GetCameraTargetPositionLoc="當前鏡頭目標點"
GetCameraTargetPositionLocHint="會創建點. 注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraEyePositionLoc="當前鏡頭源位置"
GetCameraEyePositionLoc="當前鏡頭源位置"
GetCameraEyePositionLocHint="會創建點. 注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

Location="坐標點"
Location="坐標(",~X,", ",~Y,")"
LocationHint="會創建點."

GetDestructableLoc="可破壞物位置"
GetDestructableLoc=~可破壞物," 的位置"
GetDestructableLocHint="會創建點."

GetOrderPointLoc="命令發布點"
GetOrderPointLoc="命令發布點"
GetOrderPointLocHint="響應'發布指定點目標命令'單位事件. 會創建點."

GetSpellTargetLoc="技能施放點"
GetSpellTargetLoc="技能施放點"
GetSpellTargetLocHint="響應'技能施放'單位事件. 注意技能施放結束將無法捕獲該點. 會創建點."

GetItemLoc="物品位置"
GetItemLoc=~物品," 的位置"
GetItemLocHint="會創建點."

WaygateGetDestinationLocBJ="傳送門目的地"
WaygateGetDestinationLocBJ=~傳送門," 的目的地"
WaygateGetDestinationLocBJHint="會創建點."

GetPlayerStartLocationLoc="玩家開始位置"
GetPlayerStartLocationLoc=~Player," 的遊戲開始位置"
GetPlayerStartLocationLocHint="會創建點."

GetUnitLoc="單位位置"
GetUnitLoc=~單位," 的位置"
GetUnitLocHint="會創建點."

GetUnitRallyPoint="單位集結點"
GetUnitRallyPoint=~單位," 的集結點位置"
GetUnitRallyPointHint="如果單位沒有設置集結點,則返回null. 設置自己為集結點可取消集結點設置. 會創建點."

// returns region
CreateRegion="新建區域 [R]"
CreateRegion="新建區域"
CreateRegionHint="會創建一個新的不規則區域,如果不往該區域添加點或地區,則該區域無效果."

GetTriggeringRegion="觸發區域 [R]"
GetTriggeringRegion="觸發區域"
GetTriggeringRegionHint="響應單位進入/離開不規則區域事件."

YDWEGetRegionByInteger="獲取 區域 (整數路徑)"
YDWEGetRegionByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取區域"
YDWEGetRegionByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取區域數據。"

YDWEGetRegionByString="獲取 區域 (字符串路徑)"
YDWEGetRegionByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取區域"
YDWEGetRegionByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取區域數據。"

// returns rect
GetCurrentCameraBoundsMapRectBJ="當前可用鏡頭範圍"
GetCurrentCameraBoundsMapRectBJ="當前可用鏡頭範圍"
GetCurrentCameraBoundsMapRectBJHint="會創建矩形區域. 注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線."

GetCameraBoundsMapRect="初始可用鏡頭範圍"
GetCameraBoundsMapRect="初始可用鏡頭範圍"
GetCameraBoundsMapRectHint="在地圖編輯器的地圖屬性中設置."

GetPlayableMapRect="可用地圖區域"
GetPlayableMapRect="可用地圖區域"
GetPlayableMapRectHint="在地圖編輯器的地圖屬性中設置."

GetEntireMapRect="完整地圖區域"
GetEntireMapRect="完整地圖區域"
GetEntireMapRectHint="在地圖編輯器的地圖屬性中設置. 會創建矩形區域."

OffsetRectBJ="位移創建矩形區域
OffsetRectBJ="與 ",~矩形區域," 位移 (",~X,", ",~Y,") 坐標之後等價的矩形區域"
OffsetRectBJHint="會創建矩形區域."

YDWEGetLocalVariableRect="局部變量"
YDWEGetLocalVariableRect="local_",~rt
YDWEGetLocalVariableRectpHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableRectArray="局部變量數組"
YDWEGetLocalVariableRectArray="local_",~rt,"[",~index,"]"
YDWEGetLocalVariableRectArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetRectByInteger="獲取 地區 (整數路徑)"
YDWEGetRectByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取地區"
YDWEGetRectByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取地區數據。"

YDWEGetRectByString="獲取 區域 (字符串路徑)"
YDWEGetRectByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取地區"
YDWEGetRectByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取地區數據。"

YDWEGetRect="新建矩形區域(指定中心坐標)[YDWE]"
YDWEGetRect="以坐標(",~x,",",~y,")為中心，創建長",~實數,"，寬",~實數,"的矩形區域。"
YDWEGetRectHint="會創建矩形區域"

RectFromCenterSizeBJ="新建矩形區域(指定中心點)"
RectFromCenterSizeBJ="以 ",~指定點," 為中心,寬 ",~數值," ,高 ",~數值," 的矩形區域"
RectFromCenterSizeBJHint="會創建矩形區域."

Rect="新建矩形區域(指定邊角坐標)"
Rect="左下角為(",~X1,", ",~Y1,"),右上角為(",~X2,", ",~Y2,")的矩形區域"
RectHint="會創建矩形區域."

RectFromLoc="新建矩形區域(指定邊角點)"
RectFromLoc="左下角為 ",~點1," ,右上角為 ",~點2," 的矩形區域"
RectFromLocHint="會創建矩形區域."

// returns unit
CreateUnit="新建單位(指定坐標) [R]"
CreateUnit="新建 ",~玩家," 的 ",~單位," 在(",~X,",",~Y,"),面向角度:",~Face," 度"
CreateUnitHint="在坐標創建單位，不能被'最後創建的單位'獲得。"

CreateUnitAtLoc="新建單位(指定點) [R]"
CreateUnitAtLoc="新建 ",~玩家," 的 ",~單位," 在 ",~點," 面向角度:",~Face," 度"
CreateUnitAtLocHint=

CreateCorpse="新建屍體 [R]"
CreateCorpse="新建 ",~玩家," 的 ",~單位," 的屍體在(",~X,",",~Y,"),面向角度:",~Face," 度"
CreateCorpseHint=

CreateBlightedGoldmine="新建不死族金礦 [R]"
CreateBlightedGoldmine="新建 ",~玩家," 的不死族金礦在(",~X,",",~Y,"),面向角度:",~Face," 度"
CreateBlightedGoldmineHint=

GetLastCreatedUnit="最後創建的單位"
GetLastCreatedUnit="最後創建的單位"
GetLastCreatedUnitHint="最後一個使用'單位 - 創建'動作創建的單位."

GetLastRestoredUnitBJ="最後讀取的單位"
GetLastRestoredUnitBJ="最後讀取的單位"
GetLastRestoredUnitBJHint="最後一個使用'遊戲緩存 - 讀取單位'動作創建的單位."

GetLastReplacedUnitBJ="最後替換的單位"
GetLastReplacedUnitBJ="最後替換的單位"
GetLastReplacedUnitBJHint="最後一個使用'單位 - 替換'替換的單位."

GetLastHauntedGoldMine="最後創建的不死族金礦"
GetLastHauntedGoldMine="最後創建的不死族金礦"
GetLastHauntedGoldMineHint="最後一個使用'中立建築 - 創建不死族金礦'創建的不死族金礦."

GetEnumUnit="選取單位"
GetEnumUnit="選取單位"
GetEnumUnitHint="使用'選取單位做動作'時, 指代相應的單位."

GetFilterUnit="匹配單位"
GetFilterUnit="匹配單位"
GetFilterUnitHint="在'選取單位滿足條件'之類功能的條件中,指代被判斷單位."

FirstOfGroup="單位組中第一個單位"
FirstOfGroup=~單位組," 中第一個單位"

      ="自定義代碼 [C]"
      ="代碼: ",~Jass代碼
      Hint="輸入一行Jass代碼"

YDWEGetLocalVariableUnit="局部變量"
YDWEGetLocalVariableUnit="local_",~u
YDWEGetLocalVariableUnitHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableUnitArray="局部變量數組"
YDWEGetLocalVariableUnitArray="local_",~u,"[",~index,"]"
YDWEGetLocalVariableUnitArrayHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetUnitByInteger="獲取 單位 (整數路徑)"
YDWEGetUnitByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取單位"
YDWEGetUnitByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取單位數據。"

YDWEGetUnitByString="獲取 單位 (字符串路徑)"
YDWEGetUnitByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取單位"
YDWEGetUnitByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取單位數據。"

GetLastAbilityCastingUnit="獲取最後結束施放特殊技能的單位"
GetLastAbilityCastingUnit="獲取最後結束施放特殊技能的單位"
GetLastAbilityCastingUnitHint="響應單位釋放特殊技能事件，當技能釋放完畢後，可以獲取最後施放特殊技能的單位。"

GetLastAbilityTargetUnit="獲取最後被特殊技能命中的單位"
GetLastAbilityTargetUnit="獲取最後被特殊技能命中的單位"
GetLastAbilityTargetUnitHint="響應單位釋放可以命中目標的特殊技能事件，如鉤子、月神箭；當技能命中目標後，可以獲取最後被特殊技能命中的單位。"

GroupPickRandomUnit="單位組中隨機單位"
GroupPickRandomUnit=~單位組," 中隨機選取的一個單位"
GroupPickRandomUnitHint=

GetAttackedUnitBJ="被攻擊單位"
GetAttackedUnitBJ="被攻擊單位"
GetAttackedUnitBJHint="響應'被攻擊'單位事件."

GetAttacker="攻擊單位"
GetAttacker="攻擊單位"
GetAttackerHint="響應'被攻擊'單位事件."

GetBuyingUnit="購買者"
GetBuyingUnit="購買者"
GetBuyingUnitHint="響應'出售單位','出售物品'或'抵押物品'單位事件."

GetCancelledStructure="被取消的建築"
GetCancelledStructure="被取消的建築"
GetCancelledStructureHint="響應'取消建造建築'單位事件."

GetSpellAbilityUnit="施法單位"
GetSpellAbilityUnit="施法單位"
GetSpellAbilityUnitHint="響應'施放技能'單位事件."

GetConstructedStructure="完成的建築"
GetConstructedStructure="完成的建築"
GetConstructedStructureHint="響應'完成建造建築'單位事件."

GetConstructingStructure="正在建造的建築"
GetConstructingStructure="正在建造的建築"
GetConstructingStructureHint="響應'開始建造建築'單位事件."

GetEventDamageSource="傷害來源"
GetEventDamageSource="傷害來源"
GetEventDamageSourceHint="響應'受到傷害'單位事件."

GetDecayingUnit="腐化的單位"
GetDecayingUnit="腐化的單位"
GetDecayingUnitHint="響應'開始腐化'單位事件."

GetDyingUnit="死亡單位"
GetDyingUnit="死亡單位"
GetDyingUnitHint="響應'死亡'單位事件."

GetEnteringUnit="進入的單位"
GetEnteringUnit="進入的單位"
GetEnteringUnitHint="響應'單位進入區域'單位事件."

GetManipulatingUnit="操作物品的單位"
GetManipulatingUnit="操作物品的單位"
GetManipulatingUnitHint="響應'使用/獲得/丟失物品'單位事件."

GetKillingUnitBJ="凶手單位"
GetKillingUnitBJ="凶手單位"
GetKillingUnitBJHint="響應'死亡'單位事件. 如果不是被單位所殺(比如負數邪惡光環)則返回null."

GetLearningUnit="學習技能的英雄"
GetLearningUnit="學習技能的英雄"
GetLearningUnitHint="響應'學習技能'單位事件."

GetLeavingUnit="離開的單位"
GetLeavingUnit="離開的單位"
GetLeavingUnitHint="響應'單位離開區域'單位事件."

GetLevelingUnit="升級的英雄"
GetLevelingUnit="升級的英雄"
GetLevelingUnitHint="響應'提升等級'單位事件."

GetLoadedUnitBJ="被裝載單位"
GetLoadedUnitBJ="被裝載單位"
GetLoadedUnitBJHint="響應'被裝載'單位事件."

GetOrderedUnit="發布命令的單位"
GetOrderedUnit="發布命令的單位"
GetOrderedUnitHint="響應'發布命令'單位事件."

GetChangingUnit="被改變所有者的單位"
GetChangingUnit="被改變所有者的單位"
GetChangingUnitHint="響應'改變所有者'單位事件."

GetResearchingUnit="研究科技的單位"
GetResearchingUnit="研究科技的單位"
GetResearchingUnitHint="響應'開始/取消/完成科技研究'單位事件."

GetRevivableUnit="可復活英雄"
GetRevivableUnit="可復活英雄"
GetRevivableUnitHint="響應'變為可復活的'單位事件."

GetRevivingUnit="復活英雄"
GetRevivingUnit="復活英雄"
GetRevivingUnitHint="響應'開始/取消/完成復活'單位事件."

GetSellingUnit="販賣者"
GetSellingUnit="販賣者"
GetSellingUnitHint="響應'出售單位','出售物品'或'抵押物品'單位事件."

GetSoldUnit="被販賣單位"
GetSoldUnit="被販賣單位"
GetSoldUnitHint="響應'出售單位'單位事件."

GetSummonedUnit="召喚單位"
GetSummonedUnit="召喚單位"
GetSummonedUnitHint="響應'召喚單位'單位事件,指代被召喚單位."

GetSummoningUnit="召喚者"
GetSummoningUnit="召喚者"
GetSummoningUnitHint="響應'召喚單位'單位事件."

GetOrderTargetUnit="命令發布目標"
GetOrderTargetUnit="命令發布目標"
GetOrderTargetUnitHint="響應'發布指定物體目標命令'單位事件並以單位為目標時."

GetSpellTargetUnit="技能施放目標"
GetSpellTargetUnit="技能施放目標"
GetSpellTargetUnitHint="響應'施放技能'單位事件並以單位為目標時. 注意: 技能施放結束將無法捕獲施放目標."

GetEventTargetUnit="事件目標單位"
GetEventTargetUnit="事件目標單位"
GetEventTargetUnitHint="響應'注意到/獲取攻擊目標'單位事件,指代目標單位."

GetTrainedUnit="訓練單位"
GetTrainedUnit="訓練單位"
GetTrainedUnitHint="響應'完成訓練單位'單位事件,指代被訓練單位."

GetTransportUnitBJ="運輸單位"
GetTransportUnitBJ="運輸單位"
GetTransportUnitBJHint="響應'被裝載'單位事件.指代作為載體的單位."

GetTriggerUnit="觸發單位"
GetTriggerUnit="觸發單位"
GetTriggerUnitHint=

YDWECinSActor="演員單位"
YDWECinSActor="電影系統裡編號為(",~整數,")的演員"
YDWECinSActorHint="獲取Script System電影系統中的演員單位。"

YDWEGetLastPoolAbstractedUnit="最後從單位池裡取出的單位"
YDWEGetLastPoolAbstractedUnit="最後從單位池裡取出的單位"
YDWEGetLastPoolAbstractedUnitHint="該單位必須是由YDWE提供的<選擇放置單位>動作生成，不然無法獲取。"

GetUnitRallyUnit="單位集結點目標"
GetUnitRallyUnit=~單位," 的集結點目標"
GetUnitRallyUnitHint="如果指定單位沒有設置集結點到單位目標,則返回null."

PlaceRandomUnit="選擇放置單位 [R]"
PlaceRandomUnit="從 ",~單位池," 中為 ",~玩家," 任意選擇一個單位並放置到點( ",~X," , ",~Y," )"," 面向 ",~度
PlaceRandomUnitHint="從單位池中隨機選取一個單位類型."

// returns unitpool
CreateUnitPool="新建單位池 [R]"
CreateUnitPool="新建的空單位池"
CreateUnitPoolHint="會創建單位池。"

YDWEGetLastUnitPool="最後創建的單位池 [YDWE]"
YDWEGetLastUnitPool="最後創建的單位池"
YDWEGetLastUnitPoolHint="該單位池必須是由YDWE提供的<創建單位池>動作生成，不然無法獲取。"

// returns unitcode

       ="自定義代碼 [C]"
       ="代碼: ",~Jass代碼
       Hint="輸入一行Jass代碼"

GetUnitTypeId="指定單位的類型"
GetUnitTypeId=~單位," 的類型"
GetUnitTypeIdHint=

YDWEGetLocalVariableUnitID="局部變量"
YDWEGetLocalVariableUnitID="local_",~uid
YDWEGetLocalVariableUnitIDHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableUnitIDArray="局部變量數組"
YDWEGetLocalVariableUnitIDArray="local_",~uid,"[",~index,"]"
YDWEGetLocalVariableUnitIDArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetUnitIDByInteger="獲取 單位類型 (整數路徑)"
YDWEGetUnitIDByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取單位類型"
YDWEGetUnitIDByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取單位類型數據。"

YDWEGetUnitIDByString="獲取 單位類型 (字符串路徑)"
YDWEGetUnitIDByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取單位類型"
YDWEGetUnitIDByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取單位類型數據。"

ChooseRandomCreepBJ="隨機中立單位類型"
ChooseRandomCreepBJ="一個等級 ",~Level," 的隨機中立單位類型"
ChooseRandomCreepBJHint="-1代表所有等級."

ChooseRandomNPBuildingBJ="隨機中立建築類型"
ChooseRandomNPBuildingBJ="隨機中立建築類型"
ChooseRandomNPBuildingBJHint=

String2UnitIdBJ="轉換字符串為單位類型"
String2UnitIdBJ="轉換 ",~字符串," 為單位類型"
String2UnitIdBJHint=

GetTrainedUnitType="訓練單位類型"
GetTrainedUnitType="訓練單位類型"
GetTrainedUnitTypeHint="響應'開始/取消/完成訓練單位'單位事件, 指代所訓練的單位類型."


// returns ordercode
String2OrderIdBJ="轉換命令字符串為命令ID"
String2OrderIdBJ="轉換 ",~字符串," 為命令ID"
String2OrderIdBJHint="如''harvest'', ''move'', ''smart'', ''attack''都是命令字符串."

UnitId2OrderIdBJ="轉換單位類型為命令ID"
UnitId2OrderIdBJ="轉換 ",~單位類型," 為命令ID"
UnitId2OrderIdBJHint=

GetIssuedOrderIdBJ="發布的命令ID"
GetIssuedOrderIdBJ="發布的命令ID"
GetIssuedOrderIdBJHint="響應'發布命令'單位事件."

GetUnitCurrentOrder="當前命令ID"
GetUnitCurrentOrder=~單位," 的當前命令ID."
GetUnitCurrentOrderHint=


// returns destructable
GetLastCreatedDestructable="最後創建的可破壞物"
GetLastCreatedDestructable="最後創建的可破壞物"
GetLastCreatedDestructableHint="最後一個使用 '可破壞物 - 創建'動作創建的可破壞物."


CreateDestructableZ="新建可破壞物 [R]"
CreateDestructableZ="新建的 ",~可破壞物類型," 在(",~X,",",~Y,",",~Z,"),面向角度: ",~Direction," 尺寸縮放: ",~Scale," 樣式: ",~Variation
CreateDestructableZHint="坐標為(X,Y,Z)格式. 面向角度採用角度制,0度為正東方向,90度為正北方向."

CreateDeadDestructableZ="新建可破壞物(死亡的) [R]"
CreateDeadDestructableZ="新建死亡的 ",~可破壞物類型," 在(",~X,",",~Y,",",~Z"),面向角度: ",~Direction," 尺寸縮放: ",~Scale," 樣式: ",~Variation
CreateDeadDestructableZHint="坐標為(X,Y,Z)格式. 面向角度採用角度制,0度為正東方向,90度為正北方向."

RandomDestructableInRectSimpleBJ="矩形區域內的隨機可破壞物"
RandomDestructableInRectSimpleBJ=~矩形區域," 內隨機選取一個可破壞物"
RandomDestructableInRectSimpleBJHint=

RandomDestructableInRectBJ="矩形區域內的隨機可破壞物(指定條件)"
RandomDestructableInRectBJ=~矩形區域," 內滿足 ",~條件," 的一個隨機可破壞物"
RandomDestructableInRectBJHint="使用'匹配的可破壞物'來指代條件中用於比較的可破壞物."

GetEnumDestructable="選取的可破壞物"
GetEnumDestructable="選取的可破壞物"
GetEnumDestructableHint="使用'選取可破壞物做動作'時, 指代相應的可破壞物."

GetFilterDestructable="匹配的可破壞物"
GetFilterDestructable="匹配的可破壞物"
GetFilterDestructableHint="在'選取可破壞物滿足條件'之類功能的條件中,指代被判斷的可破壞物."

GetDyingDestructable="死亡的可破壞物"
GetDyingDestructable="死亡的可破壞物"
GetDyingDestructableHint="響應'可破壞物死亡'事件."

GetOrderTargetDestructable="命令發布目標(可破壞物)"
GetOrderTargetDestructable="命令發布目標"
GetOrderTargetDestructableHint="響應'發布指定物體目標命令'單位事件並以可破壞物為目標時."

GetSpellTargetDestructable="技能施放目標(可破壞物)"
GetSpellTargetDestructable="技能施放目標"
GetSpellTargetDestructableHint="響應'施放技能'單位事件並以可破壞物為目標時. 注意: 技能施放結束將無法捕獲施放目標."

GetUnitRallyDestructable="單位集結點目標"
GetUnitRallyDestructable=~單位," 的集結點目標"
GetUnitRallyDestructableHint="如果指定單位沒有設置集結點到可破壞物上,則返回null."

YDWEGetDestructableByInteger="獲取 可破壞物 (整數路徑)"
YDWEGetDestructableByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取可破壞物"
YDWEGetDestructableByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取可破壞物數據。"

YDWEGetDestructableByString="獲取 可破壞物 (字符串路徑)"
YDWEGetDestructableByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取可破壞物"
YDWEGetDestructableByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取可破壞物數據。"


// returns destructablecode
GetDestructableTypeId="指定可破壞物的類型"
GetDestructableTypeId=~可破壞物," 的類型"
GetDestructableTypeIdHint=


// returns item
CreateItem="新建物品 [R]"
CreateItem="新建 ",~物品," 在(",~X,",",~Y,")"
CreateItemHint=

GetLastCreatedItem="最後創建的物品"
GetLastCreatedItem="最後創建的物品"
GetLastCreatedItemHint="最後一個使用'物品 - 創建'或'英雄 - 創建物品給英雄'動作創建的物品."

GetLastRemovedItem="最後丟棄的物品"
GetLastRemovedItem="最後丟棄的物品"
GetLastRemovedItemHint="最後一個使用'英雄 - 丟棄物品'動作丟棄的物品."

GetLastMovedItemInItemSlot="最後在物品欄中移動的物品 [YDWE]"
GetLastMovedItemInItemSlot="最後在物品欄中移動的物品"
GetLastMovedItemInItemSlotHint="最後一個單位在物品欄中移動的物品"

GetLastCombinedItem="最後被合成的物品 [YDWE]"
GetLastCombinedItem="最後被合成的物品"
GetLastCombinedItemHint="最後由物品合成系統合成的物品"

UnitDropItem="單位掉落的物品"
UnitDropItem="讓 ",~單位," 掉落一件 ",~物品
UnitDropItemHint="在單位所在區域(32x32)內的隨機點創建一個物品，注意當單位站在不可通行路徑旁邊時，該物品可能掉落其中而無法拾取。"

YDWEGetLocalVariableItem="局部變量"
YDWEGetLocalVariableItem="local_",~it
YDWEGetLocalVariableItemHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableItemArray="局部變量數組"
YDWEGetLocalVariableItemArray="local_",~it,"[",~index,"]"
YDWEGetLocalVariableItemArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetItemByInteger="獲取 物品 (整數路徑)"
YDWEGetItemByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取物品"
YDWEGetItemByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取物品數據。"

YDWEGetItemByString="獲取 物品 (字符串路徑)"
YDWEGetItemByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取物品"
YDWEGetItemByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取物品數據。"

RandomItemInRectSimpleBJ="矩形區域內隨機物品"
RandomItemInRectSimpleBJ=~矩形區域," 內隨機選取的一個物品"
RandomItemInRectSimpleBJHint=

RandomItemInRectBJ="矩形區域內隨機物品(指定條件)"
RandomItemInRectBJ=~矩形區域," 內滿足 ",~條件," 的一個隨機物品"
RandomItemInRectBJHint="使用'匹配物品'來指代條件中用於比較的物品."

GetEnumItem="選取物品"
GetEnumItem="選取物品"
GetEnumItemHint="使用'選取物品做動作'時, 指代相應的物品."

GetFilterItem="匹配物品"
GetFilterItem="匹配物品"
GetFilterItemHint="在'選取物品滿足條件'之類功能的條件中,指代被判斷單位."

UnitItemInSlot="單位持有物品"
UnitItemInSlot=~單位," 物品欄第 ",~Index," 格的物品"
UnitItemInSlotHint="第一個單位格的位置為0."

UnitItemInSlotBJ="單位持有物品"
UnitItemInSlotBJ=~單位," 物品欄第 ",~Index," 格的物品"
UnitItemInSlotBJHint="第一個單位格的位置為1."

GetItemOfTypeFromUnitBJ="單位持有物品(指定類型)"
GetItemOfTypeFromUnitBJ=~單位," 所持有的 ",~物品類型
GetItemOfTypeFromUnitBJHint="注意：有多個相同物品時，只能獲取第一個物品。"

GetManipulatedItem="被操作物品"
GetManipulatedItem="被操作物品"
GetManipulatedItemHint="響應'使用/得到/丟棄物品'單位事件."

GetSoldItem="被售出物品"
GetSoldItem="被售出物品"
GetSoldItemHint="響應'出售物品'或'抵押物品'單位事件."

GetOrderTargetItem="命令發布目標"
GetOrderTargetItem="命令發布目標"
GetOrderTargetItemHint="響應'發布指定物體目標命令'單位事件並以物品為目標時."

GetSpellTargetItem="技能施放目標"
GetSpellTargetItem="技能施放目標"
GetSpellTargetItemHint="響應施放技能單位事件並以物品為目標時. 注意: 技能施放結束將無法捕獲施放目標."

PlaceRandomItem="選擇放置物品 [R]"
PlaceRandomItem="從 ",~物品池," 中任意選擇一個物品並放置到( ",~X," , ",~Y," )點"
PlaceRandomItemHint=

YDWEGetLastPoolAbstractedItem="最後從物品池裡取出的物品[YDWE]"
YDWEGetLastPoolAbstractedItem="最後從物品池裡取出的物品"
YDWEGetLastPoolAbstractedItemHint="該物品必須是由YDWE提供的<選擇放置物品>動作生成，不然無法獲取。"

// returns itemtype
GetItemType="指定物品的分類"
GetItemType=~物品," 的分類"
GetItemTypeHint=


// returns itemcode

        ="自定義代碼 [C]"
        ="代碼: ",~Jass代碼
        Hint="輸入一行Jass代碼"

GetItemTypeId="指定物品的類型"
GetItemTypeId=~物品," 的類型"
GetItemTypeIdHint=

YDWEGetLocalVariableItemID="局部變量"
YDWEGetLocalVariableItemID="local_",~itid
YDWEGetLocalVariableItemIDHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableItemIDArray="局部變量數組"
YDWEGetLocalVariableItemIDArray="local_",~itid,"[",~index,"]"
YDWEGetLocalVariableItemIDArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetItemIDByInteger="獲取 物品類型 (整數路徑)"
YDWEGetItemIDByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取物品類型"
YDWEGetItemIDByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取物品類型數據。"

YDWEGetItemIDByString="獲取 物品類型 (字符串路徑)"
YDWEGetItemIDByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取物品類型"
YDWEGetItemIDByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取物品類型數據。"

ChooseRandomItemExBJ="隨機物品類型(指定分類)"
ChooseRandomItemExBJ="等級 ",~Level," 的隨機 ",~Class," 物品類型"
ChooseRandomItemExBJHint="該功能為新版函數,使用新版等級作為參照對象. -1表示任何等級."

ChooseRandomItemBJ="隨機物品類型"
ChooseRandomItemBJ="等級 ",~Level," 的隨機物品類型"
ChooseRandomItemBJHint="該功能為ROC版函數,使用舊版等級作為參照對象. -1表示任何等級."

// returns itempool
CreateItemPool="新建物品池 [R]"
CreateItemPool="新建的空物品池"
CreateItemPoolHint=會創建物品池.

YDWEGetLastItemPool="最後創建的物品池 [YDWE]"
YDWEGetLastItemPool="最後創建的物品池"
YDWEGetLastItemPoolHint="該物品池必須是由YDWE提供的<創建物品池>動作生成，不然無法獲取。"

// returns techcode
GetResearched="被研究科技"
GetResearched="被研究科技"
GetResearchedHint="響應'開始/取消/完成科技研究'單位事件."


// returns abilcode

         ="自定義代碼 [C]"
         ="代碼: ",~Jass代碼
         Hint="輸入一行Jass代碼"

GetSpellAbilityId="施放技能"
GetSpellAbilityId="施放技能"
GetSpellAbilityIdHint="響應施放技能單位事件, 指代被施放的技能."

GetLearnedSkill="學習技能 [R]"
GetLearnedSkill="學習技能"
GetLearnedSkillHint="響應'學習技能'單位事件, 指代被學習的技能."

YDWEGetAbilityIDByInteger="獲取 技能 (整數路徑)"
YDWEGetAbilityIDByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取技能"
YDWEGetAbilityIDByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取技能數據。"

YDWEGetAbilityIDByString="獲取 技能 (字符串路徑)"
YDWEGetAbilityIDByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取技能"
YDWEGetAbilityIDByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取技能數據。"

YDWEGetLocalVariableAbilityID="局部變量"
YDWEGetLocalVariableAbilityID="local_",~abid
YDWEGetLocalVariableAbilityIDHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableAbilityIDArray="局部變量數組"
YDWEGetLocalVariableAbilityIDArray="local_",~abid,"[",~index,"]"
YDWEGetLocalVariableAbilityIDArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

// returns heroskillcode
GetLearnedSkillBJ="學習技能"
GetLearnedSkillBJ="學習技能"
GetLearnedSkillBJHint="響應'學習技能'單位事件, 指代被學習的技能. 新函數在'技能'類別中."


// returns player
GetEnumPlayer="選取玩家"
GetEnumPlayer="選取玩家"
GetEnumPlayerHint="使用'選取玩家做動作'時, 指代相應的玩家."

GetFilterPlayer="匹配玩家"
GetFilterPlayer="匹配玩家"
GetFilterPlayerHint="在'選取玩家滿足條件'之類功能的條件中,指代被判斷玩家."

GetOwningPlayer="單位所有者"
GetOwningPlayer=~單位," 的所有者"
GetOwningPlayerHint=

YDWEGetPlayerByInteger="獲取 玩家 (整數路徑)"
YDWEGetPlayerByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取玩家"
YDWEGetPlayerByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取玩家數據。"

YDWEGetPlayerByString="獲取 玩家 (字符串路徑)"
YDWEGetPlayerByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取玩家"
YDWEGetPlayerByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取玩家數據。"

GetItemPlayer="物品所屬玩家"
GetItemPlayer=~物品," 的所屬玩家"
GetItemPlayerHint="與持有者無關,默認為中立被動玩家."

ForcePickRandomPlayer="玩家組中隨機玩家"
ForcePickRandomPlayer=~玩家組," 中隨機抽取的一名玩家."
ForcePickRandomPlayerHint=

GetLocalPlayer="本地玩家 [R]"
GetLocalPlayer="本地玩家"
GetLocalPlayerHint="指代玩家自己,所以對每個玩家返回值都不一樣. 如果不清楚該函數的話千萬別用,因為很可能因為不同步而導致掉線."

ConvertedPlayer="轉換玩家索引號為玩家"
ConvertedPlayer="玩家 ",~Player Index
ConvertedPlayerHint="玩家索引號取值1-16."

GetChangingUnitPrevOwner="原所有者"
GetChangingUnitPrevOwner="原所有者"
GetChangingUnitPrevOwnerHint="響應'改變所有者'單位事件,指代單位原來的所有者."

GetTriggerPlayer="觸發玩家"
GetTriggerPlayer="觸發玩家"
GetTriggerPlayerHint=

LeaderboardGetIndexedPlayerBJ="玩家所在排行榜位置"
LeaderboardGetIndexedPlayerBJ="第 ",~Position," 位玩家在 ",~Leaderboard," 中"
LeaderboardGetIndexedPlayerBJHint=

          ="自定義代碼 [C]"
          ="代碼: ",~Jass代碼
          Hint="輸入一行Jass代碼"


// returns group
           ="自定義代碼 [C]"
           ="代碼: ",~Jass代碼
           Hint="輸入一行Jass代碼"

 CreateNUnitsAtLoc="創建單位(面向角度) [C]"
 CreateNUnitsAtLoc="創建 ",~Number," 個 ",~單位," 給 ",~Player," 在 ",~指定點," ,面向角度為 ",~Direction," 度"
 CreateNUnitsAtLocHint="面向角度採用角度制,0度為正東方向,90度為正北方向. 使用'最後創建的單位組'來獲取創建的所有單位. 使用'最後創建的單位'來獲取創建的單個單位."

CreateGroup="新建的單位組 [R]"
CreateGroup="新建的空單位組"
CreateGroupHint="會創建單位組."

GetLastCreatedGroup="最後創建的單位組"
GetLastCreatedGroup="最後創建的單位組"
GetLastCreatedGroupHint="最後一批通過'單位 - 創建'動作創建的單位."

YDWEGetLocalVariableGroup="局部變量"
YDWEGetLocalVariableGroup="local_",~g
YDWEGetLocalVariableGroupHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableGroupArray="局部變量數組"
YDWEGetLocalVariableGroupArray="local_",~g,"[",~index,"]"
YDWEGetLocalVariableGroupArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetGroupByInteger="獲取 單位組 (整數路徑)"
YDWEGetGroupByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取單位組"
YDWEGetGroupByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取單位組數據。"

YDWEGetGroupByString="獲取 單位組 (字符串路徑)"
YDWEGetGroupByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取單位組"
YDWEGetGroupByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取單位組數據。"

GetRandomSubGroup="單位組中隨機單位"
GetRandomSubGroup="隨機獲取 ",~Count," 個單位從 ",~單位組
GetRandomSubGroupHint="會創建單位組.該函數不能使用設置 bj_wantDestroyGroup=true來清除group,會導致該動作無效."

GetUnitsInRectAll="矩形區域內的單位"
GetUnitsInRectAll=~矩形區域," 內的所有單位"
GetUnitsInRectAllHint="會創建單位組."

GetUnitsInRectOfPlayer="矩形區域內的玩家單位"
GetUnitsInRectOfPlayer=~矩形區域," 內屬於 ",~Player," 的所有單位"
GetUnitsInRectOfPlayerHint="會創建單位組."

GetUnitsInRectMatching="矩形區域內的單位(指定條件)"
GetUnitsInRectMatching=~矩形區域," 內滿足 ",~條件," 的所有單位"
GetUnitsInRectMatchingHint="使用'匹配單位'指代條件中用於比較的單位. 會創建單位組."

GetUnitsInRangeOfLocAll="圓範圍內單位"
GetUnitsInRangeOfLocAll="半徑為 ",~Radius," 圓心為 ",~指定點," 的圓範圍內所有單位"
GetUnitsInRangeOfLocAllHint="會創建單位組."

GetUnitsInRangeOfLocMatching="圓範圍內單位(指定條件)"
GetUnitsInRangeOfLocMatching="半徑為 ",~Radius," 圓心為 ",~指定點," 且滿足 ",~條件," 的所有單位"
GetUnitsInRangeOfLocMatchingHint="使用'匹配單位'指代條件中用於比較的單位. 會創建單位組."

GetUnitsOfPlayerAll="玩家單位"
GetUnitsOfPlayerAll="屬於 ",~Player," 的所有單位"
GetUnitsOfPlayerAllHint="會創建單位組."

GetUnitsOfPlayerAndTypeId="玩家單位(指定單位類型)"
GetUnitsOfPlayerAndTypeId="屬於 ",~Player," 的所有 ",~單位類型
GetUnitsOfPlayerAndTypeIdHint="會創建單位組."

GetUnitsOfPlayerMatching="玩家單位(指定條件)"
GetUnitsOfPlayerMatching="屬於 ",~Player," 並滿足 ",~條件," 的所有單位"
GetUnitsOfPlayerMatchingHint="使用'匹配單位'指代條件中用於比較的單位. 會創建單位組."

GetUnitsOfTypeIdAll="所有指定類型單位"
GetUnitsOfTypeIdAll="所有 ",~單位類型
GetUnitsOfTypeIdAllHint="會創建單位組."

GetUnitsSelectedAll="玩家選擇單位"
GetUnitsSelectedAll=~Player," 選擇的所有單位"
GetUnitsSelectedAllHint="不能用於觸發條件. 會創建單位組."


// returns force
CreateForce="新建玩家組 [R]"
CreateForce="新建空玩家組"
CreateForceHint="會創建玩家組."

GetPlayersAll="所有玩家"
GetPlayersAll="所有玩家"
GetPlayersAllHint="包括未使用玩家和中立玩家."

GetPlayersByMapControl="所有指定控制者的玩家"
GetPlayersByMapControl="所有 ",~Control Type," 控制的玩家"
GetPlayersByMapControlHint="會創建玩家組."

GetPlayersMatching="所有符合條件的玩家"
GetPlayersMatching="所有符合 ",~條件," 的玩家"
GetPlayersMatchingHint="使用'匹配玩家'指代條件中用於比較的玩家,包括未使用玩家和中立玩家. 會創建玩家組."

GetPlayersAllies="玩家的盟友"
GetPlayersAllies="所有 ",~Player," 的聯盟玩家"
GetPlayersAlliesHint="需要雙方互為聯盟狀態,包括自己,不包括中立玩家. 會創建玩家組."

GetPlayersEnemies="玩家的敵人"
GetPlayersEnemies="所有 ",~Player," 的敵對玩家"
GetPlayersEnemiesHint="對其敵對的所有玩家,不包括中立玩家. 會創建玩家組."

GetForceOfPlayer="轉換玩家為玩家組"
GetForceOfPlayer="轉換 ",~Player," 為玩家組"
GetForceOfPlayerHint="會創建玩家組."

// returns race
GetPlayerRace="玩家的種族"
GetPlayerRace=~Player," 的種族"
GetPlayerRaceHint=

GetUnitRace="單位種族"
GetUnitRace=~單位," 所屬種族"
GetUnitRaceHint="物體編輯器中設置的單位所屬種族."


// returns camerasetup
GetCurrentCameraSetup="玩家當前鏡頭"
GetCurrentCameraSetup="玩家當前鏡頭"
GetCurrentCameraSetupHint="注意:該函數對各玩家返回值不同,請確定你知道自己在做什麼,否則很容易引起掉線. 會創建鏡頭對象,但每個玩家只會有一個當前鏡頭."


// returns fogmodifier
ConvertFogModifier="轉換整數地址為可見度修正器"
ConvertFogModifier="轉換可見度修正器( ",~整數地址,")"
ConvertFogModifierHint="用於取得該整數地址所表示的可見度修正器.如果沒有可見度修正器,則無效."

CreateFogModifierRect="新建可見度修正器(矩形區域) [R]"
CreateFogModifierRect="新建的 ",~玩家," 可見度修正器. 可見度: ",~FogStateVisible," 影響區域: ",~矩形區域," (對盟友 ",~共享," 視野, ",~覆蓋," 單位視野)"
CreateFogModifierRectHint="會創建可見度修正器."

CreateFogModifierRadius="新建可見度修正器(圓範圍) [R]"
CreateFogModifierRadius="新建的 ",~玩家," 可見度修正器. 可見度: ",~FogStateVisible," 圓心坐標:(",~X,",",~Y,") 半徑: ",~數值," (對盟友 ",~共享," 視野, ",~覆蓋," 單位視野)"
CreateFogModifierRadiusHint="會創建可見度修正器."

GetLastCreatedFogModifier="最後創建的可見度修正器"
GetLastCreatedFogModifier="最後創建的可見度修正器"
GetLastCreatedFogModifierHint="最後一個由'可見度 - 創建可見度修正器'動作創建的可見度修正器."

// returns trigger
CreateTrigger="新建觸發 [R]"
CreateTrigger="新建觸發"
CreateTriggerHint="會創建一個新的觸發器,如果對該功能不熟悉請慎用."

GetTriggeringTrigger="當前觸發"
GetTriggeringTrigger="當前觸發"
GetTriggeringTriggerHint="當前所運行的觸發器."

YDWEGetTriggerByInteger="獲取 觸發器 (整數路徑)"
YDWEGetTriggerByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取觸發器"
YDWEGetTriggerByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取觸發器數據。"

YDWEGetTriggerByString="獲取 觸發器 (字符串路徑)"
YDWEGetTriggerByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取觸發器"
YDWEGetTriggerByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取觸發器數據。"

// returns triggercondition
YDWEGetTriggerConditionByInteger="獲取 觸發器條件 (整數路徑)"
YDWEGetTriggerConditionByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取觸發器條件"
YDWEGetTriggerConditionByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取觸發器條件數據。"

YDWEGetTriggerConditionByString="獲取 觸發器條件 (字符串路徑)"
YDWEGetTriggerConditionByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取觸發器條件"
YDWEGetTriggerConditionByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取觸發器條件數據。"

// returns triggeraction
YDWEGetTriggerActionByInteger="獲取 觸發器動作 (整數路徑)"
YDWEGetTriggerActionByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取觸發器動作"
YDWEGetTriggerActionByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取觸發器動作數據。"

YDWEGetTriggerActionByString="獲取 觸發器動作 (字符串路徑)"
YDWEGetTriggerActionByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取觸發器動作"
YDWEGetTriggerActionByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取觸發器動作數據。"

// returns event
YDWEGetTriggerEventByInteger="獲取 事件 (整數路徑)"
YDWEGetTriggerEventByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取事件"
YDWEGetTriggerEventByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取事件數據。"

YDWEGetTriggerEventByString="獲取 事件 (字符串路徑)"
YDWEGetTriggerEventByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取事件"
YDWEGetTriggerEventByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取事件數據。"

// returns force
YDWEGetForceByInteger="獲取 勢力 (整數路徑)"
YDWEGetForceByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取勢力"
YDWEGetForceByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取勢力數據。"

YDWEGetForceByString="獲取 勢力 (字符串路徑)"
YDWEGetForceByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取勢力"
YDWEGetForceByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取勢力數據。"

// returns boolexpr
YDWEGetBoolexprByInteger="獲取 布爾表達式 (整數路徑)"
YDWEGetBoolexprByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取布爾表達式"
YDWEGetBoolexprByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取布爾表達式數據。"

YDWEGetBoolexprByString="獲取 布爾表達式 (字符串路徑)"
YDWEGetBoolexprByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取布爾表達式"
YDWEGetBoolexprByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取布爾表達式數據。"

// returns gamedifficulty
GetGameDifficulty="當前遊戲難度"
GetGameDifficulty="當前遊戲難度"
GetGameDifficultyHint=


// returns aidifficulty
GetAIDifficulty="玩家的AI難度"
GetAIDifficulty=~Player," 的對戰AI難度"
GetAIDifficultyHint="對非AI玩家返回普通難度."


// returns gamespeed
GetGameSpeed="當前遊戲速度"
GetGameSpeed="當前遊戲速度"
GetGameSpeedHint=


// returns mapcontrol
GetPlayerController="玩家控制者"
GetPlayerController=~Player," 的控制者"
GetPlayerControllerHint=


// returns playercolor
GetPlayerColor="玩家顏色"
GetPlayerColor=~Player," 的顏色"
GetPlayerColorHint=


// returns playerslotstate
GetPlayerSlotState="玩家遊戲狀態"
GetPlayerSlotState=~Player," 的遊戲狀態"
GetPlayerSlotStateHint=

// returns effect


AddSpecialEffect="新建特效(創建到坐標) [R]"
AddSpecialEffect="新建特效 ",~Model File," 在(",~X,",",~Y,")處"
AddSpecialEffectHint=會創建特效.

AddSpecialEffectLoc="新建特效(創建到點) [R]"
AddSpecialEffectLoc="新建特效 ",~Model File," 在 ",~指定點," 處"
AddSpecialEffectLocHint=會創建特效.

AddSpecialEffectTarget="新建特效(創建到單位) [R]"
AddSpecialEffectTarget="新建特效 ",~Model File," 並綁定到 ",~單位," 的 ",~Attachment Point," 附加點上"
AddSpecialEffectTargetHint=會創建特效.

//AddSpellEffect
//AddSpellEffectLoc
//AddSpellEffectTarget

AddSpellEffectById="新建特效(指定技能，創建到坐標) [R]"
AddSpellEffectById=~技能," 的 ",~EffectType," , 創建到坐標(",~X,",",~Y,")"
AddSpellEffectByIdHint=會創建特效.

AddSpellEffectByIdLoc="新建特效(指定技能，創建到點) [R]"
AddSpellEffectByIdLoc=~技能," 的 ",~EffectType," , 創建到 ",~指定點
AddSpellEffectByIdLocHint=會創建特效.

AddSpellEffectTargetById="新建特效(指定技能，創建到單位) [R]"
AddSpellEffectTargetById=~技能," 的 ",~EffectType," , 綁定到 ",~單位," 的 ",~String," 附加點"
AddSpellEffectTargetByIdHint=會創建特效.

GetLastCreatedEffectBJ="最後創建的特效"
GetLastCreatedEffectBJ="最後創建的特效"
GetLastCreatedEffectBJHint="最後一個使用'特殊效果 - 創建特效'動作創建的效果."

YDWEGetLocalVariableEffect="局部變量"
YDWEGetLocalVariableEffect="local_",~e
YDWEGetLocalVariableEffectpHint="獲取一個局部變量，參數處填入該變量的名字;局部變量僅在當前觸發器下有效。"

YDWEGetLocalVariableEffectArray="局部變量數組"
YDWEGetLocalVariableEffectArray="local_",~e,"[",~index,"]"
YDWEGetLocalVariableEffectArrayHint="獲取一個局部變量數組，參數處填入該變量的名字和數組索引;局部變量僅在當前觸發器下有效。"

YDWEGetEffectByInteger="獲取 特效 (整數路徑)"
YDWEGetEffectByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取特效"
YDWEGetEffectByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取特效數據。"

YDWEGetEffectByString="獲取 特效 (字符串路徑)"
YDWEGetEffectByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取特效"
YDWEGetEffectByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取特效數據。"

// returns lightning
//AddLightning

AddLightning="新建閃電效果 [R]"
AddLightning="新建閃電效果: ",~閃電效果," (",~Boolean,"檢查可見性) 起始點:("~X,",",~Y,") 終結點:(",~X,",",~Y,")"
AddLightningHint="會創建閃電效果. 允許檢查可見性則在起始點和終結點都不可見時將不創建閃電效果."

AddLightningEx="新建閃電效果(指定Z軸) [R]"
AddLightningEx="新建閃電效果: ",~閃電效果," (",~Boolean,"檢查可見性) 起始點:("~X,",",~Y,",",~Z,") 終結點:(",~X,",",~Y,",",~Z,")"
AddLightningExHint="會創建閃電效果. 允許檢查可見性則在起始點和終結點都不可見時將不創建閃電效果."

GetLastCreatedLightningBJ="最後創建的閃電效果"
GetLastCreatedLightningBJ="最後創建的閃電效果"
GetLastCreatedLightningBJHint="最後一個使用'閃電效果 - 創建'動作創建的閃電效果."

YDWEGetLightningByInteger="獲取 閃電 (整數路徑)"
YDWEGetLightningByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取閃電"
YDWEGetLightningByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取閃電數據。"

YDWEGetLightningByString="獲取 閃電 (字符串路徑)"
YDWEGetLightningByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取閃電"
YDWEGetLightningByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取閃電數據。"

// returns image
GetLastCreatedImage="最後創建的圖像"
GetLastCreatedImage="最後創建的圖像"
GetLastCreatedImageHint="最後一個使用'圖像 - 創建'動作創建的圖像."

CreateImage="新建圖像 [R]"
CreateImage="新建圖像: ",~Image," 大小:(",~X,",",~Y,",",~Z,") 創建點:(",~X,",",~Y,",",~Z,") 原點坐標:(",~X,",",~Y,",",~Z,") 圖像類型: ",~Type
CreateImageHint="使用'圖像 - 設置永久渲染狀態'動作才能顯示圖像. 大小、創建點和原點格式為(X,Y,Z). 創建點作為圖像的左下角位置. 會創建圖像."

// returns ubersplat
CreateUbersplat="新建地面紋理變化 [R]"
CreateUbersplat="新建的地面紋理變化在點(",~X,",",~Y,"),使用圖像: ",~Type," 顏色值為(",~Red,",",~Green,",",~Blue,") Alpha值為",~Transparency," (",~Enable/Disable," 暫停狀態, ",~Enble/Disable," 跳過出生動畫)"
CreateUbersplatHint="顏色值和Alpha值取值範圍0-255. 使用'地面紋理變化 - 設置永久渲染狀態' 來顯示創建的紋理變化. 暫停狀態表示動畫播放完畢後是否繼續保留該紋理變化. 會創建紋理變化."

GetLastCreatedUbersplat="最後創建的地面紋理變化"
GetLastCreatedUbersplat="最後創建的地面紋理變化"
GetLastCreatedUbersplatHint="最後一個使用'地面紋理 - 創建'動作創建的紋理變化."

// returns weathereffect
AddWeatherEffect="新建天氣效果 [R]"
AddWeatherEffect="新建的在 ",~矩形區域," 的天氣效果: ",~WeatherId
AddWeatherEffectHint="會創建天氣效果."

GetLastCreatedWeatherEffect="最後創建的天氣效果"
GetLastCreatedWeatherEffect="最後創建的天氣效果"
GetLastCreatedWeatherEffectHint="最後一個使用'環境 - 創建天氣效果'動作創建的天氣效果."

// returns terraindeformation
ConvertTerrainde="轉換整數地址為地形變化"
ConvertTerrainde="轉換地形變化( ",~整數地址,")"
ConvertTerraindeHint="用於取得該整數地址所表示的天氣效果.如果沒有地形變化,則無效."

TerrainDeformCrater="新建地形變化:彈坑 [R]"
TerrainDeformCrater="新建的彈坑變形. 中心坐標:(",~X,",",~Y,") 半徑: ",~Radius," 深度: ",~Depth," 持續時間: ",~Duration," 毫秒, 變化類型: ",~Type
TerrainDeformCraterHint="深度可取負數. 永久地形變化在保存遊戲時不會被記錄.

TerrainDeformRipple="新建地形變化:波紋 [R]"
TerrainDeformRipple="新建的波紋變形. 中心坐標:(",~X,",",~Y,") 最終半徑: ",~Radius," 深度: ",~Depth," 持續時間: ",~Duration," 毫秒, 變化次數: ",~Count," 面波數: ",~SpaceWave," 總波數: ",~TimeWave," 初始半徑率: ",~數值," 變化類型: ",~Type
TerrainDeformRipple="初始半徑率=初始半徑/最終半徑."

TerrainDeformWave="新建地形變化:衝擊波 [R]"
TerrainDeformWave="新建的衝擊波變形. 起始坐標:(",~X,",",~Y,") 波方向:(",~X,",",~Y,") 波距離: ",~distance," 波速度: ",~speed," 波半徑: ",~radius," 深度: ",~Depth," 變形效果持續時間: ",~Delay," 毫秒, 變化次數: ",~Count
TerrainDeformWaveHint="深度可取負數. 方向以(X,Y)坐標形式表示,如(1,1)表示45度."

TerrainDeformRandom="新建地形變化:隨機 [R]"
TerrainDeformRandom="新建的隨機變形. 中心坐標:(",~X,",",~Y,") 半徑: ",~Radius," 最小高度變化: ",~Depth," 最大高度變化: ",~Depth," 持續時間: ",~Duration," 毫秒, 變化週期: ",~Duration," 毫秒"
TerrainDeformRandomHint=

GetLastCreatedTerrainDeformation="最後創建的地形變化"
GetLastCreatedTerrainDeformation="最後創建的地形變化"
GetLastCreatedTerrainDeformationHint="最後一個由'環境 - 創建地形變化'動作創建的地形變化."

// returns terraintype
GetTerrainType="指定坐標地形 [R]"
GetTerrainType="坐標(",~X,",",~Y,")處的地形"
GetTerrainTypeHint=

GetTerrainTypeBJ="指定點地形"
GetTerrainTypeBJ=~指定點," 處的地形"
GetTerrainTypeBJHint=


// returns sound
GetLastPlayedSound="最後播放的音效"
GetLastPlayedSound="最後播放的音效"
GetLastPlayedSoundHint="最後一個由'聲音 - 播放音效'或'電影 - 播放單位消息'動作播放的音效."

YDWEGetSoundByInteger="獲取 音效 (整數路徑)"
YDWEGetSoundByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取音效"
YDWEGetSoundByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取音效數據。"

YDWEGetSoundByString="獲取 音效 (字符串路徑)"
YDWEGetSoundByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取音效"
YDWEGetSoundByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取音效數據。"

// returns music
GetLastPlayedMusic="最後播放的音樂"
GetLastPlayedMusic="最後播放的音樂"
GetLastPlayedMusicHint="最後一個由'聲音 - 播放音樂'動作播放的音樂."

// returns quest
CreateQuest="新建任務 [R]"
CreateQuest="新建任務 "
CreateQuestHint="新建一個任務.注：這條毫無用處，別用——everguo"

YDWECreateQuest="新建任務[YDWE]"
YDWECreateQuest="新建一個 ",~Quest Type," 任務,標題: ",~文字," 任務說明: ",~文字," 任務圖標: ",~Icon Path
YDWECreateQuestHint="新建一個任務；YDWE新增。"

GetLastCreatedQuestBJ="最後創建的任務"
GetLastCreatedQuestBJ="最後創建的任務"
GetLastCreatedQuestBJHint="最後一個由'任務 - 創建任務'動作創建的任務."

YDWEGetQuestByInteger="獲取 任務 (整數路徑)"
YDWEGetQuestByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取任務"
YDWEGetQuestByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取任務數據。"

YDWEGetQuestByString="獲取 任務 (字符串路徑)"
YDWEGetQuestByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取任務"
YDWEGetQuestByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取任務數據。"

// returns questitem

YDWECreateQuestItem="創建任務目標項[YDWE]"
YDWECreateQuestItem="為 ",~Quest," 創建一個任務目標項: ",~文字
YDWECreateQuestItemHint="新建一個任務目標項；YDWE新增功能。"

GetLastCreatedQuestItemBJ="最後創建的任務項目"
GetLastCreatedQuestItemBJ="最後創建的任務項目"
GetLastCreatedQuestItemBJHint="最後一個由'任務 - 創建任務項目'動作創建的任務項目."

YDWEGetQuestItemByInteger="獲取 任務目標項 (整數路徑)"
YDWEGetQuestItemByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取任務目標項"
YDWEGetQuestItemByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取任務目標項數據。"

YDWEGetQuestItemByString="獲取 任務目標項 (字符串路徑)"
YDWEGetQuestItemByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取任務目標項"
YDWEGetQuestItemByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取任務目標項數據。"

// returns defeatcondition

GetLastCreatedDefeatConditionBJ="最後創建的失敗條件"
GetLastCreatedDefeatConditionBJ="最後創建的失敗條件"
GetLastCreatedDefeatConditionBJHint="最後一個由'任務 - 創建失敗條件'動作創建的失敗條件."


// returns dialog

GetClickedDialogBJ="點擊的對話框"
GetClickedDialogBJ="點擊的對話框"
GetClickedDialogBJHint="響應'對話框 - 點擊對話框/按鈕'事件."

DialogCreate="新建對話框 [R]"
DialogCreate="新建對話框"
DialogCreateHint="創建新的對話框."

YDWEGetDialogByInteger="獲取 對話框 (整數路徑)"
YDWEGetDialogByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取對話框"
YDWEGetDialogByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取對話框數據。"

YDWEGetDialogByString="獲取 對話框 (字符串路徑)"
YDWEGetDialogByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取對話框"
YDWEGetDialogByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取對話框數據。"

// returns button
DialogAddButton="添加對話框按鈕 [R]"
DialogAddButton="給 ",~對話框," 添加按鈕, 使用標題: ",~文字," 快捷鍵: ",~HotKey
DialogAddButtonHint="會創建對話框按鈕."

YDWEGetButtonByInteger="獲取 對話框按鈕 (整數路徑)"
YDWEGetButtonByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取對話框按鈕"
YDWEGetButtonByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取對話框按鈕數據。"

YDWEGetButtonByString="獲取 對話框按鈕 (字符串路徑)"
YDWEGetButtonByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取對話框按鈕"
YDWEGetButtonByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取對話框按鈕數據。"

GetLastCreatedButtonBJ="最後創建的對話框按鈕"
GetLastCreatedButtonBJ="最後創建的對話框按鈕"
GetLastCreatedButtonBJHint="最後一個由'對話框 - 創建對話框按鈕'動作創建的對話框按鈕."

GetClickedButtonBJ="點擊的對話框按鈕"
GetClickedButtonBJ="點擊的對話框按鈕"
GetClickedButtonBJHint="響應'對話框 - 點擊對話框/按鈕'事件."


// returns leaderboard
CreateLeaderboard="新建排行榜 [R]"
CreateLeaderboard="新建的空排行榜"
CreateLeaderboardHint="會創建排行榜."

GetLastCreatedLeaderboard="最後創建的排行榜"
GetLastCreatedLeaderboard="最後創建的排行榜"
GetLastCreatedLeaderboardHint="最後一個由'排行榜 - 創建排行榜'動作創建的排行榜."

PlayerGetLeaderboardBJ="玩家使用的排行榜"
PlayerGetLeaderboardBJ=~Player," 使用的排行榜"
PlayerGetLeaderboardBJHint="每個玩家只能使用1個排行榜."

YDWEGetLeaderboardByInteger="獲取 排行榜 (整數路徑)"
YDWEGetLeaderboardByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取排行榜"
YDWEGetLeaderboardByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取排行榜數據。"

YDWEGetLeaderboardByString="獲取 排行榜 (字符串路徑)"
YDWEGetLeaderboardByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取排行榜"
YDWEGetLeaderboardByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取排行榜數據。"

// returns multiboard
CreateMultiboard="新建多面板 [R]"
CreateMultiboard="新建的空多面板"
CreateMultiboardHint="會創建多面板."

GetLastCreatedMultiboard="最後創建的多面板"
GetLastCreatedMultiboard="最後創建的多面板"
GetLastCreatedMultiboardHint="最後一個由'多面板 - 創建多面板'動作創建的多面板."

YDWEGetMultiBoardByInteger="獲取 多面板 (整數路徑)"
YDWEGetMultiBoardByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取多面板"
YDWEGetMultiBoardByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取多面板數據。"

YDWEGetMultiBoardByString="獲取 多面板 (字符串路徑)"
YDWEGetMultiBoardByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取多面板"
YDWEGetMultiBoardByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取多面板數據。"

// returns multiboarditem

MultiboardGetItem="多面板項目 [R]"
MultiboardGetItem=~多面板," 的第 ",~X," 行,第 ",~Y," 列項"
MultiboardGetItemHint="(0,0)作為多面板首項,會創建多面板項目."

YDWEGetMultiBoardItemByInteger="獲取 多面板項目 (整數路徑)"
YDWEGetMultiBoardItemByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取多面板項目"
YDWEGetMultiBoardItemByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取多面板項目數據。"

YDWEGetMultiBoardItemByString="獲取 多面板項目 (字符串路徑)"
YDWEGetMultiBoardItemByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取多面板項目"
YDWEGetMultiBoardItemByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取多面板項目數據。"

// returns timer
CreateTimer="新建計時器 [R]"
CreateTimer="新建的計時器"
CreateTimerHint="會創建計時器."

GetLastCreatedTimerBJ="最後啟用的計時器"
GetLastCreatedTimerBJ="最後啟用的計時器"
GetLastCreatedTimerBJHint="最後一個由'計時器 - 啟用計時器'動作啟用的計時器."

GetExpiredTimer="到期的計時器"
GetExpiredTimer="到期的計時器"
GetExpiredTimerHint="響應'時間 - 計時器到期'事件."

YDWEGetTimerByInteger="獲取 計時器 (整數路徑)"
YDWEGetTimerByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取計時器"
YDWEGetTimerByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取計時器數據。"

YDWEGetTimerByString="獲取 計時器 (字符串路徑)"
YDWEGetTimerByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取計時器"
YDWEGetTimerByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取計時器數據。"

YDWERemoveAttackWaveReturnTimer="最後創建的刷兵計時器[YDWE]"
YDWERemoveAttackWaveReturnTimer="最後創建的刷兵計時器"
YDWERemoveAttackWaveReturnTimerHint="響應刷兵系統"


            ="自定義代碼 [C]"
            ="代碼: ",~Jass代碼
            Hint="輸入一行Jass代碼"


// returns timerdialog
CreateTimerDialog="新建計時器窗口 [R]"
CreateTimerDialog="為 ",~計時器," 新建計時窗口"
CreateTimerDialogHint="為一個計時器創建一個新建計時器窗口."

GetLastCreatedTimerDialogBJ="最後創建的計時器窗口"
GetLastCreatedTimerDialogBJ="最後創建的計時器窗口"
GetLastCreatedTimerDialogBJHint="最後一個由'計時器 - 創建計時器窗口'動作創建的計時器窗口."

YDWEGetTimerDialogByInteger="獲取 計時器窗口 (整數路徑)"
YDWEGetTimerDialogByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取計時器窗口"
YDWEGetTimerDialogByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取計時器窗口數據。"

YDWEGetTimerDialogByString="獲取 計時器窗口 (字符串路徑)"
YDWEGetTimerDialogByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取計時器窗口"
YDWEGetTimerDialogByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取計時器窗口數據。"

// returns gamecache
InitGameCache="新建遊戲緩存 [R]"
InitGameCache="新建遊戲緩存: ",~緩存名
InitGameCacheHint="創建一個新的遊戲緩存,一個地圖最多只有有256個遊戲緩存."

GetLastCreatedGameCacheBJ="最後創建的遊戲緩存"
GetLastCreatedGameCacheBJ="最後創建的遊戲緩存"
GetLastCreatedGameCacheBJHint="最後一個由'遊戲緩存 - 創建緩存'動作創建的緩存."

// returns hashtable

              ="自定義代碼 [C]"
              ="代碼: ",~Jass代碼
              Hint="輸入一行Jass代碼"

YDWEInitHashtable="新建哈希表(YDWE)"
YDWEInitHashtable="新建哈希表"
YDWEInitHashtableHint="獲得一個新哈希表。"

GetLastCreatedHashtableBJ="最後創建的哈希表"
GetLastCreatedHashtableBJ="最後創建的哈希表"
GetLastCreatedHashtableBJHint="能得到通過 '哈希表 - 新建哈希表' 最後一次創建的哈希表"

// returns Trackable
CreateTrackable="新建可追蹤物 [R]"
CreateTrackable="新建的可追蹤物, 使用模型: ",~模型名字," 所在位置: ( ",~X軸," , ",~Y軸," ) 面向角度: ",~數值," 度"
CreateTrackableHint="可用來響應鼠標的移動和點擊. 會創建可追蹤物."

GetTriggeringTrackable="事件響應 - 觸發可追蹤物 [R]"
GetTriggeringTrackable="事件響應 - 觸發可追蹤物"
GetTriggeringTrackableHint=

YDWEGetTrackableByInteger="獲取 可追蹤物 (整數路徑)"
YDWEGetTrackableByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取可追蹤物"
YDWEGetTrackableByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取可追蹤物數據。"

YDWEGetTrackableByString="獲取 可追蹤物 (字符串路徑)"
YDWEGetTrackableByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取可追蹤物"
YDWEGetTrackableByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取可追蹤物數據。"

// returns texttag
CreateTextTag="新建漂浮文字 [R]"
CreateTextTag="新建的空漂浮文字"
CreateTextTagHint="會創建漂浮文字."

GetLastCreatedTextTag="最後創建的漂浮文字"
GetLastCreatedTextTag="最後創建的漂浮文字"
GetLastCreatedTextTagHint="最後一個由'漂浮文字 - 創建漂浮文字'動作創建的漂浮文字."

YDWEGetTextTagByInteger="獲取 漂浮文字 (整數路徑)"
YDWEGetTextTagByInteger="從存儲目錄-> ",~整數,"，標籤-> ",~整數," 上獲取漂浮文字"
YDWEGetTextTagByIntegerHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取漂浮文字數據。"

YDWEGetTextTagByString="獲取 漂浮文字 (字符串路徑)"
YDWEGetTextTagByString="從存儲目錄-> ",~字符串,"，標籤-> ",~字符串," 上獲取漂浮文字"
YDWEGetTextTagByStringHint="通過輸入的路徑，系統會根據當前魔獸版本從緩存或HashTable上獲取漂浮文字數據。"


//H2I
YDWEGetUnitID="獲取 單位 的整數地址"
YDWEGetUnitID="獲取 ",~單位," 的整數地址"
YDWEGetUnitIDHint="可以把一個單位轉成整數，方便存入緩存或Hash表。"

YDWEGetPlayerID="獲取 玩家 的整數地址"
YDWEGetPlayerID="獲取 ",~玩家," 的整數地址"
YDWEGetPlayerIDHint="可以把一個玩家轉成整數，方便存入緩存或Hash表。"

YDWEGetItemID="獲取 物品 的整數地址"
YDWEGetItemID="獲取 ",~物品," 的整數地址"
YDWEGetItemIDHint="可以把一個物品轉成整數，方便存入緩存或Hash表。"

YDWEGetTimerID="獲取 計時器 的整數地址"
YDWEGetTimerID="獲取 ",~計時器," 的整數地址"
YDWEGetTimerIDHint="可以把一個計時器轉成整數，方便存入緩存或Hash表。"

YDWEGetTriggerID="獲取 觸發器 的整數地址"
YDWEGetTriggerID="獲取 ",~觸發器," 的整數地址"
YDWEGetTriggerIDHint="可以把一個觸發器轉成整數，方便存入緩存或Hash表。"

YDWEGetGroupID="獲取 單位組 的整數地址"
YDWEGetGroupID="獲取 ",~單位組," 的整數地址"
YDWEGetGroupIDHint="可以把一個單位組轉成整數，方便存入緩存或Hash表。"

YDWEGetLocationID="獲取 點 的整數地址"
YDWEGetLocationID="獲取 ",~點," 的整數地址"
YDWEGetLocationIDHint="可以把一個點轉成整數，方便存入緩存或Hash表。"

YDWEGetUnitTypeID="獲取 單位類型 的整數地址"
YDWEGetUnitTypeID="獲取 ",~單位類型," 的整數地址"
YDWEGetUnitTypeIDHint="可以把一個單位類型轉成整數，方便存入緩存或Hash表。"

YDWEGetAbilityTypeID="獲取 技能類型 的整數地址"
YDWEGetAbilityTypeID="獲取 ",~技能類型," 的整數地址"
YDWEGetAbilityTypeIDHint="可以把一個技能類型轉成整數，方便存入緩存或Hash表。"

YDWEGetItemTypeID="獲取 物品類型 的整數地址"
YDWEGetItemTypeID="獲取 ",~物品類型," 的整數地址"
YDWEGetItemTypeIDHint="可以把一個物品類型轉成整數，方便存入緩存或Hash表。"

YDWEGetMultiboardID="獲取 多面板 的整數地址"
YDWEGetMultiboardID="獲取 ",~多面板," 的整數地址"
YDWEGetMultiboardIDHint="可以把一個多面板轉成整數，方便存入緩存或Hash表。"

YDWEGetMultiboardItemID="獲取 多面板項目 的整數地址"
YDWEGetMultiboardItemID="獲取 ",~多面板項目," 的整數地址"
YDWEGetMultiboardItemIDHint="可以把一個多面板項目轉成整數，方便存入緩存或Hash表。"

YDWEGetTextTagID="獲取 漂浮文字 的整數地址"
YDWEGetTextTagID="獲取 ",~漂浮文字," 的整數地址"
YDWEGetTextTagIDHint="可以把一個漂浮文字轉成整數，方便存入緩存或Hash表。"

YDWEGetLightningID="獲取 閃電 的整數地址"
YDWEGetLightningID="獲取 ",~閃電," 的整數地址"
YDWEGetLightningIDHint="可以把一個閃電成轉整數，方便存入緩存或Hash表。"

YDWEGetRegionID="獲取 區域 的整數地址"
YDWEGetRegionID="獲取 ",~區域," 的整數地址"
YDWEGetRegionIDHint="可以把一個區域轉成整數，方便存入緩存或Hash表。"

YDWEGetRectID="獲取 地區 的整數地址"
YDWEGetRectID="獲取 ",~地區," 的整數地址"
YDWEGetRectIDHint="可以把一個地區轉成整數，方便存入緩存或Hash表。"

YDWEGetLeaderboardID="獲取 排行榜 的整數地址"
YDWEGetLeaderboardID="獲取 ",~排行榜," 的整數地址"
YDWEGetLeaderboardIDHint="可以把一個排行榜轉成整數，方便存入緩存或Hash表。"

YDWEGetEffectID="獲取 特效 的整數地址"
YDWEGetEffectID="獲取 ",~特效," 的整數地址"
YDWEGetEffectIDHint="可以把一個特效轉成整數，方便存入緩存或Hash表。"

YDWEGetDestructableID="獲取 可破壞物 的整數地址"
YDWEGetDestructableID="獲取 ",~可破壞物," 的整數地址"
YDWEGetDestructableIDHint="可以把一個可破壞物轉成整數，方便存入緩存或Hash表。"

YDWEGetTriggerConditionID="獲取 觸發器條件 的整數地址"
YDWEGetTriggerConditionID="獲取 ",~觸發器條件," 的整數地址"
YDWEGetTriggerConditionIDHint="可以把一個觸發器條件轉成整數，方便存入緩存或Hash表。"

YDWEGetTriggerActionID="獲取 觸發器動作 的整數地址"
YDWEGetTriggerActionID="獲取 ",~觸發器動作," 的整數地址"
YDWEGetTriggerActionIDHint="可以把一個觸發器動作轉成整數，方便存入緩存或Hash表。"

YDWEGetTriggerEventID="獲取 事件 的整數地址"
YDWEGetTriggerEventID="獲取 ",~事件," 的整數地址"
YDWEGetTriggerEventIDHint="可以把一個事件轉成整數，方便存入緩存或Hash表。"

YDWEGetForceID="獲取 勢力 的整數地址"
YDWEGetForceID="獲取 ",~勢力," 的整數地址"
YDWEGetForceIDHint="可以把一個勢力轉成整數，方便存入緩存或Hash表。"

YDWEGetBoolexprID="獲取 布爾表達式 的整數地址"
YDWEGetBoolexprID="獲取 ",~布爾表達式," 的整數地址"
YDWEGetBoolexprIDHint="可以把一個布爾表達式轉成整數，方便存入緩存或Hash表。"


GetStoredBooleanBJ="讀取布爾值"
GetStoredBooleanBJ="從遊戲緩存讀取布爾值,名稱: ",~文字," 類別: ",~Category," 緩存: ",~Game Cache
GetStoredBooleanBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"

GetStoredIntegerBJ="緩存讀取整數"
GetStoredIntegerBJ="從遊戲緩存讀取整數,名稱: ",~文字," 類別: ",~Category," 緩存: ",~Game Cache
GetStoredIntegerBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"

GetStoredRealBJ="緩存讀取實數"
GetStoredRealBJ="從遊戲緩存讀取實數,名稱: ",~文字," 類別: ",~Category," 緩存: ",~Game Cache
GetStoredRealBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"

GetStoredStringBJ="讀取字符串"
GetStoredStringBJ="從遊戲緩存讀取字符串,名稱: ",~文字," 類別: ",~Category," 緩存: ",~Game Cache
GetStoredStringBJHint="原版UI，英文的語序的關係，為了使UI讀起來更流暢，添加了一層封裝，但這對中文來說就是畫蛇添足了"




//***************************************************************************
[AIFunctionStrings]
// These functions are defined in AIEditorData.txt

// --- Boolean

TownThreatened="基地被攻擊"
TownThreatened="基地被攻擊"
TownThreatenedHint="

TownHasMine="基地有金礦"
TownHasMine="#",~ID," 基地有金礦"

TownHasHall="基地有主建築"
TownHasHall="#",~ID," 基地有主建築"

CaptainIsHome="攻擊指揮官在家"
CaptainIsHome="攻擊指揮官在家"

CaptainIsFull="攻擊組準備完畢"
CaptainIsFull="攻擊組準備完畢"

CaptainIsEmpty="攻擊組為空"
CaptainIsEmpty="攻擊組為空"

CaptainRetreating="攻擊指揮官撤退"
CaptainRetreating="攻擊指揮官撤退"

CaptainAtGoal="攻擊指揮官到達目的地"
CaptainAtGoal="攻擊指揮官到達目的地"

CaptainInCombat="指揮官在戰鬥"
CaptainInCombat=~Captain Type," 指揮官在戰鬥"

CreepsOnMap="存在中立生物"
CreepsOnMap="存在中立生物"

ExpansionNeeded="需要擴張"
ExpansionNeeded="需要擴張"
ExpansionNeededHint="當AI需要開分礦時返回True."

// --- Integer

GetUnitCount="單位總數"
GetUnitCount=~單位類型," 的總數"
GetUnitCountHint="包括正在建造的單位."

GetUnitCountDone="已完成單位總數"
GetUnitCountDone="已完成 ",~單位類型," 的總數"
GetUnitCountDoneHint="不包括包括正在建造的單位."

GetTownUnitCount="單位總數(指定基地)"
GetTownUnitCount=~單位類型," 的總數在#",~Town," 基地(只取已完成單位: ",~Option,")"
GetTownUnitCountHint="

GetMinesOwned="擁有金礦數量"
GetMinesOwned="擁有金礦數量"
GetMinesOwnedHint="AI玩家正在使用的金礦數量."

GetGoldOwned="未被使用的金礦數量"
GetGoldOwned="未被使用的金礦數量"
GetGoldOwnedHint="未被採集保持滿儲金量的金礦."

TownWithMine="有金礦的基地ID"
TownWithMine="有金礦的基地ID"
TownWithMineHint="返回編號最靠前的有金礦的基地"

GetGold="當前黃金資源"
GetGold="當前黃金資源"
GetGoldHint="當前AI玩家擁有的黃金資源"

GetWood="當前木材資源"
GetWood="當前木材資源"
GetWoodHint="當前AI玩家擁有的木材資源"

GetUnitGoldCost="單位造價(黃金)"
GetUnitGoldCost="建造 ",~單位類型," 所需黃金"

GetUnitWoodCost="單位造價(木材)"
GetUnitWoodCost="建造 ",~單位類型," 所需木材"

GetUnitBuildTime="單位建造時間"
GetUnitBuildTime=~單位類型," 的建造時間"
GetUnitBuildTimeHint="時間單位為秒."

GetUpgradeLevel="當前科技等級"
GetUpgradeLevel="當前",~科技," 的等級"

GetUpgradeGoldCost="科技升級花費黃金"
GetUpgradeGoldCost=~科技," 升級花費黃金"

GetUpgradeWoodCost="科技升級花費木材"
GetUpgradeWoodCost=~科技," 升級花費木材"

GetNextExpansion="下一個擴張點ID"
GetNextExpansion="下一個擴張點ID"
GetNextExpansionHint=

FoodUsed="已使用人口"
FoodUsed="已使用人口"
FoodUsedHint="AI玩家的當前人口數"

TotalFoodProduced="可用人口數"
TotalFoodProduced="可用人口數"
TotalFoodProducedHint="AI玩家的當前可使用人口數"

GetFoodMade="單位提供人口數量"
GetFoodMade=~單位類型," 可提供的人口數量"

CommandsWaiting="等待命令數量"
CommandsWaiting="等待命令數量"
CommandsWaitingHint="命令可以通過觸發動作'AI - 發送AI命令'發送給AI玩家."

CheckLastCommand="最後一條命令"
CheckLastCommand="最後一條發送的命令, ",~Option," 命令"
CheckLastCommandHint="命令可以通過觸發動作'AI - 發送AI命令'發送給AI玩家."

CheckLastCommandData="最後一條命令數據"
CheckLastCommandData="最後一條發送命令的數據, ",~Option," 命令"
CheckLastCommandDataHint="命令可以通過觸發動作'AI - 發送AI命令'發送給AI玩家."

CaptainGroupSize="攻擊組人數"
CaptainGroupSize="攻擊組人數"
CaptainGroupSizeHint="攻擊組當前人數."

CaptainReadinessHP="攻擊組生命級別"
CaptainReadinessHP="攻擊組生命級別"
CaptainReadinessHPHint="生命級別為所有攻擊組單位的平均百分比血量,最高為100."

CaptainReadinessMa="攻擊魔法級別"
CaptainReadinessMa="攻擊組魔法級別"
CaptainReadinessMaHint="魔法級別為所有攻擊組單位的平均百分比魔法值,最高為100."

CurrentAttackWave="當前攻擊波數"
CurrentAttackWave="當前攻擊波數"
CurrentAttackWaveHint="攻擊波數在AI編輯器攻擊表中定義."

MeleeDifficulty="對戰難度等級"
MeleeDifficulty="對戰難度等級"

